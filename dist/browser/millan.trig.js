!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("trig",[],t):"object"==typeof exports?exports.trig=t():(e.millan=e.millan||{},e.millan.trig=t())}("undefined"!=typeof self?self:this,function(){return function(e){function t(t){for(var r,E,T=t[0],c=t[1],i=t[2],S=0,A=[];S<T.length;S++)E=T[S],a[E]&&A.push(a[E][0]),a[E]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(O&&O(t);A.length;)A.shift()();return o.push.apply(o,i||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,T=1;T<n.length;T++){var c=n[T];0!==a[c]&&(r=!1)}r&&(o.splice(t--,1),e=E(E.s=n[0]))}return e}var r={},a={7:0},o=[];function E(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,E),n.l=!0,n.exports}E.m=e,E.c=r,E.d=function(e,t,n){E.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},E.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},E.t=function(e,t){if(1&t&&(e=E(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(E.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)E.d(n,r,function(t){return e[t]}.bind(null,r));return n},E.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(t,"a",t),t},E.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},E.p="";var T=("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[],c=T.push.bind(T);T.push=t,T=T.slice();for(var i=0;i<T.length;i++)t(T[i]);var O=c;return o.push([69,0]),n()}({1:function(e,t,n){"use strict";n.r(t),n.d(t,"keywords",function(){return o});var r=n(0),a=Object(r.createToken)({name:"MAX_LENGTH",pattern:/MAX LENGTH/i}),o={SELECT:Object(r.createToken)({name:"SELECT",pattern:/SELECT/i}),CONSTRUCT:Object(r.createToken)({name:"CONSTRUCT",pattern:/CONSTRUCT/i}),DISTINCT:Object(r.createToken)({name:"DISTINCT",pattern:/DISTINCT/i}),START:Object(r.createToken)({name:"START",pattern:/START/i}),END:Object(r.createToken)({name:"END",pattern:/END/i}),VIA:Object(r.createToken)({name:"VIA",pattern:/VIA/i}),PATHS:Object(r.createToken)({name:"PATHS",pattern:/PATHS/i}),PATHS_ALL:Object(r.createToken)({name:"PATHS_ALL",pattern:/PATHS ALL/i}),PATHS_SHORTEST:Object(r.createToken)({name:"PATHS_SHORTEST",pattern:/PATHS SHORTEST/i}),CYCLIC:Object(r.createToken)({name:"CYCLIC",pattern:/CYCLIC/i}),AS:Object(r.createToken)({name:"AS",pattern:/AS/i}),WHERE:Object(r.createToken)({name:"WHERE",pattern:/WHERE/i}),A:Object(r.createToken)({name:"A",pattern:/a/i}),GroupBy:Object(r.createToken)({name:"GroupBy",pattern:/group by/i}),OrderBy:Object(r.createToken)({name:"OrderBy",pattern:/order by/i}),By:Object(r.createToken)({name:"By",pattern:/By/i}),BASE:Object(r.createToken)({name:"BASE",pattern:/BASE/i}),PREFIX:Object(r.createToken)({name:"PREFIX",pattern:/PREFIX/i}),DESCRIBE:Object(r.createToken)({name:"DESCRIBE",pattern:/DESCRIBE/i}),ASK:Object(r.createToken)({name:"ASK",pattern:/ASK/i}),FROM:Object(r.createToken)({name:"FROM",pattern:/FROM/i}),REDUCED:Object(r.createToken)({name:"REDUCED",pattern:/REDUCED/i}),NAMED:Object(r.createToken)({name:"NAMED",pattern:/NAMED/i}),HAVING:Object(r.createToken)({name:"HAVING",pattern:/HAVING/i}),ASC:Object(r.createToken)({name:"ASC",pattern:/ASC/i}),DESC:Object(r.createToken)({name:"DESC",pattern:/DESC/i}),OFFSET:Object(r.createToken)({name:"OFFSET",pattern:/OFFSET/i}),LIMIT:Object(r.createToken)({name:"LIMIT",pattern:/LIMIT/i}),VALUES:Object(r.createToken)({name:"VALUES",pattern:/VALUES/i}),LOAD:Object(r.createToken)({name:"LOAD",pattern:/LOAD/i}),SILENT:Object(r.createToken)({name:"SILENT",pattern:/SILENT/i}),INTO:Object(r.createToken)({name:"INTO",pattern:/INTO/i}),CLEAR:Object(r.createToken)({name:"CLEAR",pattern:/CLEAR/i}),DROP:Object(r.createToken)({name:"DROP",pattern:/DROP/i}),CREATE:Object(r.createToken)({name:"CREATE",pattern:/CREATE/i}),ADD:Object(r.createToken)({name:"ADD",pattern:/ADD/i}),TO:Object(r.createToken)({name:"TO",pattern:/TO/i}),MOVE:Object(r.createToken)({name:"MOVE",pattern:/MOVE/i}),COPY:Object(r.createToken)({name:"COPY",pattern:/COPY/i}),INSERT_DATA:Object(r.createToken)({name:"INSERT_DATA",pattern:/Insert +Data/i}),DELETE_DATA:Object(r.createToken)({name:"DELETE_DATA",pattern:/Delete +Data/i}),DELETE_WHERE:Object(r.createToken)({name:"DELETE_WHERE",pattern:/Delete +Where/i}),WITH:Object(r.createToken)({name:"WITH",pattern:/WITH/i}),DELETE:Object(r.createToken)({name:"DELETE",pattern:/DELETE/i}),INSERT:Object(r.createToken)({name:"INSERT",pattern:/INSERT/i}),USING:Object(r.createToken)({name:"USING",pattern:/USING/i}),DEFAULT:Object(r.createToken)({name:"DEFAULT",pattern:/DEFAULT/i}),GRAPH:Object(r.createToken)({name:"GRAPH",pattern:/GRAPH/i}),ALL:Object(r.createToken)({name:"ALL",pattern:/ALL/i}),OPTIONAL:Object(r.createToken)({name:"OPTIONAL",pattern:/OPTIONAL/i}),SERVICE:Object(r.createToken)({name:"SERVICE",pattern:/SERVICE/i}),BIND:Object(r.createToken)({name:"BIND",pattern:/BIND/i}),UNNEST:Object(r.createToken)({name:"UNNEST",pattern:/UNNEST/i}),UNDEF:Object(r.createToken)({name:"UNDEF",pattern:/UNDEF/i}),MINUS:Object(r.createToken)({name:"MINUS",pattern:/MINUS/i}),UNION:Object(r.createToken)({name:"UNION",pattern:/UNION/i}),FILTER:Object(r.createToken)({name:"FILTER",pattern:/FILTER/i}),STR:Object(r.createToken)({name:"STR",pattern:/STR/i}),LANG:Object(r.createToken)({name:"LANG",pattern:/LANG/i}),LANGMATCHES:Object(r.createToken)({name:"LANGMATCHES",pattern:/LANGMATCHES/i}),DATATYPE:Object(r.createToken)({name:"DATATYPE",pattern:/DATATYPE/i}),BOUND:Object(r.createToken)({name:"BOUND",pattern:/BOUND/i}),IRI:Object(r.createToken)({name:"IRI",pattern:/IRI/i}),URI:Object(r.createToken)({name:"URI",pattern:/URI/i}),BNODE:Object(r.createToken)({name:"BNODE",pattern:/BNODE/i}),RAND:Object(r.createToken)({name:"RAND",pattern:/RAND/i}),ABS:Object(r.createToken)({name:"ABS",pattern:/ABS/i}),CEIL:Object(r.createToken)({name:"CEIL",pattern:/CEIL/i}),FLOOR:Object(r.createToken)({name:"FLOOR",pattern:/FLOOR/i}),ROUND:Object(r.createToken)({name:"ROUND",pattern:/ROUND/i}),CONCAT:Object(r.createToken)({name:"CONCAT",pattern:/CONCAT/i}),STRLEN:Object(r.createToken)({name:"STRLEN",pattern:/STRLEN/i}),UCASE:Object(r.createToken)({name:"UCASE",pattern:/UCASE/i}),LCASE:Object(r.createToken)({name:"LCASE",pattern:/LCASE/i}),ENCODE_FOR_URI:Object(r.createToken)({name:"ENCODE_FOR_URI",pattern:/ENCODE_FOR_URI/i}),CONTAINS:Object(r.createToken)({name:"CONTAINS",pattern:/CONTAINS/i}),STRSTARTS:Object(r.createToken)({name:"STRSTARTS",pattern:/STRSTARTS/i}),STRENDS:Object(r.createToken)({name:"STRENDS",pattern:/STRENDS/i}),STRBEFORE:Object(r.createToken)({name:"STRBEFORE",pattern:/STRBEFORE/i}),STRAFTER:Object(r.createToken)({name:"STRAFTER",pattern:/STRAFTER/i}),YEAR:Object(r.createToken)({name:"YEAR",pattern:/YEAR/i}),MONTH:Object(r.createToken)({name:"MONTH",pattern:/MONTH/i}),DAY:Object(r.createToken)({name:"DAY",pattern:/DAY/i}),HOURS:Object(r.createToken)({name:"HOURS",pattern:/HOURS/i}),MINUTES:Object(r.createToken)({name:"MINUTES",pattern:/MINUTES/i}),SECONDS:Object(r.createToken)({name:"SECONDS",pattern:/SECONDS/i}),TIMEZONE:Object(r.createToken)({name:"TIMEZONE",pattern:/TIMEZONE/i}),TZ:Object(r.createToken)({name:"TZ",pattern:/TZ/i}),NOW:Object(r.createToken)({name:"NOW",pattern:/NOW/i}),UUID:Object(r.createToken)({name:"UUID",pattern:/UUID/i}),STRUUID:Object(r.createToken)({name:"STRUUID",pattern:/STRUUID/i}),MD5:Object(r.createToken)({name:"MD5",pattern:/MD5/i}),SHA1:Object(r.createToken)({name:"SHA1",pattern:/SHA1/i}),SHA256:Object(r.createToken)({name:"SHA256",pattern:/SHA256/i}),SHA384:Object(r.createToken)({name:"SHA384",pattern:/SHA384/i}),SHA512:Object(r.createToken)({name:"SHA512",pattern:/SHA512/i}),COALESCE:Object(r.createToken)({name:"COALESCE",pattern:/COALESCE/i}),IF:Object(r.createToken)({name:"IF",pattern:/IF/i}),STRLANG:Object(r.createToken)({name:"STRLANG",pattern:/STRLANG/i}),STRDT:Object(r.createToken)({name:"STRDT",pattern:/STRDT/i}),sameTerm:Object(r.createToken)({name:"sameTerm",pattern:/sameTerm/i}),isIRI:Object(r.createToken)({name:"isIRI",pattern:/isIRI/i}),isURI:Object(r.createToken)({name:"isURI",pattern:/isURI/i}),isBlank:Object(r.createToken)({name:"isBlank",pattern:/isBlank/i}),isLiteral:Object(r.createToken)({name:"isLiteral",pattern:/isLiteral/i}),isNumeric:Object(r.createToken)({name:"isNumeric",pattern:/isNumeric/i}),REGEX:Object(r.createToken)({name:"REGEX",pattern:/REGEX/i}),SUBSTR:Object(r.createToken)({name:"SUBSTR",pattern:/SUBSTR/i}),REPLACE:Object(r.createToken)({name:"REPLACE",pattern:/REPLACE/i}),EXISTS:Object(r.createToken)({name:"EXISTS",pattern:/EXISTS/i}),NOT_EXISTS:Object(r.createToken)({name:"NOT_EXISTS",pattern:/NOT EXISTS/i}),COUNT:Object(r.createToken)({name:"COUNT",pattern:/COUNT/i}),SUM:Object(r.createToken)({name:"SUM",pattern:/SUM/i}),MIN:Object(r.createToken)({name:"MIN",pattern:/MIN/i}),AVG:Object(r.createToken)({name:"AVG",pattern:/AVG/i}),SAMPLE:Object(r.createToken)({name:"SAMPLE",pattern:/SAMPLE/i}),GROUP_CONCAT:Object(r.createToken)({name:"GROUP_CONCAT",pattern:/GROUP_CONCAT/i}),SEPARATOR:Object(r.createToken)({name:"SEPARATOR",pattern:/SEPARATOR/i}),TRUE:Object(r.createToken)({name:"TRUE",pattern:/TRUE/i}),FALSE:Object(r.createToken)({name:"FALSE",pattern:/FALSE/i}),IN:Object(r.createToken)({name:"IN",pattern:/IN/i}),NOT_IN:Object(r.createToken)({name:"NOT_IN",pattern:/NOT IN/i}),MAX_LENGTH:a,MAX:Object(r.createToken)({name:"MAX",pattern:/MAX/i,longer_alt:a})}},12:function(e,t,n){"use strict";n.d(t,"a",function(){return TurtleParser});var r,a=n(0),o=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),E=function(){return(E=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},T=n(7),c=T.turtleTokenTypes,i=T.turtleTokenMap,TurtleParser=function(e){function TurtleParser(t,n,r,o){void 0===n&&(n=c),void 0===r&&(r=n),void 0===o&&(o=!0);var T=e.call(this,n,E({outputCst:!0,recoveryEnabled:!0},t))||this;return T.namespacesMap={},T.semanticErrors=[],T.resetManagedState=function(){T.namespacesMap={},T.semanticErrors=[]},T.tokenize=function(e){return T.lexer.tokenize(e).tokens},T.parse=function(e){T.input=T.lexer.tokenize(e).tokens;var t=T.turtleDoc(),n=T.errors.slice(),r=T.semanticErrors.slice();return T.resetManagedState(),{errors:n,semanticErrors:r,cst:t}},T.turtleDoc=T.RULE("turtleDoc",function(){T.MANY(function(){return T.SUBRULE(T.statement)})}),T.statement=T.RULE("statement",function(){T.OR([{ALT:function(){return T.SUBRULE(T.directive)}},{ALT:function(){T.SUBRULE(T.triples),T.CONSUME(i.Period)}}])}),T.directive=T.RULE("directive",function(){T.OR([{ALT:function(){return T.SUBRULE(T.prefixID)}},{ALT:function(){return T.SUBRULE(T.base)}},{ALT:function(){return T.SUBRULE(T.sparqlPrefix)}},{ALT:function(){return T.SUBRULE(T.sparqlBase)}}])}),T.prefixID=T.RULE("prefixID",function(){T.CONSUME(i.TTL_PREFIX);var e=T.CONSUME(i.PNAME_NS),t=T.CONSUME(i.IRIREF),n=e.image.slice(0,-1),r=t.image;T.namespacesMap[n]=r,T.CONSUME(i.Period)}),T.base=T.RULE("base",function(){T.CONSUME(i.TTL_BASE),T.CONSUME(i.IRIREF),T.CONSUME(i.Period)}),T.sparqlBase=T.RULE("sparqlBase",function(){T.CONSUME(i.BASE),T.CONSUME(i.IRIREF)}),T.sparqlPrefix=T.RULE("sparqlPrefix",function(){T.CONSUME(i.PREFIX);var e=T.CONSUME(i.PNAME_NS),t=T.CONSUME(i.IRIREF),n=e.image.slice(0,-1),r=t.image;T.namespacesMap[n]=r}),T.triples=T.RULE("triples",function(){T.OR([{ALT:function(){T.SUBRULE(T.subject),T.SUBRULE(T.predicateObjectList)}},{ALT:function(){T.SUBRULE(T.blankNodePropertyList),T.OPTION(function(){return T.SUBRULE1(T.predicateObjectList)})}}])}),T.predicateObjectList=T.RULE("predicateObjectList",function(){T.SUBRULE(T.verb),T.SUBRULE(T.objectList),T.MANY(function(){T.CONSUME(i.Semicolon),T.OPTION(function(){T.SUBRULE1(T.verb),T.SUBRULE1(T.objectList)})})}),T.subject=T.RULE("subject",function(){T.OR([{ALT:function(){return T.SUBRULE(T.iri)}},{ALT:function(){return T.SUBRULE(T.BlankNode)}},{ALT:function(){return T.SUBRULE(T.collection)}}])}),T.predicate=T.RULE("predicate",function(){T.SUBRULE(T.iri)}),T.objectList=T.RULE("objectList",function(){T.SUBRULE(T.object),T.MANY(function(){T.CONSUME(i.Comma),T.SUBRULE1(T.object)})}),T.verb=T.RULE("verb",function(){T.OR([{ALT:function(){return T.SUBRULE(T.predicate)}},{ALT:function(){return T.CONSUME(i.A)}}])}),T.literal=T.RULE("literal",function(){T.OR([{ALT:function(){return T.SUBRULE(T.RDFLiteral)}},{ALT:function(){return T.SUBRULE(T.NumericLiteral)}},{ALT:function(){return T.SUBRULE(T.BooleanLiteral)}}])}),T.blankNodePropertyList=T.RULE("blankNodePropertyList",function(){T.CONSUME(i.LBracket),T.SUBRULE(T.predicateObjectList),T.CONSUME(i.RBracket)}),T.object=T.RULE("object",function(){T.OR([{ALT:function(){return T.SUBRULE(T.iri)}},{ALT:function(){return T.SUBRULE(T.BlankNode)}},{ALT:function(){return T.SUBRULE(T.collection)}},{ALT:function(){return T.SUBRULE(T.blankNodePropertyList)}},{ALT:function(){return T.SUBRULE(T.literal)}}])}),T.collection=T.RULE("collection",function(){T.CONSUME(i.LParen),T.MANY(function(){return T.SUBRULE(T.object)}),T.CONSUME(i.RParen)}),T.NumericLiteral=T.RULE("NumericLiteral",function(){T.OR([{ALT:function(){return T.CONSUME(i.INTEGER)}},{ALT:function(){return T.CONSUME(i.DECIMAL)}},{ALT:function(){return T.CONSUME(i.DOUBLE)}}])}),T.RDFLiteral=T.RULE("RDFLiteral",function(){T.SUBRULE(T.String),T.OPTION(function(){T.OR([{ALT:function(){return T.CONSUME(i.LANGTAG)}},{ALT:function(){T.CONSUME(i.DoubleCaret),T.SUBRULE(T.iri)}}])})}),T.BooleanLiteral=T.RULE("BooleanLiteral",function(){T.OR([{ALT:function(){return T.CONSUME(i.TRUE)}},{ALT:function(){return T.CONSUME(i.FALSE)}}])}),T.String=T.RULE("String",function(){T.OR([{ALT:function(){return T.CONSUME(i.STRING_LITERAL_QUOTE)}},{ALT:function(){return T.CONSUME(i.STRING_LITERAL_SINGLE_QUOTE)}},{ALT:function(){return T.CONSUME(i.STRING_LITERAL_LONG_SINGLE_QUOTE)}},{ALT:function(){return T.CONSUME(i.STRING_LITERAL_LONG_QUOTE)}}])}),T.iri=T.RULE("iri",function(){T.OR([{ALT:function(){return T.CONSUME(i.IRIREF)}},{ALT:function(){return T.SUBRULE(T.PrefixedName)}}])}),T.PrefixedName=T.RULE("PrefixedName",function(){var e=T.OR([{ALT:function(){return T.CONSUME(i.PNAME_LN)}},{ALT:function(){return T.CONSUME(i.PNAME_NS)}}]);e.image.slice(0,e.image.indexOf(":"))in T.namespacesMap||T.semanticErrors.push({name:"NoNamespacePrefixError",message:"A prefix was used for which there was no namespace defined.",token:e,context:{ruleStack:T.getHumanReadableRuleStack(),ruleOccurrenceStack:T.RULE_OCCURRENCE_STACK.slice()},resyncedTokens:[]})}),T.BlankNode=T.RULE("BlankNode",function(){T.OR([{ALT:function(){return T.CONSUME(i.BLANK_NODE_LABEL)}},{ALT:function(){return T.CONSUME(i.ANON)}}])}),T.lexer=new a.Lexer(r),o&&a.Parser.performSelfAnalysis(T),T}return o(TurtleParser,e),TurtleParser}(a.Parser)},2:function(e,t,n){"use strict";n.d(t,"a",function(){return r});var r={or:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new RegExp(e.map(function(e){return"("+e.source+")"}).join("|"))},and:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new RegExp(e.map(function(e){return"("+e.source+")"}).join(""))},option:function(e){return new RegExp("("+e.source+")?")},many:function(e){return new RegExp("("+e.source+")*")}}},3:function(e,t,n){"use strict";n.d(t,"c",function(){return a}),n.d(t,"p",function(){return o}),n.d(t,"x",function(){return E}),n.d(t,"q",function(){return T}),n.d(t,"m",function(){return c}),n.d(t,"d",function(){return i}),n.d(t,"k",function(){return O}),n.d(t,"j",function(){return S}),n.d(t,"l",function(){return L}),n.d(t,"A",function(){return R}),n.d(t,"y",function(){return N}),n.d(t,"w",function(){return u}),n.d(t,"B",function(){return s}),n.d(t,"s",function(){return I}),n.d(t,"t",function(){return p}),n.d(t,"z",function(){return k}),n.d(t,"a",function(){return d}),n.d(t,"r",function(){return m}),n.d(t,"C",function(){return l}),n.d(t,"D",function(){return C}),n.d(t,"E",function(){return b}),n.d(t,"F",function(){return f}),n.d(t,"g",function(){return D}),n.d(t,"o",function(){return _}),n.d(t,"f",function(){return j}),n.d(t,"i",function(){return P}),n.d(t,"n",function(){return y}),n.d(t,"e",function(){return B}),n.d(t,"h",function(){return M}),n.d(t,"G",function(){return G}),n.d(t,"H",function(){return F}),n.d(t,"b",function(){return w}),n.d(t,"v",function(){return H}),n.d(t,"u",function(){return V});var r=n(2),a=/[\s\S]+/,o=/<[^<>\\{}|\^`\u0000-\u0020]*>/,E=/[A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDBFF][\uDC00-\uDFFF]/,T=/@[a-zA-Z]+(-[a-zA-Z0-9]+)*/,c=/\d+/,i=/(\d*\.\d+)|(\d+\.\d*)/,O=/[eE][+-]?\d+/,S=/\\[tbnrf"'\\]/,A=/[\u0020\u0009\u000d\u000a]/,L=/[0-9A-Fa-f]/,R=/\\[_~.\-!\$&'()*+,=\/?#@%;]/,N=r.a.or(E,/_/),u=r.a.or(N,/-/,/\d/,/\u00b7/,/[\u0300-\u036f]/,/[\u203f-\u2040]/),s=r.a.and(E,r.a.option(r.a.and(r.a.many(r.a.or(u,/\./)),u))),I=r.a.and(/%/,L,L),p=r.a.or(I,R),k=r.a.and(r.a.or(N,/:/,/\d/,p),r.a.option(r.a.and(r.a.many(r.a.or(u,/\./,/:/,p)),r.a.or(u,/:/,p)))),U=r.a.and(r.a.or(N,/\d/),r.a.many(r.a.or(N,/\d/,/\u00b7/,/[\u0300-\u036f]/,/[\u203f-\u2040]/))),d=r.a.and(/\[/,r.a.many(A),/\]/),m=r.a.and(/\(/,r.a.many(A),/\)/),l=r.a.and(/'/,r.a.many(r.a.or(/[^\u0027\u005C\u000A\u000D]/,S)),/'/),C=r.a.and(/"/,r.a.many(r.a.or(/[^\u0022\u005C\u000A\u000D]/,S)),/"/),b=r.a.and(/'''/,r.a.many(r.a.and(r.a.option(r.a.or(/'/,/''/)),r.a.or(/[^'\\]/,S))),/'''/),f=r.a.and(/"""/,r.a.many(r.a.and(r.a.option(r.a.or(/"/,/""/)),r.a.or(/[^"\\]/,S))),/"""/),D=r.a.or(r.a.and(/\d+\.\d*/,O),r.a.and(/\.\d+/,O),r.a.and(/\d+/,O)),_=r.a.and(/\+/,c),j=r.a.and(/\+/,i),P=r.a.and(/\+/,D),y=r.a.and(/-/,c),B=r.a.and(/-/,i),M=r.a.and(/-/,D),G=r.a.and(/\?/,U),F=r.a.and(/\$/,U),w=r.a.and(/_:/,r.a.or(N,/\d/),r.a.option(r.a.and(r.a.many(r.a.or(u,/\./)),u))),H=r.a.and(r.a.option(s),/:/),V=r.a.and(H,k)},4:function(e,t,n){"use strict";n.r(t),n.d(t,"terminals",function(){return c});var r=n(0),a=n(3),o=Object(r.createToken)({name:"STRING_LITERAL_LONG1",pattern:a.E}),E=Object(r.createToken)({name:"STRING_LITERAL_LONG2",pattern:a.F}),T=Object(r.createToken)({name:"PNAME_LN",pattern:a.u}),c={IRIREF:Object(r.createToken)({name:"IRIREF",pattern:a.p,label:"<http://example.com>"}),LANGTAG:Object(r.createToken)({name:"LANGTAG",pattern:a.q}),INTEGER:Object(r.createToken)({name:"INTEGER",pattern:a.m}),DECIMAL:Object(r.createToken)({name:"DECIMAL",pattern:a.d}),DOUBLE:Object(r.createToken)({name:"DOUBLE",pattern:a.g}),INTEGER_POSITIVE:Object(r.createToken)({name:"INTEGER_POSITIVE",pattern:a.o}),DECIMAL_POSITIVE:Object(r.createToken)({name:"DECIMAL_POSITIVE",pattern:a.f}),DOUBLE_POSITIVE:Object(r.createToken)({name:"DOUBLE_POSITIVE",pattern:a.i}),INTEGER_NEGATIVE:Object(r.createToken)({name:"INTEGER_NEGATIVE",pattern:a.n}),DECIMAL_NEGATIVE:Object(r.createToken)({name:"DECIMAL_NEGATIVE",pattern:a.e}),DOUBLE_NEGATIVE:Object(r.createToken)({name:"DOUBLE_NEGATIVE",pattern:a.h}),STRING_LITERAL_LONG1:o,STRING_LITERAL_LONG2:E,STRING_LITERAL1:Object(r.createToken)({name:"STRING_LITERAL1",pattern:a.C,longer_alt:o}),STRING_LITERAL2:Object(r.createToken)({name:"STRING_LITERAL2",pattern:a.D,longer_alt:E}),NIL:Object(r.createToken)({name:"NIL",pattern:a.r,label:"()"}),ANON:Object(r.createToken)({name:"ANON",pattern:a.a,label:"[]"}),PNAME_LN:T,PNAME_NS:Object(r.createToken)({name:"PNAME_NS",pattern:a.v,longer_alt:T}),BLANK_NODE_LABEL:Object(r.createToken)({name:"BLANK_NODE_LABEL",pattern:a.b}),VAR1:Object(r.createToken)({name:"VAR1",pattern:a.G,label:"?foo"}),VAR2:Object(r.createToken)({name:"VAR2",pattern:a.H,label:"?bar"}),PERCENT:Object(r.createToken)({name:"PERCENT",pattern:a.s})}},42:function(e,t,n){"use strict";n.r(t),n.d(t,"trigTokenMap",function(){return T}),n.d(t,"trigTokenTypes",function(){return i});var r=n(7),a=n(5),o=function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},E=n(7).turtleTokenTypes,T=o({LCurly:a.sparqlTokenMap.LCurly,RCurly:a.sparqlTokenMap.RCurly,GRAPH:a.sparqlTokenMap.GRAPH},r.turtleTokenMap),c=E.indexOf(r.turtleTokenMap.PN_CHARS_BASE),i=[a.sparqlTokenMap.LCurly,a.sparqlTokenMap.RCurly].concat(E.slice(0,c),[a.sparqlTokenMap.GRAPH],E.slice(c))},5:function(e,t,n){"use strict";n.r(t),n.d(t,"sparqlTokenMap",function(){return E}),n.d(t,"baseTokens",function(){return T}),n.d(t,"pathsTokens",function(){return c}),n.d(t,"nonStandardTokens",function(){return i}),n.d(t,"stardogSparqlTokens",function(){return S}),n.d(t,"sparqlTokenTypes",function(){return A});var r=n(0),a=n(4),o=n(1),E={IRIREF:a.terminals.IRIREF,LANGTAG:a.terminals.LANGTAG,INTEGER:a.terminals.INTEGER,DECIMAL:a.terminals.DECIMAL,DOUBLE:a.terminals.DOUBLE,INTEGER_POSITIVE:a.terminals.INTEGER_POSITIVE,DECIMAL_POSITIVE:a.terminals.DECIMAL_POSITIVE,DOUBLE_POSITIVE:a.terminals.DOUBLE_POSITIVE,INTEGER_NEGATIVE:a.terminals.INTEGER_NEGATIVE,DECIMAL_NEGATIVE:a.terminals.DECIMAL_NEGATIVE,DOUBLE_NEGATIVE:a.terminals.DOUBLE_NEGATIVE,STRING_LITERAL1:a.terminals.STRING_LITERAL1,STRING_LITERAL2:a.terminals.STRING_LITERAL2,STRING_LITERAL_LONG1:a.terminals.STRING_LITERAL_LONG1,STRING_LITERAL_LONG2:a.terminals.STRING_LITERAL_LONG2,NIL:a.terminals.NIL,ANON:a.terminals.ANON,PNAME_NS:a.terminals.PNAME_NS,PNAME_LN:a.terminals.PNAME_LN,BLANK_NODE_LABEL:a.terminals.BLANK_NODE_LABEL,VAR1:a.terminals.VAR1,VAR2:a.terminals.VAR2,PERCENT:a.terminals.PERCENT,Comment:Object(r.createToken)({name:"Comment",pattern:/#[^\n]*/,group:"comments"}),LCurly:Object(r.createToken)({name:"LCurly",pattern:"{"}),RCurly:Object(r.createToken)({name:"RCurly",pattern:"}"}),LParen:Object(r.createToken)({name:"LParen",pattern:"("}),RParen:Object(r.createToken)({name:"RParen",pattern:")"}),WhiteSpace:Object(r.createToken)({name:"WhiteSpace",pattern:/\s+/,group:r.Lexer.SKIPPED,line_breaks:!0}),Star:Object(r.createToken)({name:"Star",pattern:"*"}),Unknown:Object(r.createToken)({name:"Unknown",pattern:/\w+/}),Period:Object(r.createToken)({name:"Period",pattern:"."}),QuestionMark:Object(r.createToken)({name:"QuestionMark",pattern:"?"}),Plus:Object(r.createToken)({name:"Plus",pattern:"+"}),Minus:Object(r.createToken)({name:"Minus",pattern:"-"}),LBracket:Object(r.createToken)({name:"LBracket",pattern:"["}),RBracket:Object(r.createToken)({name:"RBracket",pattern:"]"}),Semicolon:Object(r.createToken)({name:"Semicolon",pattern:";"}),Comma:Object(r.createToken)({name:"Comma",pattern:","}),Pipe:Object(r.createToken)({name:"Pipe",pattern:"|"}),ForwardSlash:Object(r.createToken)({name:"ForwardSlash",pattern:"/"}),Caret:Object(r.createToken)({name:"Caret",pattern:"^"}),DoubleCaret:Object(r.createToken)({name:"DoubleCaret",pattern:"^^"}),Bang:Object(r.createToken)({name:"Bang",pattern:"!"}),LogicalOr:Object(r.createToken)({name:"LogicalOr",pattern:"||"}),LogicalAnd:Object(r.createToken)({name:"LogicalAnd",pattern:"&&"}),Equals:Object(r.createToken)({name:"Equals",pattern:"="}),NotEquals:Object(r.createToken)({name:"NotEquals",pattern:"!="}),LessThan:Object(r.createToken)({name:"LessThan",pattern:"<"}),GreaterThan:Object(r.createToken)({name:"GreaterThan",pattern:">"}),LessThanEquals:Object(r.createToken)({name:"LessThanEquals",pattern:"<="}),GreaterThanEquals:Object(r.createToken)({name:"GreaterThanEquals",pattern:">="}),SELECT:o.keywords.SELECT,CONSTRUCT:o.keywords.CONSTRUCT,DISTINCT:o.keywords.DISTINCT,START:o.keywords.START,END:o.keywords.END,VIA:o.keywords.VIA,CYCLIC:o.keywords.CYCLIC,PATHS_SHORTEST:o.keywords.PATHS_SHORTEST,PATHS_ALL:o.keywords.PATHS_ALL,PATHS:o.keywords.PATHS,AS:o.keywords.AS,WHERE:o.keywords.WHERE,A:o.keywords.A,GroupBy:o.keywords.GroupBy,OrderBy:o.keywords.OrderBy,By:o.keywords.By,BASE:o.keywords.BASE,PREFIX:o.keywords.PREFIX,DESCRIBE:o.keywords.DESCRIBE,ASK:o.keywords.ASK,FROM:o.keywords.FROM,REDUCED:o.keywords.REDUCED,NAMED:o.keywords.NAMED,HAVING:o.keywords.HAVING,ASC:o.keywords.ASC,DESC:o.keywords.DESC,OFFSET:o.keywords.OFFSET,LIMIT:o.keywords.LIMIT,VALUES:o.keywords.VALUES,LOAD:o.keywords.LOAD,SILENT:o.keywords.SILENT,INTO:o.keywords.INTO,CLEAR:o.keywords.CLEAR,DROP:o.keywords.DROP,CREATE:o.keywords.CREATE,ADD:o.keywords.ADD,TO:o.keywords.TO,MOVE:o.keywords.MOVE,COPY:o.keywords.COPY,INSERT_DATA:o.keywords.INSERT_DATA,DELETE_DATA:o.keywords.DELETE_DATA,DELETE_WHERE:o.keywords.DELETE_WHERE,WITH:o.keywords.WITH,DELETE:o.keywords.DELETE,INSERT:o.keywords.INSERT,USING:o.keywords.USING,DEFAULT:o.keywords.DEFAULT,GRAPH:o.keywords.GRAPH,ALL:o.keywords.ALL,OPTIONAL:o.keywords.OPTIONAL,SERVICE:o.keywords.SERVICE,BIND:o.keywords.BIND,UNNEST:o.keywords.UNNEST,UNDEF:o.keywords.UNDEF,MINUS:o.keywords.MINUS,UNION:o.keywords.UNION,FILTER:o.keywords.FILTER,STR:o.keywords.STR,LANG:o.keywords.LANG,LANGMATCHES:o.keywords.LANGMATCHES,DATATYPE:o.keywords.DATATYPE,BOUND:o.keywords.BOUND,IRI:o.keywords.IRI,URI:o.keywords.URI,BNODE:o.keywords.BNODE,RAND:o.keywords.RAND,ABS:o.keywords.ABS,CEIL:o.keywords.CEIL,FLOOR:o.keywords.FLOOR,ROUND:o.keywords.ROUND,CONCAT:o.keywords.CONCAT,STRLEN:o.keywords.STRLEN,UCASE:o.keywords.UCASE,LCASE:o.keywords.LCASE,ENCODE_FOR_URI:o.keywords.ENCODE_FOR_URI,CONTAINS:o.keywords.CONTAINS,STRSTARTS:o.keywords.STRSTARTS,STRENDS:o.keywords.STRENDS,STRBEFORE:o.keywords.STRBEFORE,STRAFTER:o.keywords.STRAFTER,YEAR:o.keywords.YEAR,MONTH:o.keywords.MONTH,DAY:o.keywords.DAY,HOURS:o.keywords.HOURS,MINUTES:o.keywords.MINUTES,SECONDS:o.keywords.SECONDS,TIMEZONE:o.keywords.TIMEZONE,TZ:o.keywords.TZ,NOW:o.keywords.NOW,UUID:o.keywords.UUID,STRUUID:o.keywords.STRUUID,MD5:o.keywords.MD5,SHA1:o.keywords.SHA1,SHA256:o.keywords.SHA256,SHA384:o.keywords.SHA384,SHA512:o.keywords.SHA512,COALESCE:o.keywords.COALESCE,IF:o.keywords.IF,STRLANG:o.keywords.STRLANG,STRDT:o.keywords.STRDT,sameTerm:o.keywords.sameTerm,isIRI:o.keywords.isIRI,isURI:o.keywords.isURI,isBlank:o.keywords.isBlank,isLiteral:o.keywords.isLiteral,isNumeric:o.keywords.isNumeric,REGEX:o.keywords.REGEX,SUBSTR:o.keywords.SUBSTR,REPLACE:o.keywords.REPLACE,EXISTS:o.keywords.EXISTS,NOT_EXISTS:o.keywords.NOT_EXISTS,COUNT:o.keywords.COUNT,SUM:o.keywords.SUM,MIN:o.keywords.MIN,AVG:o.keywords.AVG,SAMPLE:o.keywords.SAMPLE,GROUP_CONCAT:o.keywords.GROUP_CONCAT,SEPARATOR:o.keywords.SEPARATOR,TRUE:o.keywords.TRUE,FALSE:o.keywords.FALSE,IN:o.keywords.IN,NOT_IN:o.keywords.NOT_IN,MAX_LENGTH:o.keywords.MAX_LENGTH,MAX:o.keywords.MAX},T=[E.NIL,E.ANON,E.LCurly,E.RCurly,E.LParen,E.RParen,E.WhiteSpace,E.IRIREF,E.LANGTAG,E.DOUBLE,E.DECIMAL,E.INTEGER,E.DOUBLE_POSITIVE,E.DECIMAL_POSITIVE,E.INTEGER_POSITIVE,E.DOUBLE_NEGATIVE,E.DECIMAL_NEGATIVE,E.INTEGER_NEGATIVE,E.STRING_LITERAL1,E.STRING_LITERAL2,E.STRING_LITERAL_LONG1,E.STRING_LITERAL_LONG2,E.PNAME_NS,E.PNAME_LN,E.BLANK_NODE_LABEL,E.VAR1,E.VAR2,E.Comment,E.SELECT,E.CONSTRUCT,E.DISTINCT,E.Star,E.WHERE,E.GroupBy,E.OrderBy,E.By,E.Period,E.QuestionMark,E.Plus,E.Minus,E.LBracket,E.RBracket,E.PERCENT,E.BASE,E.PREFIX,E.DESCRIBE,E.ASK,E.FROM,E.REDUCED,E.NAMED,E.HAVING,E.ASC,E.DESC,E.OFFSET,E.LIMIT,E.VALUES,E.LOAD,E.SILENT,E.INTO,E.AS,E.CLEAR,E.DROP,E.CREATE,E.ADD,E.TO,E.MOVE,E.COPY,E.INSERT_DATA,E.DELETE_DATA,E.DELETE_WHERE,E.WITH,E.DELETE,E.INSERT,E.USING,E.DEFAULT,E.GRAPH,E.ALL,E.OPTIONAL,E.SERVICE,E.BIND,E.UNDEF,E.MINUS,E.UNION,E.FILTER,E.LANGMATCHES,E.LANG,E.DATATYPE,E.BOUND,E.IRI,E.URI,E.BNODE,E.RAND,E.ABS,E.CEIL,E.FLOOR,E.ROUND,E.CONCAT,E.STRLEN,E.UCASE,E.LCASE,E.ENCODE_FOR_URI,E.CONTAINS,E.STRSTARTS,E.STRENDS,E.STRBEFORE,E.STRAFTER,E.YEAR,E.MONTH,E.DAY,E.HOURS,E.MINUTES,E.SECONDS,E.TIMEZONE,E.TZ,E.NOW,E.UUID,E.STRUUID,E.MD5,E.SHA1,E.SHA256,E.SHA384,E.SHA512,E.COALESCE,E.IF,E.STRLANG,E.STRDT,E.STR,E.sameTerm,E.isIRI,E.isURI,E.isBlank,E.isLiteral,E.isNumeric,E.REGEX,E.SUBSTR,E.REPLACE,E.EXISTS,E.NOT_EXISTS,E.COUNT,E.SUM,E.MIN,E.MAX_LENGTH,E.MAX,E.AVG,E.SAMPLE,E.GROUP_CONCAT,E.SEPARATOR,E.TRUE,E.FALSE,E.Semicolon,E.Comma,E.ForwardSlash,E.DoubleCaret,E.Caret,E.LogicalOr,E.Pipe,E.LogicalAnd,E.NotEquals,E.Bang,E.Equals,E.LessThanEquals,E.GreaterThanEquals,E.LessThan,E.GreaterThan,E.IN,E.NOT_IN,E.A,E.Unknown],c=[E.START,E.END,E.VIA,E.CYCLIC,E.PATHS_SHORTEST,E.PATHS_ALL,E.PATHS],i=c.concat([E.UNNEST]),O=T.indexOf(E.SELECT),S=T.slice(0,O).concat(i,T.slice(O)),A=T.concat(i)},69:function(e,t,n){"use strict";n.r(t);var r,a=n(0),TurtleParser=n(12),o=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),E=n(42),T=E.trigTokenMap,c=E.trigTokenTypes,i=function(e){function TrigParser(t){var n=e.call(this,t,c,c,!1)||this;return n.parse=function(e){n.input=n.lexer.tokenize(e).tokens;var t=n.trigDoc(),r=n.errors.slice(),a=n.semanticErrors.slice();return n.resetManagedState(),{errors:r,semanticErrors:a,cst:t}},n.trigDoc=n.RULE("trigDoc",function(){n.MANY(function(){n.OR([{ALT:function(){return n.SUBRULE(n.directive)}},{ALT:function(){return n.SUBRULE(n.block)}}])})}),n.block=n.RULE("block",function(){n.OR([{ALT:function(){return n.SUBRULE(n.triplesOrGraph)}},{ALT:function(){return n.SUBRULE(n.wrappedGraph)}},{ALT:function(){return n.SUBRULE(n.triples2)}},{ALT:function(){n.CONSUME(T.GRAPH),n.SUBRULE(n.labelOrSubject),n.SUBRULE1(n.wrappedGraph)}}])}),n.triplesOrGraph=n.RULE("triplesOrGraph",function(){n.SUBRULE(n.labelOrSubject),n.OR([{ALT:function(){return n.SUBRULE(n.wrappedGraph)}},{ALT:function(){n.SUBRULE(n.predicateObjectList),n.CONSUME(T.Period)}}])}),n.triples2=n.RULE("triples2",function(){n.OR([{ALT:function(){n.SUBRULE(n.blankNodePropertyList),n.OPTION(function(){return n.SUBRULE(n.predicateObjectList)}),n.CONSUME(T.Period)}},{ALT:function(){n.SUBRULE(n.collection),n.SUBRULE1(n.predicateObjectList),n.CONSUME1(T.Period)}}])}),n.wrappedGraph=n.RULE("wrappedGraph",function(){n.CONSUME(T.LCurly),n.OPTION(function(){return n.SUBRULE(n.triplesBlock)}),n.CONSUME(T.RCurly)}),n.triplesBlock=n.RULE("triplesBlock",function(){n.SUBRULE(n.triples),n.OPTION(function(){n.CONSUME(T.Period),n.OPTION1(function(){return n.SUBRULE(n.triplesBlock)})})}),n.labelOrSubject=n.RULE("labelOrSubject",function(){n.OR([{ALT:function(){return n.SUBRULE(n.iri)}},{ALT:function(){return n.SUBRULE(n.BlankNode)}}])}),a.Parser.performSelfAnalysis(n),n}return o(TrigParser,e),TrigParser}(TurtleParser.a);n.d(t,"trigTokens",function(){return O}),n.d(t,"TrigParser",function(){return i});var O=n(42)},7:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(2),o=n(3),E=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\[uU]|\\(.)/g,T={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"},c=/^"([^"\\\r\n]+)"/,i=/^'([^'\\\r\n]+)'/,O=/^"((?:[^"\\\r\n]|\\.)*)"(?=[^"])/,S=/^'((?:[^'\\\r\n]|\\.)*)'(?=[^'])/,A=/^"""([^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*)"""/,L=/^'''([^'\\]*(?:(?:\\.|'(?!''))[^'\\]*)*)'''/,R=/[\x00-\x20<>\\"\{\}\|\^\`]/,N=/^<((?:[^ <>{}\\]|\\[uU])+)>[ \t]*/,u=/^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>[ \t]*/,s=function(e){try{return e.replace(E,function(e,t,n,r){if(t)return String.fromCharCode(parseInt(t,16));if(n){var a=parseInt(n,16);return a<=65535?String.fromCharCode(a):String.fromCharCode(55296+(a-=65536)/1024,56320+(1023&a))}var o=T[r];if(!o)throw new Error;return o})}catch(e){return null}};n.d(t,"turtleTokenMap",function(){return k}),n.d(t,"turtleTokenTypes",function(){return U});var I=n(5).sparqlTokenMap,p=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,k={Comment:Object(r.createToken)({name:"Comment",pattern:/#[^\n]*/,group:"comments"}),LBracket:I.LBracket,RBracket:I.RBracket,LParen:I.LParen,RParen:I.RParen,Period:I.Period,WhiteSpace:I.WhiteSpace,TRUE:I.TRUE,FALSE:I.FALSE,DoubleCaret:I.DoubleCaret,Comma:I.Comma,Semicolon:I.Semicolon,A:I.A,PREFIX:I.PREFIX,BASE:I.BASE,PNAME_NS:I.PNAME_NS,PNAME_LN:I.PNAME_LN,BLANK_NODE_LABEL:I.BLANK_NODE_LABEL,TTL_BASE:Object(r.createToken)({name:"TTL_BASE",pattern:/@base/}),TTL_PREFIX:Object(r.createToken)({name:"TTL_PREFIX",pattern:/@prefix/}),LANGTAG:I.LANGTAG,INTEGER:Object(r.createToken)({name:"INTEGER",pattern:a.a.and(a.a.option(/[+-]/),/\d+/)}),DECIMAL:Object(r.createToken)({name:"DECIMAL",pattern:a.a.and(a.a.option(/[+-]/),/(\d*\.\d+)/)}),DOUBLE:Object(r.createToken)({name:"DOUBLE",pattern:a.a.and(a.a.option(/[+-]/),a.a.or(a.a.and(/\d+\.\d*/,o.k),a.a.and(/\.\d+/,o.k),a.a.and(/\d+/,o.k)))}),EXPONENT:Object(r.createToken)({name:"EXPONENT",pattern:o.k}),ECHAR:Object(r.createToken)({name:"ECHAR",pattern:o.j}),ANON:I.ANON,PLX:Object(r.createToken)({name:"PLX",pattern:o.t}),PERCENT:I.PERCENT,HEX:Object(r.createToken)({name:"HEX",pattern:o.l}),STRING_LITERAL_LONG_SINGLE_QUOTE:Object(r.createToken)({name:"STRING_LITERAL_LONG_SINGLE_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=L.exec(e.slice(t));return n&&null!==s(n[1])?n:null},line_breaks:!0}),STRING_LITERAL_LONG_QUOTE:Object(r.createToken)({name:"STRING_LITERAL_LONG_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=A.exec(e.slice(t));return n&&null!==s(n[1])?n:null},line_breaks:!0}),STRING_LITERAL_QUOTE:Object(r.createToken)({name:"STRING_LITERAL_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=e.slice(t),r=c.exec(n);return r||((r=O.exec(n))?null===s(r[1])?null:r:null)},line_breaks:!1}),STRING_LITERAL_SINGLE_QUOTE:Object(r.createToken)({name:"STRING_LITERAL_SINGLE_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=e.slice(t),r=i.exec(n);return r||((r=S.exec(n))?null===s(r[1])?null:r:null)},line_breaks:!1}),UCHAR:Object(r.createToken)({name:"UCHAR",pattern:function(e,t){return void 0===t&&(t=0),p.exec(e.slice(t))},line_breaks:!1}),IRIREF:Object(r.createToken)({name:"IRIREF",pattern:function(e,t){void 0===t&&(t=0);var n=e.slice(t),r=u.exec(n);if(r)return r;if(!(r=N.exec(n)))return null;var a=s(r[1]);return null===a||R.test(a)?null:r},line_breaks:!1}),PN_CHARS_BASE:Object(r.createToken)({name:"PN_CHARS_BASE",pattern:o.x}),PN_CHARS_U:Object(r.createToken)({name:"PN_CHARS_U",pattern:o.y}),PN_CHARS:Object(r.createToken)({name:"PN_CHARS",pattern:o.w}),PN_PREFIX:Object(r.createToken)({name:"PN_PREFIX",pattern:o.B}),PN_LOCAL:Object(r.createToken)({name:"PN_LOCAL",pattern:o.z}),PN_LOCAL_ESC:Object(r.createToken)({name:"PN_LOCAL_ESC",pattern:o.A}),Unknown:Object(r.createToken)({name:"Unknown",pattern:/\w+/})},U=[k.Comment,I.ANON,I.LBracket,I.RBracket,I.LParen,I.RParen,I.WhiteSpace,I.TRUE,I.FALSE,I.Comma,I.Semicolon,I.PNAME_NS,I.A,I.PREFIX,I.BASE,I.PNAME_LN,I.BLANK_NODE_LABEL,k.TTL_BASE,k.TTL_PREFIX,I.LANGTAG,k.DOUBLE,k.DECIMAL,I.Period,I.DoubleCaret,k.IRIREF,k.STRING_LITERAL_LONG_SINGLE_QUOTE,k.STRING_LITERAL_LONG_QUOTE,k.STRING_LITERAL_QUOTE,k.STRING_LITERAL_SINGLE_QUOTE,k.INTEGER,k.EXPONENT,k.PLX,I.PERCENT,k.HEX,k.PN_CHARS_BASE,k.PN_CHARS_U,k.PN_CHARS,k.PN_PREFIX,k.PN_LOCAL,k.PN_LOCAL_ESC,k.ECHAR,k.UCHAR,k.Unknown]}})});
//# sourceMappingURL=millan.trig.js.map