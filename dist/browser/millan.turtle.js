!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("turtle",[],t):"object"==typeof exports?exports.turtle=t():(e.millan=e.millan||{},e.millan.turtle=t())}("undefined"!=typeof self?self:this,function(){return function(e){function t(t){for(var a,T,c=t[0],o=t[1],O=t[2],S=0,i=[];S<c.length;S++)T=c[S],r[T]&&i.push(r[T][0]),r[T]=0;for(a in o)Object.prototype.hasOwnProperty.call(o,a)&&(e[a]=o[a]);for(A&&A(t);i.length;)i.shift()();return E.push.apply(E,O||[]),n()}function n(){for(var e,t=0;t<E.length;t++){for(var n=E[t],a=!0,c=1;c<n.length;c++){var o=n[c];0!==r[o]&&(a=!1)}a&&(E.splice(t--,1),e=T(T.s=n[0]))}return e}var a={},r={7:0},E=[];function T(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,T),n.l=!0,n.exports}T.m=e,T.c=a,T.d=function(e,t,n){T.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},T.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},T.t=function(e,t){if(1&t&&(e=T(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(T.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)T.d(n,a,function(t){return e[t]}.bind(null,a));return n},T.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return T.d(t,"a",t),t},T.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},T.p="";var c=("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[],o=c.push.bind(c);c.push=t,c=c.slice();for(var O=0;O<c.length;O++)t(c[O]);var A=o;return E.push([63,0]),n()}({1:function(e,t,n){"use strict";n.d(t,"a",function(){return E});var a=n(0),r=Object(a.createToken)({name:"MAX_LENGTH",pattern:/MAX LENGTH/i}),E={SELECT:Object(a.createToken)({name:"SELECT",pattern:/SELECT/i}),CONSTRUCT:Object(a.createToken)({name:"CONSTRUCT",pattern:/CONSTRUCT/i}),DISTINCT:Object(a.createToken)({name:"DISTINCT",pattern:/DISTINCT/i}),START:Object(a.createToken)({name:"START",pattern:/START/i}),END:Object(a.createToken)({name:"END",pattern:/END/i}),VIA:Object(a.createToken)({name:"VIA",pattern:/VIA/i}),PATHS:Object(a.createToken)({name:"PATHS",pattern:/PATHS/i}),PATHS_ALL:Object(a.createToken)({name:"PATHS_ALL",pattern:/PATHS ALL/i}),PATHS_SHORTEST:Object(a.createToken)({name:"PATHS_SHORTEST",pattern:/PATHS SHORTEST/i}),CYCLIC:Object(a.createToken)({name:"CYCLIC",pattern:/CYCLIC/i}),AS:Object(a.createToken)({name:"AS",pattern:/AS/i}),WHERE:Object(a.createToken)({name:"WHERE",pattern:/WHERE/i}),A:Object(a.createToken)({name:"A",pattern:/a/i}),GroupBy:Object(a.createToken)({name:"GroupBy",pattern:/group by/i}),OrderBy:Object(a.createToken)({name:"OrderBy",pattern:/order by/i}),By:Object(a.createToken)({name:"By",pattern:/By/i}),BASE:Object(a.createToken)({name:"BASE",pattern:/BASE/i}),PREFIX:Object(a.createToken)({name:"PREFIX",pattern:/PREFIX/i}),DESCRIBE:Object(a.createToken)({name:"DESCRIBE",pattern:/DESCRIBE/i}),ASK:Object(a.createToken)({name:"ASK",pattern:/ASK/i}),FROM:Object(a.createToken)({name:"FROM",pattern:/FROM/i}),REDUCED:Object(a.createToken)({name:"REDUCED",pattern:/REDUCED/i}),NAMED:Object(a.createToken)({name:"NAMED",pattern:/NAMED/i}),HAVING:Object(a.createToken)({name:"HAVING",pattern:/HAVING/i}),ASC:Object(a.createToken)({name:"ASC",pattern:/ASC/i}),DESC:Object(a.createToken)({name:"DESC",pattern:/DESC/i}),OFFSET:Object(a.createToken)({name:"OFFSET",pattern:/OFFSET/i}),LIMIT:Object(a.createToken)({name:"LIMIT",pattern:/LIMIT/i}),VALUES:Object(a.createToken)({name:"VALUES",pattern:/VALUES/i}),LOAD:Object(a.createToken)({name:"LOAD",pattern:/LOAD/i}),SILENT:Object(a.createToken)({name:"SILENT",pattern:/SILENT/i}),INTO:Object(a.createToken)({name:"INTO",pattern:/INTO/i}),CLEAR:Object(a.createToken)({name:"CLEAR",pattern:/CLEAR/i}),DROP:Object(a.createToken)({name:"DROP",pattern:/DROP/i}),CREATE:Object(a.createToken)({name:"CREATE",pattern:/CREATE/i}),ADD:Object(a.createToken)({name:"ADD",pattern:/ADD/i}),TO:Object(a.createToken)({name:"TO",pattern:/TO/i}),MOVE:Object(a.createToken)({name:"MOVE",pattern:/MOVE/i}),COPY:Object(a.createToken)({name:"COPY",pattern:/COPY/i}),INSERT_DATA:Object(a.createToken)({name:"INSERT_DATA",pattern:/Insert +Data/i}),DELETE_DATA:Object(a.createToken)({name:"DELETE_DATA",pattern:/Delete +Data/i}),DELETE_WHERE:Object(a.createToken)({name:"DELETE_WHERE",pattern:/Delete +Where/i}),WITH:Object(a.createToken)({name:"WITH",pattern:/WITH/i}),DELETE:Object(a.createToken)({name:"DELETE",pattern:/DELETE/i}),INSERT:Object(a.createToken)({name:"INSERT",pattern:/INSERT/i}),USING:Object(a.createToken)({name:"USING",pattern:/USING/i}),DEFAULT:Object(a.createToken)({name:"DEFAULT",pattern:/DEFAULT/i}),GRAPH:Object(a.createToken)({name:"GRAPH",pattern:/GRAPH/i}),ALL:Object(a.createToken)({name:"ALL",pattern:/ALL/i}),OPTIONAL:Object(a.createToken)({name:"OPTIONAL",pattern:/OPTIONAL/i}),SERVICE:Object(a.createToken)({name:"SERVICE",pattern:/SERVICE/i}),BIND:Object(a.createToken)({name:"BIND",pattern:/BIND/i}),UNNEST:Object(a.createToken)({name:"UNNEST",pattern:/UNNEST/i}),UNDEF:Object(a.createToken)({name:"UNDEF",pattern:/UNDEF/i}),MINUS:Object(a.createToken)({name:"MINUS",pattern:/MINUS/i}),UNION:Object(a.createToken)({name:"UNION",pattern:/UNION/i}),FILTER:Object(a.createToken)({name:"FILTER",pattern:/FILTER/i}),STR:Object(a.createToken)({name:"STR",pattern:/STR/i}),LANG:Object(a.createToken)({name:"LANG",pattern:/LANG/i}),LANGMATCHES:Object(a.createToken)({name:"LANGMATCHES",pattern:/LANGMATCHES/i}),DATATYPE:Object(a.createToken)({name:"DATATYPE",pattern:/DATATYPE/i}),BOUND:Object(a.createToken)({name:"BOUND",pattern:/BOUND/i}),IRI:Object(a.createToken)({name:"IRI",pattern:/IRI/i}),URI:Object(a.createToken)({name:"URI",pattern:/URI/i}),BNODE:Object(a.createToken)({name:"BNODE",pattern:/BNODE/i}),RAND:Object(a.createToken)({name:"RAND",pattern:/RAND/i}),ABS:Object(a.createToken)({name:"ABS",pattern:/ABS/i}),CEIL:Object(a.createToken)({name:"CEIL",pattern:/CEIL/i}),FLOOR:Object(a.createToken)({name:"FLOOR",pattern:/FLOOR/i}),ROUND:Object(a.createToken)({name:"ROUND",pattern:/ROUND/i}),CONCAT:Object(a.createToken)({name:"CONCAT",pattern:/CONCAT/i}),STRLEN:Object(a.createToken)({name:"STRLEN",pattern:/STRLEN/i}),UCASE:Object(a.createToken)({name:"UCASE",pattern:/UCASE/i}),LCASE:Object(a.createToken)({name:"LCASE",pattern:/LCASE/i}),ENCODE_FOR_URI:Object(a.createToken)({name:"ENCODE_FOR_URI",pattern:/ENCODE_FOR_URI/i}),CONTAINS:Object(a.createToken)({name:"CONTAINS",pattern:/CONTAINS/i}),STRSTARTS:Object(a.createToken)({name:"STRSTARTS",pattern:/STRSTARTS/i}),STRENDS:Object(a.createToken)({name:"STRENDS",pattern:/STRENDS/i}),STRBEFORE:Object(a.createToken)({name:"STRBEFORE",pattern:/STRBEFORE/i}),STRAFTER:Object(a.createToken)({name:"STRAFTER",pattern:/STRAFTER/i}),YEAR:Object(a.createToken)({name:"YEAR",pattern:/YEAR/i}),MONTH:Object(a.createToken)({name:"MONTH",pattern:/MONTH/i}),DAY:Object(a.createToken)({name:"DAY",pattern:/DAY/i}),HOURS:Object(a.createToken)({name:"HOURS",pattern:/HOURS/i}),MINUTES:Object(a.createToken)({name:"MINUTES",pattern:/MINUTES/i}),SECONDS:Object(a.createToken)({name:"SECONDS",pattern:/SECONDS/i}),TIMEZONE:Object(a.createToken)({name:"TIMEZONE",pattern:/TIMEZONE/i}),TZ:Object(a.createToken)({name:"TZ",pattern:/TZ/i}),NOW:Object(a.createToken)({name:"NOW",pattern:/NOW/i}),UUID:Object(a.createToken)({name:"UUID",pattern:/UUID/i}),STRUUID:Object(a.createToken)({name:"STRUUID",pattern:/STRUUID/i}),MD5:Object(a.createToken)({name:"MD5",pattern:/MD5/i}),SHA1:Object(a.createToken)({name:"SHA1",pattern:/SHA1/i}),SHA256:Object(a.createToken)({name:"SHA256",pattern:/SHA256/i}),SHA384:Object(a.createToken)({name:"SHA384",pattern:/SHA384/i}),SHA512:Object(a.createToken)({name:"SHA512",pattern:/SHA512/i}),COALESCE:Object(a.createToken)({name:"COALESCE",pattern:/COALESCE/i}),IF:Object(a.createToken)({name:"IF",pattern:/IF/i}),STRLANG:Object(a.createToken)({name:"STRLANG",pattern:/STRLANG/i}),STRDT:Object(a.createToken)({name:"STRDT",pattern:/STRDT/i}),sameTerm:Object(a.createToken)({name:"sameTerm",pattern:/sameTerm/i}),isIRI:Object(a.createToken)({name:"isIRI",pattern:/isIRI/i}),isURI:Object(a.createToken)({name:"isURI",pattern:/isURI/i}),isBlank:Object(a.createToken)({name:"isBlank",pattern:/isBlank/i}),isLiteral:Object(a.createToken)({name:"isLiteral",pattern:/isLiteral/i}),isNumeric:Object(a.createToken)({name:"isNumeric",pattern:/isNumeric/i}),REGEX:Object(a.createToken)({name:"REGEX",pattern:/REGEX/i}),SUBSTR:Object(a.createToken)({name:"SUBSTR",pattern:/SUBSTR/i}),REPLACE:Object(a.createToken)({name:"REPLACE",pattern:/REPLACE/i}),EXISTS:Object(a.createToken)({name:"EXISTS",pattern:/EXISTS/i}),NOT_EXISTS:Object(a.createToken)({name:"NOT_EXISTS",pattern:/NOT EXISTS/i}),COUNT:Object(a.createToken)({name:"COUNT",pattern:/COUNT/i}),SUM:Object(a.createToken)({name:"SUM",pattern:/SUM/i}),MIN:Object(a.createToken)({name:"MIN",pattern:/MIN/i}),AVG:Object(a.createToken)({name:"AVG",pattern:/AVG/i}),SAMPLE:Object(a.createToken)({name:"SAMPLE",pattern:/SAMPLE/i}),GROUP_CONCAT:Object(a.createToken)({name:"GROUP_CONCAT",pattern:/GROUP_CONCAT/i}),SEPARATOR:Object(a.createToken)({name:"SEPARATOR",pattern:/SEPARATOR/i}),TRUE:Object(a.createToken)({name:"TRUE",pattern:/TRUE/i}),FALSE:Object(a.createToken)({name:"FALSE",pattern:/FALSE/i}),IN:Object(a.createToken)({name:"IN",pattern:/IN/i}),NOT_IN:Object(a.createToken)({name:"NOT_IN",pattern:/NOT IN/i}),MAX_LENGTH:r,MAX:Object(a.createToken)({name:"MAX",pattern:/MAX/i,longer_alt:r})}},14:function(e,t,n){"use strict";n.d(t,"a",function(){return TurtleParser});var a,r=n(0),E=(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),T=function(){return(T=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},c=n(9),o=c.turtleTokenTypes,O=c.turtleTokenMap,TurtleParser=function(e){function TurtleParser(t,n,a,E){void 0===n&&(n=o),void 0===a&&(a=n),void 0===E&&(E=!0);var c=e.call(this,n,T({outputCst:!0,recoveryEnabled:!0},t))||this;return c.namespacesMap={},c.semanticErrors=[],c.resetManagedState=function(){c.namespacesMap={},c.semanticErrors=[]},c.tokenize=function(e){return c.lexer.tokenize(e).tokens},c.parse=function(e){c.input=c.lexer.tokenize(e).tokens;var t=c.turtleDoc(),n=c.errors.slice(),a=c.semanticErrors.slice();return c.resetManagedState(),{errors:n,semanticErrors:a,cst:t}},c.turtleDoc=c.RULE("turtleDoc",function(){c.MANY(function(){return c.SUBRULE(c.statement)})}),c.statement=c.RULE("statement",function(){c.OR([{ALT:function(){return c.SUBRULE(c.directive)}},{ALT:function(){c.SUBRULE(c.triples),c.CONSUME(O.Period)}}])}),c.directive=c.RULE("directive",function(){c.OR([{ALT:function(){return c.SUBRULE(c.prefixID)}},{ALT:function(){return c.SUBRULE(c.base)}},{ALT:function(){return c.SUBRULE(c.sparqlPrefix)}},{ALT:function(){return c.SUBRULE(c.sparqlBase)}}])}),c.prefixID=c.RULE("prefixID",function(){c.CONSUME(O.TTL_PREFIX);var e=c.CONSUME(O.PNAME_NS),t=c.CONSUME(O.IRIREF),n=e.image.slice(0,-1),a=t.image;c.namespacesMap[n]=a,c.CONSUME(O.Period)}),c.base=c.RULE("base",function(){c.CONSUME(O.TTL_BASE),c.CONSUME(O.IRIREF),c.CONSUME(O.Period)}),c.sparqlBase=c.RULE("sparqlBase",function(){c.CONSUME(O.BASE),c.CONSUME(O.IRIREF)}),c.sparqlPrefix=c.RULE("sparqlPrefix",function(){c.CONSUME(O.PREFIX);var e=c.CONSUME(O.PNAME_NS),t=c.CONSUME(O.IRIREF),n=e.image.slice(0,-1),a=t.image;c.namespacesMap[n]=a}),c.triples=c.RULE("triples",function(){c.OR([{ALT:function(){c.SUBRULE(c.subject),c.SUBRULE(c.predicateObjectList)}},{ALT:function(){c.SUBRULE(c.blankNodePropertyList),c.OPTION(function(){return c.SUBRULE1(c.predicateObjectList)})}}])}),c.predicateObjectList=c.RULE("predicateObjectList",function(){c.SUBRULE(c.verb),c.SUBRULE(c.objectList),c.MANY(function(){c.CONSUME(O.Semicolon),c.OPTION(function(){c.SUBRULE1(c.verb),c.SUBRULE1(c.objectList)})})}),c.subject=c.RULE("subject",function(){c.OR([{ALT:function(){return c.SUBRULE(c.iri)}},{ALT:function(){return c.SUBRULE(c.BlankNode)}},{ALT:function(){return c.SUBRULE(c.collection)}}])}),c.predicate=c.RULE("predicate",function(){c.SUBRULE(c.iri)}),c.objectList=c.RULE("objectList",function(){c.SUBRULE(c.object),c.MANY(function(){c.CONSUME(O.Comma),c.SUBRULE1(c.object)})}),c.verb=c.RULE("verb",function(){c.OR([{ALT:function(){return c.SUBRULE(c.predicate)}},{ALT:function(){return c.CONSUME(O.A)}}])}),c.literal=c.RULE("literal",function(){c.OR([{ALT:function(){return c.SUBRULE(c.RDFLiteral)}},{ALT:function(){return c.SUBRULE(c.NumericLiteral)}},{ALT:function(){return c.SUBRULE(c.BooleanLiteral)}}])}),c.blankNodePropertyList=c.RULE("blankNodePropertyList",function(){c.CONSUME(O.LBracket),c.SUBRULE(c.predicateObjectList),c.CONSUME(O.RBracket)}),c.object=c.RULE("object",function(){c.OR([{ALT:function(){return c.SUBRULE(c.iri)}},{ALT:function(){return c.SUBRULE(c.BlankNode)}},{ALT:function(){return c.SUBRULE(c.collection)}},{ALT:function(){return c.SUBRULE(c.blankNodePropertyList)}},{ALT:function(){return c.SUBRULE(c.literal)}}])}),c.collection=c.RULE("collection",function(){c.CONSUME(O.LParen),c.MANY(function(){return c.SUBRULE(c.object)}),c.CONSUME(O.RParen)}),c.NumericLiteral=c.RULE("NumericLiteral",function(){c.OR([{ALT:function(){return c.CONSUME(O.INTEGER)}},{ALT:function(){return c.CONSUME(O.DECIMAL)}},{ALT:function(){return c.CONSUME(O.DOUBLE)}}])}),c.RDFLiteral=c.RULE("RDFLiteral",function(){c.SUBRULE(c.String),c.OPTION(function(){c.OR([{ALT:function(){return c.CONSUME(O.LANGTAG)}},{ALT:function(){c.CONSUME(O.DoubleCaret),c.SUBRULE(c.iri)}}])})}),c.BooleanLiteral=c.RULE("BooleanLiteral",function(){c.OR([{ALT:function(){return c.CONSUME(O.TRUE)}},{ALT:function(){return c.CONSUME(O.FALSE)}}])}),c.String=c.RULE("String",function(){c.OR([{ALT:function(){return c.CONSUME(O.STRING_LITERAL_QUOTE)}},{ALT:function(){return c.CONSUME(O.STRING_LITERAL_SINGLE_QUOTE)}},{ALT:function(){return c.CONSUME(O.STRING_LITERAL_LONG_SINGLE_QUOTE)}},{ALT:function(){return c.CONSUME(O.STRING_LITERAL_LONG_QUOTE)}}])}),c.iri=c.RULE("iri",function(){c.OR([{ALT:function(){return c.CONSUME(O.IRIREF)}},{ALT:function(){return c.SUBRULE(c.PrefixedName)}}])}),c.PrefixedName=c.RULE("PrefixedName",function(){var e=c.OR([{ALT:function(){return c.CONSUME(O.PNAME_LN)}},{ALT:function(){return c.CONSUME(O.PNAME_NS)}}]);e.image.slice(0,e.image.indexOf(":"))in c.namespacesMap||c.semanticErrors.push({name:"NoNamespacePrefixError",message:"A prefix was used for which there was no namespace defined.",token:e,context:{ruleStack:c.getHumanReadableRuleStack(),ruleOccurrenceStack:c.RULE_OCCURRENCE_STACK.slice()},resyncedTokens:[]})}),c.BlankNode=c.RULE("BlankNode",function(){c.OR([{ALT:function(){return c.CONSUME(O.BLANK_NODE_LABEL)}},{ALT:function(){return c.CONSUME(O.ANON)}}])}),c.lexer=new r.Lexer(a),E&&r.Parser.performSelfAnalysis(c),c}return E(TurtleParser,e),TurtleParser}(r.Parser)},2:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var a={or:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new RegExp(e.map(function(e){return"("+e.source+")"}).join("|"))},and:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new RegExp(e.map(function(e){return"("+e.source+")"}).join(""))},option:function(e){return new RegExp("("+e.source+")?")},many:function(e){return new RegExp("("+e.source+")*")}}},3:function(e,t,n){"use strict";n.d(t,"c",function(){return r}),n.d(t,"p",function(){return E}),n.d(t,"x",function(){return T}),n.d(t,"q",function(){return c}),n.d(t,"m",function(){return o}),n.d(t,"d",function(){return O}),n.d(t,"k",function(){return A}),n.d(t,"j",function(){return S}),n.d(t,"l",function(){return N}),n.d(t,"A",function(){return R}),n.d(t,"y",function(){return L}),n.d(t,"w",function(){return u}),n.d(t,"B",function(){return I}),n.d(t,"s",function(){return p}),n.d(t,"t",function(){return U}),n.d(t,"z",function(){return C}),n.d(t,"a",function(){return D}),n.d(t,"r",function(){return b}),n.d(t,"C",function(){return k}),n.d(t,"D",function(){return _}),n.d(t,"E",function(){return s}),n.d(t,"F",function(){return l}),n.d(t,"g",function(){return f}),n.d(t,"o",function(){return j}),n.d(t,"f",function(){return P}),n.d(t,"i",function(){return d}),n.d(t,"n",function(){return M}),n.d(t,"e",function(){return G}),n.d(t,"h",function(){return B}),n.d(t,"G",function(){return F}),n.d(t,"H",function(){return H}),n.d(t,"b",function(){return y}),n.d(t,"v",function(){return V}),n.d(t,"u",function(){return v});var a=n(2),r=/[\s\S]+/,E=/<[^<>\\{}|\^`\u0000-\u0020]*>/,T=/[A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDBFF][\uDC00-\uDFFF]/,c=/@[a-zA-Z]+(-[a-zA-Z0-9]+)*/,o=/\d+/,O=/(\d*\.\d+)|(\d+\.\d*)/,A=/[eE][+-]?\d+/,S=/\\[tbnrf"'\\]/,i=/[\u0020\u0009\u000d\u000a]/,N=/[0-9A-Fa-f]/,R=/\\[_~.\-!\$&'()*+,=\/?#@%;]/,L=a.a.or(T,/_/),u=a.a.or(L,/-/,/\d/,/\u00b7/,/[\u0300-\u036f]/,/[\u203f-\u2040]/),I=a.a.and(T,a.a.option(a.a.and(a.a.many(a.a.or(u,/\./)),u))),p=a.a.and(/%/,N,N),U=a.a.or(p,R),C=a.a.and(a.a.or(L,/:/,/\d/,U),a.a.option(a.a.and(a.a.many(a.a.or(u,/\./,/:/,U)),a.a.or(u,/:/,U)))),m=a.a.and(a.a.or(L,/\d/),a.a.many(a.a.or(L,/\d/,/\u00b7/,/[\u0300-\u036f]/,/[\u203f-\u2040]/))),D=a.a.and(/\[/,a.a.many(i),/\]/),b=a.a.and(/\(/,a.a.many(i),/\)/),k=a.a.and(/'/,a.a.many(a.a.or(/[^\u0027\u005C\u000A\u000D]/,S)),/'/),_=a.a.and(/"/,a.a.many(a.a.or(/[^\u0022\u005C\u000A\u000D]/,S)),/"/),s=a.a.and(/'''/,a.a.many(a.a.and(a.a.option(a.a.or(/'/,/''/)),a.a.or(/[^'\\]/,S))),/'''/),l=a.a.and(/"""/,a.a.many(a.a.and(a.a.option(a.a.or(/"/,/""/)),a.a.or(/[^"\\]/,S))),/"""/),f=a.a.or(a.a.and(/\d+\.\d*/,A),a.a.and(/\.\d+/,A),a.a.and(/\d+/,A)),j=a.a.and(/\+/,o),P=a.a.and(/\+/,O),d=a.a.and(/\+/,f),M=a.a.and(/-/,o),G=a.a.and(/-/,O),B=a.a.and(/-/,f),F=a.a.and(/\?/,m),H=a.a.and(/\$/,m),y=a.a.and(/_:/,a.a.or(L,/\d/),a.a.option(a.a.and(a.a.many(a.a.or(u,/\./)),u))),V=a.a.and(a.a.option(I),/:/),v=a.a.and(V,C)},4:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var a=n(0),r=n(3),E=Object(a.createToken)({name:"STRING_LITERAL_LONG1",pattern:r.E}),T=Object(a.createToken)({name:"STRING_LITERAL_LONG2",pattern:r.F}),c=Object(a.createToken)({name:"PNAME_LN",pattern:r.u}),o={IRIREF:Object(a.createToken)({name:"IRIREF",pattern:r.p,label:"<http://example.com>"}),LANGTAG:Object(a.createToken)({name:"LANGTAG",pattern:r.q}),INTEGER:Object(a.createToken)({name:"INTEGER",pattern:r.m}),DECIMAL:Object(a.createToken)({name:"DECIMAL",pattern:r.d}),DOUBLE:Object(a.createToken)({name:"DOUBLE",pattern:r.g}),INTEGER_POSITIVE:Object(a.createToken)({name:"INTEGER_POSITIVE",pattern:r.o}),DECIMAL_POSITIVE:Object(a.createToken)({name:"DECIMAL_POSITIVE",pattern:r.f}),DOUBLE_POSITIVE:Object(a.createToken)({name:"DOUBLE_POSITIVE",pattern:r.i}),INTEGER_NEGATIVE:Object(a.createToken)({name:"INTEGER_NEGATIVE",pattern:r.n}),DECIMAL_NEGATIVE:Object(a.createToken)({name:"DECIMAL_NEGATIVE",pattern:r.e}),DOUBLE_NEGATIVE:Object(a.createToken)({name:"DOUBLE_NEGATIVE",pattern:r.h}),STRING_LITERAL_LONG1:E,STRING_LITERAL_LONG2:T,STRING_LITERAL1:Object(a.createToken)({name:"STRING_LITERAL1",pattern:r.C,longer_alt:E}),STRING_LITERAL2:Object(a.createToken)({name:"STRING_LITERAL2",pattern:r.D,longer_alt:T}),NIL:Object(a.createToken)({name:"NIL",pattern:r.r,label:"()"}),ANON:Object(a.createToken)({name:"ANON",pattern:r.a,label:"[]"}),PNAME_LN:c,PNAME_NS:Object(a.createToken)({name:"PNAME_NS",pattern:r.v,longer_alt:c}),BLANK_NODE_LABEL:Object(a.createToken)({name:"BLANK_NODE_LABEL",pattern:r.b}),VAR1:Object(a.createToken)({name:"VAR1",pattern:r.G,label:"?foo"}),VAR2:Object(a.createToken)({name:"VAR2",pattern:r.H,label:"?bar"}),PERCENT:Object(a.createToken)({name:"PERCENT",pattern:r.s})}},5:function(e,t,n){"use strict";n.r(t),n.d(t,"sparqlTokenMap",function(){return T}),n.d(t,"baseTokens",function(){return c}),n.d(t,"pathsTokens",function(){return o}),n.d(t,"nonStandardTokens",function(){return O}),n.d(t,"stardogSparqlTokens",function(){return S}),n.d(t,"sparqlTokenTypes",function(){return i});var a=n(0),r=n(4),E=n(1),T={IRIREF:r.a.IRIREF,LANGTAG:r.a.LANGTAG,INTEGER:r.a.INTEGER,DECIMAL:r.a.DECIMAL,DOUBLE:r.a.DOUBLE,INTEGER_POSITIVE:r.a.INTEGER_POSITIVE,DECIMAL_POSITIVE:r.a.DECIMAL_POSITIVE,DOUBLE_POSITIVE:r.a.DOUBLE_POSITIVE,INTEGER_NEGATIVE:r.a.INTEGER_NEGATIVE,DECIMAL_NEGATIVE:r.a.DECIMAL_NEGATIVE,DOUBLE_NEGATIVE:r.a.DOUBLE_NEGATIVE,STRING_LITERAL1:r.a.STRING_LITERAL1,STRING_LITERAL2:r.a.STRING_LITERAL2,STRING_LITERAL_LONG1:r.a.STRING_LITERAL_LONG1,STRING_LITERAL_LONG2:r.a.STRING_LITERAL_LONG2,NIL:r.a.NIL,ANON:r.a.ANON,PNAME_NS:r.a.PNAME_NS,PNAME_LN:r.a.PNAME_LN,BLANK_NODE_LABEL:r.a.BLANK_NODE_LABEL,VAR1:r.a.VAR1,VAR2:r.a.VAR2,PERCENT:r.a.PERCENT,Comment:Object(a.createToken)({name:"Comment",pattern:/#[^\n]*/,group:"comments"}),LCurly:Object(a.createToken)({name:"LCurly",pattern:"{"}),RCurly:Object(a.createToken)({name:"RCurly",pattern:"}"}),LParen:Object(a.createToken)({name:"LParen",pattern:"("}),RParen:Object(a.createToken)({name:"RParen",pattern:")"}),WhiteSpace:Object(a.createToken)({name:"WhiteSpace",pattern:/\s+/,group:a.Lexer.SKIPPED,line_breaks:!0}),Star:Object(a.createToken)({name:"Star",pattern:"*"}),Unknown:Object(a.createToken)({name:"Unknown",pattern:/\w+/}),Period:Object(a.createToken)({name:"Period",pattern:"."}),QuestionMark:Object(a.createToken)({name:"QuestionMark",pattern:"?"}),Plus:Object(a.createToken)({name:"Plus",pattern:"+"}),Minus:Object(a.createToken)({name:"Minus",pattern:"-"}),LBracket:Object(a.createToken)({name:"LBracket",pattern:"["}),RBracket:Object(a.createToken)({name:"RBracket",pattern:"]"}),Semicolon:Object(a.createToken)({name:"Semicolon",pattern:";"}),Comma:Object(a.createToken)({name:"Comma",pattern:","}),Pipe:Object(a.createToken)({name:"Pipe",pattern:"|"}),ForwardSlash:Object(a.createToken)({name:"ForwardSlash",pattern:"/"}),Caret:Object(a.createToken)({name:"Caret",pattern:"^"}),DoubleCaret:Object(a.createToken)({name:"DoubleCaret",pattern:"^^"}),Bang:Object(a.createToken)({name:"Bang",pattern:"!"}),LogicalOr:Object(a.createToken)({name:"LogicalOr",pattern:"||"}),LogicalAnd:Object(a.createToken)({name:"LogicalAnd",pattern:"&&"}),Equals:Object(a.createToken)({name:"Equals",pattern:"="}),NotEquals:Object(a.createToken)({name:"NotEquals",pattern:"!="}),LessThan:Object(a.createToken)({name:"LessThan",pattern:"<"}),GreaterThan:Object(a.createToken)({name:"GreaterThan",pattern:">"}),LessThanEquals:Object(a.createToken)({name:"LessThanEquals",pattern:"<="}),GreaterThanEquals:Object(a.createToken)({name:"GreaterThanEquals",pattern:">="}),SELECT:E.a.SELECT,CONSTRUCT:E.a.CONSTRUCT,DISTINCT:E.a.DISTINCT,START:E.a.START,END:E.a.END,VIA:E.a.VIA,CYCLIC:E.a.CYCLIC,PATHS_SHORTEST:E.a.PATHS_SHORTEST,PATHS_ALL:E.a.PATHS_ALL,PATHS:E.a.PATHS,AS:E.a.AS,WHERE:E.a.WHERE,A:E.a.A,GroupBy:E.a.GroupBy,OrderBy:E.a.OrderBy,By:E.a.By,BASE:E.a.BASE,PREFIX:E.a.PREFIX,DESCRIBE:E.a.DESCRIBE,ASK:E.a.ASK,FROM:E.a.FROM,REDUCED:E.a.REDUCED,NAMED:E.a.NAMED,HAVING:E.a.HAVING,ASC:E.a.ASC,DESC:E.a.DESC,OFFSET:E.a.OFFSET,LIMIT:E.a.LIMIT,VALUES:E.a.VALUES,LOAD:E.a.LOAD,SILENT:E.a.SILENT,INTO:E.a.INTO,CLEAR:E.a.CLEAR,DROP:E.a.DROP,CREATE:E.a.CREATE,ADD:E.a.ADD,TO:E.a.TO,MOVE:E.a.MOVE,COPY:E.a.COPY,INSERT_DATA:E.a.INSERT_DATA,DELETE_DATA:E.a.DELETE_DATA,DELETE_WHERE:E.a.DELETE_WHERE,WITH:E.a.WITH,DELETE:E.a.DELETE,INSERT:E.a.INSERT,USING:E.a.USING,DEFAULT:E.a.DEFAULT,GRAPH:E.a.GRAPH,ALL:E.a.ALL,OPTIONAL:E.a.OPTIONAL,SERVICE:E.a.SERVICE,BIND:E.a.BIND,UNNEST:E.a.UNNEST,UNDEF:E.a.UNDEF,MINUS:E.a.MINUS,UNION:E.a.UNION,FILTER:E.a.FILTER,STR:E.a.STR,LANG:E.a.LANG,LANGMATCHES:E.a.LANGMATCHES,DATATYPE:E.a.DATATYPE,BOUND:E.a.BOUND,IRI:E.a.IRI,URI:E.a.URI,BNODE:E.a.BNODE,RAND:E.a.RAND,ABS:E.a.ABS,CEIL:E.a.CEIL,FLOOR:E.a.FLOOR,ROUND:E.a.ROUND,CONCAT:E.a.CONCAT,STRLEN:E.a.STRLEN,UCASE:E.a.UCASE,LCASE:E.a.LCASE,ENCODE_FOR_URI:E.a.ENCODE_FOR_URI,CONTAINS:E.a.CONTAINS,STRSTARTS:E.a.STRSTARTS,STRENDS:E.a.STRENDS,STRBEFORE:E.a.STRBEFORE,STRAFTER:E.a.STRAFTER,YEAR:E.a.YEAR,MONTH:E.a.MONTH,DAY:E.a.DAY,HOURS:E.a.HOURS,MINUTES:E.a.MINUTES,SECONDS:E.a.SECONDS,TIMEZONE:E.a.TIMEZONE,TZ:E.a.TZ,NOW:E.a.NOW,UUID:E.a.UUID,STRUUID:E.a.STRUUID,MD5:E.a.MD5,SHA1:E.a.SHA1,SHA256:E.a.SHA256,SHA384:E.a.SHA384,SHA512:E.a.SHA512,COALESCE:E.a.COALESCE,IF:E.a.IF,STRLANG:E.a.STRLANG,STRDT:E.a.STRDT,sameTerm:E.a.sameTerm,isIRI:E.a.isIRI,isURI:E.a.isURI,isBlank:E.a.isBlank,isLiteral:E.a.isLiteral,isNumeric:E.a.isNumeric,REGEX:E.a.REGEX,SUBSTR:E.a.SUBSTR,REPLACE:E.a.REPLACE,EXISTS:E.a.EXISTS,NOT_EXISTS:E.a.NOT_EXISTS,COUNT:E.a.COUNT,SUM:E.a.SUM,MIN:E.a.MIN,AVG:E.a.AVG,SAMPLE:E.a.SAMPLE,GROUP_CONCAT:E.a.GROUP_CONCAT,SEPARATOR:E.a.SEPARATOR,TRUE:E.a.TRUE,FALSE:E.a.FALSE,IN:E.a.IN,NOT_IN:E.a.NOT_IN,MAX_LENGTH:E.a.MAX_LENGTH,MAX:E.a.MAX},c=[T.NIL,T.ANON,T.LCurly,T.RCurly,T.LParen,T.RParen,T.WhiteSpace,T.IRIREF,T.LANGTAG,T.DOUBLE,T.DECIMAL,T.INTEGER,T.DOUBLE_POSITIVE,T.DECIMAL_POSITIVE,T.INTEGER_POSITIVE,T.DOUBLE_NEGATIVE,T.DECIMAL_NEGATIVE,T.INTEGER_NEGATIVE,T.STRING_LITERAL1,T.STRING_LITERAL2,T.STRING_LITERAL_LONG1,T.STRING_LITERAL_LONG2,T.PNAME_NS,T.PNAME_LN,T.BLANK_NODE_LABEL,T.VAR1,T.VAR2,T.Comment,T.SELECT,T.CONSTRUCT,T.DISTINCT,T.Star,T.WHERE,T.GroupBy,T.OrderBy,T.By,T.Period,T.QuestionMark,T.Plus,T.Minus,T.LBracket,T.RBracket,T.PERCENT,T.BASE,T.PREFIX,T.DESCRIBE,T.ASK,T.FROM,T.REDUCED,T.NAMED,T.HAVING,T.ASC,T.DESC,T.OFFSET,T.LIMIT,T.VALUES,T.LOAD,T.SILENT,T.INTO,T.AS,T.CLEAR,T.DROP,T.CREATE,T.ADD,T.TO,T.MOVE,T.COPY,T.INSERT_DATA,T.DELETE_DATA,T.DELETE_WHERE,T.WITH,T.DELETE,T.INSERT,T.USING,T.DEFAULT,T.GRAPH,T.ALL,T.OPTIONAL,T.SERVICE,T.BIND,T.UNDEF,T.MINUS,T.UNION,T.FILTER,T.LANGMATCHES,T.LANG,T.DATATYPE,T.BOUND,T.IRI,T.URI,T.BNODE,T.RAND,T.ABS,T.CEIL,T.FLOOR,T.ROUND,T.CONCAT,T.STRLEN,T.UCASE,T.LCASE,T.ENCODE_FOR_URI,T.CONTAINS,T.STRSTARTS,T.STRENDS,T.STRBEFORE,T.STRAFTER,T.YEAR,T.MONTH,T.DAY,T.HOURS,T.MINUTES,T.SECONDS,T.TIMEZONE,T.TZ,T.NOW,T.UUID,T.STRUUID,T.MD5,T.SHA1,T.SHA256,T.SHA384,T.SHA512,T.COALESCE,T.IF,T.STRLANG,T.STRDT,T.STR,T.sameTerm,T.isIRI,T.isURI,T.isBlank,T.isLiteral,T.isNumeric,T.REGEX,T.SUBSTR,T.REPLACE,T.EXISTS,T.NOT_EXISTS,T.COUNT,T.SUM,T.MIN,T.MAX_LENGTH,T.MAX,T.AVG,T.SAMPLE,T.GROUP_CONCAT,T.SEPARATOR,T.TRUE,T.FALSE,T.Semicolon,T.Comma,T.ForwardSlash,T.DoubleCaret,T.Caret,T.LogicalOr,T.Pipe,T.LogicalAnd,T.NotEquals,T.Bang,T.Equals,T.LessThanEquals,T.GreaterThanEquals,T.LessThan,T.GreaterThan,T.IN,T.NOT_IN,T.A,T.Unknown],o=[T.START,T.END,T.VIA,T.CYCLIC,T.PATHS_SHORTEST,T.PATHS_ALL,T.PATHS],O=o.concat([T.UNNEST]),A=c.indexOf(T.SELECT),S=c.slice(0,A).concat(O,c.slice(A)),i=c.concat(O)},63:function(e,t,n){"use strict";n.r(t);var a=n(14);n.d(t,"TurtleParser",function(){return a.a});var r=n(9);n.d(t,"turtleTokenMap",function(){return r.turtleTokenMap}),n.d(t,"turtleTokenTypes",function(){return r.turtleTokenTypes})},9:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(2),E=n(3),T=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\[uU]|\\(.)/g,c={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"},o=/^"([^"\\\r\n]+)"/,O=/^'([^'\\\r\n]+)'/,A=/^"((?:[^"\\\r\n]|\\.)*)"(?=[^"])/,S=/^'((?:[^'\\\r\n]|\\.)*)'(?=[^'])/,i=/^"""([^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*)"""/,N=/^'''([^'\\]*(?:(?:\\.|'(?!''))[^'\\]*)*)'''/,R=/[\x00-\x20<>\\"\{\}\|\^\`]/,L=/^<((?:[^ <>{}\\]|\\[uU])+)>[ \t]*/,u=/^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>[ \t]*/,I=function(e){try{return e.replace(T,function(e,t,n,a){if(t)return String.fromCharCode(parseInt(t,16));if(n){var r=parseInt(n,16);return r<=65535?String.fromCharCode(r):String.fromCharCode(55296+(r-=65536)/1024,56320+(1023&r))}var E=c[a];if(!E)throw new Error;return E})}catch(e){return null}};n.d(t,"turtleTokenMap",function(){return C}),n.d(t,"turtleTokenTypes",function(){return m});var p=n(5).sparqlTokenMap,U=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,C={Comment:Object(a.createToken)({name:"Comment",pattern:/#[^\n]*/,group:"comments"}),LBracket:p.LBracket,RBracket:p.RBracket,LParen:p.LParen,RParen:p.RParen,Period:p.Period,WhiteSpace:p.WhiteSpace,TRUE:p.TRUE,FALSE:p.FALSE,DoubleCaret:p.DoubleCaret,Comma:p.Comma,Semicolon:p.Semicolon,A:p.A,PREFIX:p.PREFIX,BASE:p.BASE,PNAME_NS:p.PNAME_NS,PNAME_LN:p.PNAME_LN,BLANK_NODE_LABEL:p.BLANK_NODE_LABEL,TTL_BASE:Object(a.createToken)({name:"TTL_BASE",pattern:/@base/}),TTL_PREFIX:Object(a.createToken)({name:"TTL_PREFIX",pattern:/@prefix/}),LANGTAG:p.LANGTAG,INTEGER:Object(a.createToken)({name:"INTEGER",pattern:r.a.and(r.a.option(/[+-]/),/\d+/)}),DECIMAL:Object(a.createToken)({name:"DECIMAL",pattern:r.a.and(r.a.option(/[+-]/),/(\d*\.\d+)/)}),DOUBLE:Object(a.createToken)({name:"DOUBLE",pattern:r.a.and(r.a.option(/[+-]/),r.a.or(r.a.and(/\d+\.\d*/,E.k),r.a.and(/\.\d+/,E.k),r.a.and(/\d+/,E.k)))}),EXPONENT:Object(a.createToken)({name:"EXPONENT",pattern:E.k}),ECHAR:Object(a.createToken)({name:"ECHAR",pattern:E.j}),ANON:p.ANON,PLX:Object(a.createToken)({name:"PLX",pattern:E.t}),PERCENT:p.PERCENT,HEX:Object(a.createToken)({name:"HEX",pattern:E.l}),STRING_LITERAL_LONG_SINGLE_QUOTE:Object(a.createToken)({name:"STRING_LITERAL_LONG_SINGLE_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=N.exec(e.slice(t));return n&&null!==I(n[1])?n:null},line_breaks:!0}),STRING_LITERAL_LONG_QUOTE:Object(a.createToken)({name:"STRING_LITERAL_LONG_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=i.exec(e.slice(t));return n&&null!==I(n[1])?n:null},line_breaks:!0}),STRING_LITERAL_QUOTE:Object(a.createToken)({name:"STRING_LITERAL_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=e.slice(t),a=o.exec(n);return a||((a=A.exec(n))?null===I(a[1])?null:a:null)},line_breaks:!1}),STRING_LITERAL_SINGLE_QUOTE:Object(a.createToken)({name:"STRING_LITERAL_SINGLE_QUOTE",pattern:function(e,t){void 0===t&&(t=0);var n=e.slice(t),a=O.exec(n);return a||((a=S.exec(n))?null===I(a[1])?null:a:null)},line_breaks:!1}),UCHAR:Object(a.createToken)({name:"UCHAR",pattern:function(e,t){return void 0===t&&(t=0),U.exec(e.slice(t))},line_breaks:!1}),IRIREF:Object(a.createToken)({name:"IRIREF",pattern:function(e,t){void 0===t&&(t=0);var n=e.slice(t),a=u.exec(n);if(a)return a;if(!(a=L.exec(n)))return null;var r=I(a[1]);return null===r||R.test(r)?null:a},line_breaks:!1}),PN_CHARS_BASE:Object(a.createToken)({name:"PN_CHARS_BASE",pattern:E.x}),PN_CHARS_U:Object(a.createToken)({name:"PN_CHARS_U",pattern:E.y}),PN_CHARS:Object(a.createToken)({name:"PN_CHARS",pattern:E.w}),PN_PREFIX:Object(a.createToken)({name:"PN_PREFIX",pattern:E.B}),PN_LOCAL:Object(a.createToken)({name:"PN_LOCAL",pattern:E.z}),PN_LOCAL_ESC:Object(a.createToken)({name:"PN_LOCAL_ESC",pattern:E.A}),Unknown:Object(a.createToken)({name:"Unknown",pattern:/\w+/})},m=[C.Comment,p.ANON,p.LBracket,p.RBracket,p.LParen,p.RParen,p.WhiteSpace,p.TRUE,p.FALSE,p.Comma,p.Semicolon,p.PNAME_NS,p.A,p.PREFIX,p.BASE,p.PNAME_LN,p.BLANK_NODE_LABEL,C.TTL_BASE,C.TTL_PREFIX,p.LANGTAG,C.DOUBLE,C.DECIMAL,p.Period,p.DoubleCaret,C.IRIREF,C.STRING_LITERAL_LONG_SINGLE_QUOTE,C.STRING_LITERAL_LONG_QUOTE,C.STRING_LITERAL_QUOTE,C.STRING_LITERAL_SINGLE_QUOTE,C.INTEGER,C.EXPONENT,C.PLX,p.PERCENT,C.HEX,C.PN_CHARS_BASE,C.PN_CHARS_U,C.PN_CHARS,C.PN_PREFIX,C.PN_LOCAL,C.PN_LOCAL_ESC,C.ECHAR,C.UCHAR,C.Unknown]}})});
//# sourceMappingURL=millan.turtle.js.map