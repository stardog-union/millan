{"version":3,"sources":["webpack://millan.[name]/webpack/universalModuleDefinition","webpack://millan.[name]/webpack/bootstrap","webpack://millan.[name]/./src/sparql/W3SpecSparqlParser.ts","webpack://millan.[name]/./src/sparql/index.ts","webpack://millan.[name]/./src/sms/tokens.ts","webpack://millan.[name]/./src/sms/SmsParser.ts","webpack://millan.[name]/./src/sms/index.ts"],"names":["root","factory","exports","module","define","amd","self","this","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","5","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","extendStatics","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","baseTokens","W3SpecSparqlParser_W3SpecSparqlParser","_super","W3SpecSparqlParser","options","_this","api","performSelfAnalysis","BaseSparqlParser","__webpack_exports__","sparqlTokens","keywords","terminals","StardogSparqlParser","smsTokenMap","smsTokenTypes","chevrotain__WEBPACK_IMPORTED_MODULE_0__","_sparql_keywords__WEBPACK_IMPORTED_MODULE_1__","__assign","assign","arguments","_a","sparqlTokenMap","stardogSparqlTokens","FROM_BLOCK_END_MATCHER","FROM_JSON_BLOCK_END_MATCHER","explicitEndMatcher","textToMatch","endCandidateChar","endMatcher","offset","blockEndCandidate","exec","Template","Sql","GraphQl","Json","Csv","Mapping","SqlBlock","pattern","text","startOffset","matchedTokensSoFar","secondToLastToken","lastToken","tokenType","tokenName","LCurly","line_breaks","JsonBlock","match","GraphQlBlock","concat","SmsParser_SmsParser","SmsParser","config","outputCst","recoveryEnabled","parse","document","input","tokenize","cst","MappingDoc","errors","RULE","MANY","SUBRULE","PrefixDecl","OPTION","MappingClause","MANY1","CONSUME","Semicolon","SUBRULE1","MappingDecl","FromClause","ToClause","WhereClause","iri","FROM","OR","ALT","SqlClause","JsonClause","GraphQlClause","CsvClause","RCurly","TO","ConstructTemplate","OVERRIDE_RULE","WHERE","Bind","BIND","LParen","BindExpression","AS","Var","RParen","TemplateFunc","Expression","String","GraphNode","sparql","smsTokens"],"mappings":"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","file":"millan.sms.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sms\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sms\"] = factory();\n\telse\n\t\troot[\"millan\"] = root[\"millan\"] || {}, root[\"millan\"][\"sms\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0,\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([67,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar baseTokens = require('./tokens').baseTokens;\nimport { BaseSparqlParser } from './BaseSparqlParser';\nimport { Parser } from 'chevrotain';\nvar W3SpecSparqlParser = /** @class */ (function (_super) {\n    __extends(W3SpecSparqlParser, _super);\n    function W3SpecSparqlParser(options) {\n        var _this = _super.call(this, options, baseTokens) || this;\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return W3SpecSparqlParser;\n}(BaseSparqlParser));\nexport { W3SpecSparqlParser };\n","export * from './BaseSparqlParser';\nexport * from './W3SpecSparqlParser';\nexport * from './StardogSparqlParser';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nexport var sparqlTokens = require('./tokens');\nexport var keywords = require('./keywords').keywords;\nexport var terminals = require('./terminals').terminals;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('../sparql/tokens'), sparqlTokenMap = _a.sparqlTokenMap, stardogSparqlTokens = _a.stardogSparqlTokens;\nimport { createToken } from 'chevrotain';\nimport { createKeyword } from '../sparql/keywords';\nvar FROM_BLOCK_END_MATCHER = /^\\s*to\\s*{/i;\nvar FROM_JSON_BLOCK_END_MATCHER = /((?:.|\\s)*?)to\\s*{/i;\n// Because the end of `FROM` clauses in SMS are not explicit, tokenizing them\n// using regexes can be incredibly inefficient. This function gives us a bit\n// more control; it scans through the document character by character until\n// it finds a character which is _likely_ to be followed by an ending pattern,\n// and only then does it use a regex to confirm.\nvar explicitEndMatcher = function (textToMatch, endCandidateChar, // Char which, if found, triggers an exec of endMatcher\nendMatcher // Regex which matches an end pattern\n) {\n    for (var offset = 0, char = void 0; offset < textToMatch.length; offset++) {\n        char = textToMatch[offset];\n        if (char === endCandidateChar) {\n            var blockEndCandidate = textToMatch.slice(offset + 1);\n            var match = endMatcher.exec(blockEndCandidate);\n            if (!match) {\n                continue;\n            }\n            else {\n                var blockText = textToMatch.slice(0, offset);\n                var response = [blockText];\n                return response;\n            }\n        }\n    }\n    return null;\n};\nexport var smsTokenMap = __assign({}, sparqlTokenMap, { Template: createKeyword({ name: 'Template' }), Sql: createKeyword({ name: 'Sql' }), GraphQl: createKeyword({ name: 'GraphQl' }), Json: createKeyword({ name: 'Json' }), Csv: createKeyword({ name: 'Csv' }), Mapping: createKeyword({ name: 'Mapping' }), SqlBlock: createToken({\n        name: 'SqlBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var _a = matchedTokensSoFar.slice(-2), secondToLastToken = _a[0], lastToken = _a[1];\n            if (!secondToLastToken ||\n                !lastToken ||\n                secondToLastToken.tokenType.tokenName !== smsTokenMap.Sql.tokenName ||\n                lastToken.tokenType.tokenName !== smsTokenMap.LCurly.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            return explicitEndMatcher(textToMatch, '}', FROM_BLOCK_END_MATCHER);\n        },\n        line_breaks: true,\n    }), JsonBlock: createToken({\n        name: 'JsonBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var lastToken = matchedTokensSoFar.slice(-1)[0];\n            if (!lastToken ||\n                lastToken.tokenType.tokenName !== smsTokenMap.Json.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            var match = FROM_JSON_BLOCK_END_MATCHER.exec(textToMatch);\n            if (!match) {\n                return null;\n            }\n            var capturedMatch = match.slice(1);\n            return capturedMatch;\n        },\n        line_breaks: true,\n    }), GraphQlBlock: createToken({\n        name: 'GraphQlBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var _a = matchedTokensSoFar.slice(-2), secondToLastToken = _a[0], lastToken = _a[1];\n            if (!secondToLastToken ||\n                !lastToken ||\n                secondToLastToken.tokenType.tokenName !==\n                    smsTokenMap.GraphQl.tokenName ||\n                lastToken.tokenType.tokenName !== smsTokenMap.LCurly.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            return explicitEndMatcher(textToMatch, '}', FROM_BLOCK_END_MATCHER);\n        },\n        line_breaks: true,\n    }) });\nvar smsOnlyTokens = [\n    smsTokenMap.Template,\n    smsTokenMap.Sql,\n    smsTokenMap.GraphQl,\n    smsTokenMap.Json,\n    smsTokenMap.Csv,\n    smsTokenMap.Mapping,\n    smsTokenMap.SqlBlock,\n    smsTokenMap.JsonBlock,\n    smsTokenMap.GraphQlBlock,\n];\nexport var smsTokenTypes = smsOnlyTokens.concat(stardogSparqlTokens);\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('./tokens'), smsTokenTypes = _a.smsTokenTypes, smsTokenMap = _a.smsTokenMap;\nimport { Parser } from 'chevrotain';\nimport { StardogSparqlParser } from '../sparql';\nvar SmsParser = /** @class */ (function (_super) {\n    __extends(SmsParser, _super);\n    function SmsParser(config) {\n        var _this = _super.call(this, __assign({ outputCst: true, recoveryEnabled: true }, config), smsTokenTypes, true) || this;\n        _this.parse = function (document) {\n            _this.input = _this.tokenize(document);\n            var cst = _this.MappingDoc();\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.MappingDoc = _this.RULE('MappingDoc', function () {\n            _this.MANY(function () { return _this.SUBRULE(_this.PrefixDecl); });\n            _this.OPTION(function () {\n                _this.SUBRULE(_this.MappingClause);\n                _this.MANY1(function () {\n                    _this.CONSUME(smsTokenMap.Semicolon);\n                    _this.SUBRULE1(_this.MappingClause);\n                });\n            });\n        });\n        _this.MappingClause = _this.RULE('MappingClause', function () {\n            _this.SUBRULE(_this.MappingDecl);\n            _this.SUBRULE(_this.FromClause);\n            _this.SUBRULE(_this.ToClause);\n            _this.SUBRULE(_this.WhereClause);\n        });\n        _this.MappingDecl = _this.RULE('MappingDecl', function () {\n            _this.CONSUME(smsTokenMap.Mapping);\n            _this.OPTION(function () { return _this.SUBRULE(_this.iri); });\n        });\n        _this.FromClause = _this.RULE('FromClause', function () {\n            _this.CONSUME(smsTokenMap.FROM);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.SqlClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.JsonClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.GraphQlClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.CsvClause); },\n                },\n            ]);\n        });\n        _this.JsonClause = _this.RULE('JsonClause', function () {\n            _this.CONSUME(smsTokenMap.Json);\n            _this.CONSUME(smsTokenMap.JsonBlock);\n        });\n        _this.GraphQlClause = _this.RULE('GraphQlClause', function () {\n            _this.CONSUME(smsTokenMap.GraphQl);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.CONSUME(smsTokenMap.GraphQlBlock);\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.SqlClause = _this.RULE('SqlClause', function () {\n            _this.CONSUME(smsTokenMap.Sql);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.CONSUME(smsTokenMap.SqlBlock);\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.CsvClause = _this.RULE('CsvClause', function () {\n            _this.CONSUME(smsTokenMap.Csv);\n            _this.OPTION(function () {\n                _this.CONSUME(smsTokenMap.LCurly);\n                _this.CONSUME(smsTokenMap.RCurly);\n            });\n        });\n        _this.ToClause = _this.RULE('ToClause', function () {\n            _this.CONSUME(smsTokenMap.TO);\n            _this.SUBRULE(_this.ConstructTemplate);\n        });\n        _this.WhereClause = _this.OVERRIDE_RULE('WhereClause', function () {\n            _this.CONSUME(smsTokenMap.WHERE);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.Bind); });\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.Bind = _this.OVERRIDE_RULE('Bind', function () {\n            _this.CONSUME(smsTokenMap.BIND);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.BindExpression);\n            _this.CONSUME(smsTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.BindExpression = _this.RULE('BindExpression', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.TemplateFunc); } },\n                { ALT: function () { return _this.SUBRULE(_this.Expression); } },\n            ]);\n        });\n        _this.TemplateFunc = _this.RULE('TemplateFunc', function () {\n            _this.CONSUME(smsTokenMap.Template);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.String);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.Object = _this.OVERRIDE_RULE('Object', function () {\n            _this.SUBRULE(_this.GraphNode);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return SmsParser;\n}(StardogSparqlParser));\nexport { SmsParser };\n","export * from './SmsParser';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nexport var smsTokens = require('./tokens');\n"],"sourceRoot":""}