{"version":3,"sources":["webpack://millan.[name]/webpack/universalModuleDefinition","webpack://millan.[name]/webpack/bootstrap","webpack://millan.[name]/./src/sms/tokens.ts","webpack://millan.[name]/./src/sms/SmsParser.ts","webpack://millan.[name]/./src/sms/index.ts"],"names":["root","factory","exports","module","define","amd","self","this","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","__webpack_exports__","smsTokenMap","smsTokenTypes","chevrotain__WEBPACK_IMPORTED_MODULE_0__","sparqlTokenMap","FROM_BLOCK_END_MATCHER","FROM_JSON_BLOCK_END_MATCHER","explicitEndMatcher","textToMatch","endCandidateChar","endMatcher","offset","blockEndCandidate","exec","STRING_LITERAL1","STRING_LITERAL2","STRING_LITERAL_LONG1","STRING_LITERAL_LONG2","IRIREF","PNAME_LN","PNAME_NS","NIL","DISTINCT","VAR1","VAR2","BIND","AS","WHERE","LANGTAG","INTEGER","DECIMAL","DOUBLE","INTEGER_POSITIVE","DECIMAL_POSITIVE","DOUBLE_POSITIVE","INTEGER_NEGATIVE","DECIMAL_NEGATIVE","DOUBLE_NEGATIVE","TRUE","FALSE","BLANK_NODE_LABEL","ANON","A","FROM","PREFIX","Comment","Period","Comma","LCurly","RCurly","LParen","RParen","WhiteSpace","DoubleCaret","Semicolon","LBracket","RBracket","Template","pattern","TO","Sql","GraphQl","Json","Mapping","SqlBlock","text","startOffset","matchedTokensSoFar","_a","secondToLastToken","lastToken","tokenType","tokenName","line_breaks","JsonBlock","match","GraphQlBlock","extendStatics","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","__assign","assign","arguments","SmsParser_SmsParser","_super","SmsParser","config","_this","outputCst","recoveryEnabled","tokenize","document","lexer","tokens","parse","input","cst","MappingDoc","errors","RULE","MANY","SUBRULE","PrefixDecl","OPTION","MappingClause","MANY1","CONSUME","SUBRULE1","MappingDecl","FromClause","ToClause","WhereClause","iri","OR","ALT","SqlClause","JsonClause","GraphQlClause","ConstructTemplate","Bind","TemplateOrCast","Var","TemplateFunc","CastFunc","String","PrefixedName","ConstructTriples","TriplesSameSubject","OPTION1","VarOrTerm","PropertyListNotEmpty","TriplesNode","PropertyList","GraphTerm","Verb","ObjectList","Collection","BlankNodePropertyList","RDFLiteral","NumericLiteral","BooleanLiteral","BlankNode","VarOrIri","AT_LEAST_ONE_SEP","SEP","DEF","GraphNode","AT_LEAST_ONE","NumericLiteralUnsigned","NumericLiteralPositive","NumericLiteralNegative","api","performSelfAnalysis","smsTokens"],"mappings":"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","file":"millan.sms.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"sms\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sms\"] = factory();\n\telse\n\t\troot[\"millan\"] = root[\"millan\"] || {}, root[\"millan\"][\"sms\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([68,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var sparqlTokenMap = require('../sparql/tokens').sparqlTokenMap;\nimport { createToken } from 'chevrotain';\nvar FROM_BLOCK_END_MATCHER = /^\\s*to\\s*{/i;\nvar FROM_JSON_BLOCK_END_MATCHER = /((?:.|\\s)*?)to\\s*{/i;\n// Because the end of `FROM` clauses in SMS are not explicit, tokenizing them\n// using regexes can be incredibly inefficient. This function gives us a bit\n// more control; it scans through the document character by character until\n// it finds a character which is _likely_ to be followed by an ending pattern,\n// and only then does it use a regex to confirm.\nvar explicitEndMatcher = function (textToMatch, endCandidateChar, // Char which, if found, triggers an exec of endMatcher\nendMatcher // Regex which matches an end pattern\n) {\n    for (var offset = 0, char = void 0; offset < textToMatch.length; offset++) {\n        char = textToMatch[offset];\n        if (char === endCandidateChar) {\n            var blockEndCandidate = textToMatch.slice(offset + 1);\n            var match = endMatcher.exec(blockEndCandidate);\n            if (!match) {\n                continue;\n            }\n            else {\n                var blockText = textToMatch.slice(0, offset);\n                var response = [blockText];\n                return response;\n            }\n        }\n    }\n    return null;\n};\nexport var smsTokenMap = {\n    STRING_LITERAL1: sparqlTokenMap.STRING_LITERAL1,\n    STRING_LITERAL2: sparqlTokenMap.STRING_LITERAL2,\n    STRING_LITERAL_LONG1: sparqlTokenMap.STRING_LITERAL_LONG1,\n    STRING_LITERAL_LONG2: sparqlTokenMap.STRING_LITERAL_LONG2,\n    IRIREF: sparqlTokenMap.IRIREF,\n    PNAME_LN: sparqlTokenMap.PNAME_LN,\n    PNAME_NS: sparqlTokenMap.PNAME_NS,\n    NIL: sparqlTokenMap.NIL,\n    DISTINCT: sparqlTokenMap.DISTINCT,\n    VAR1: sparqlTokenMap.VAR1,\n    VAR2: sparqlTokenMap.VAR2,\n    BIND: sparqlTokenMap.BIND,\n    AS: sparqlTokenMap.AS,\n    WHERE: sparqlTokenMap.WHERE,\n    LANGTAG: sparqlTokenMap.LANGTAG,\n    INTEGER: sparqlTokenMap.INTEGER,\n    DECIMAL: sparqlTokenMap.DECIMAL,\n    DOUBLE: sparqlTokenMap.DOUBLE,\n    INTEGER_POSITIVE: sparqlTokenMap.INTEGER_POSITIVE,\n    DECIMAL_POSITIVE: sparqlTokenMap.DECIMAL_POSITIVE,\n    DOUBLE_POSITIVE: sparqlTokenMap.DOUBLE_POSITIVE,\n    INTEGER_NEGATIVE: sparqlTokenMap.INTEGER_NEGATIVE,\n    DECIMAL_NEGATIVE: sparqlTokenMap.DECIMAL_NEGATIVE,\n    DOUBLE_NEGATIVE: sparqlTokenMap.DOUBLE_NEGATIVE,\n    TRUE: sparqlTokenMap.TRUE,\n    FALSE: sparqlTokenMap.FALSE,\n    BLANK_NODE_LABEL: sparqlTokenMap.BLANK_NODE_LABEL,\n    ANON: sparqlTokenMap.ANON,\n    A: sparqlTokenMap.A,\n    FROM: sparqlTokenMap.FROM,\n    PREFIX: sparqlTokenMap.PREFIX,\n    Comment: sparqlTokenMap.Comment,\n    Period: sparqlTokenMap.Period,\n    Comma: sparqlTokenMap.Comma,\n    LCurly: sparqlTokenMap.LCurly,\n    RCurly: sparqlTokenMap.RCurly,\n    LParen: sparqlTokenMap.LParen,\n    RParen: sparqlTokenMap.RParen,\n    WhiteSpace: sparqlTokenMap.WhiteSpace,\n    DoubleCaret: sparqlTokenMap.DoubleCaret,\n    Semicolon: sparqlTokenMap.Semicolon,\n    LBracket: sparqlTokenMap.LBracket,\n    RBracket: sparqlTokenMap.RBracket,\n    Template: createToken({\n        name: 'Template',\n        pattern: /template/i,\n    }),\n    TO: createToken({\n        name: 'TO',\n        pattern: /to/i,\n    }),\n    Sql: createToken({\n        name: 'Sql',\n        pattern: /sql/i,\n    }),\n    GraphQl: createToken({\n        name: 'GraphQl',\n        pattern: /graphql/i,\n    }),\n    Json: createToken({\n        name: 'Json',\n        pattern: /json/i,\n    }),\n    Mapping: createToken({\n        name: 'Mapping',\n        pattern: /mapping/i,\n    }),\n    SqlBlock: createToken({\n        name: 'SqlBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var _a = matchedTokensSoFar.slice(-2), secondToLastToken = _a[0], lastToken = _a[1];\n            if (!secondToLastToken ||\n                !lastToken ||\n                secondToLastToken.tokenType.tokenName !== smsTokenMap.Sql.tokenName ||\n                lastToken.tokenType.tokenName !== smsTokenMap.LCurly.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            return explicitEndMatcher(textToMatch, '}', FROM_BLOCK_END_MATCHER);\n        },\n        line_breaks: true,\n    }),\n    JsonBlock: createToken({\n        name: 'JsonBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var lastToken = matchedTokensSoFar.slice(-1)[0];\n            if (!lastToken ||\n                lastToken.tokenType.tokenName !== smsTokenMap.Json.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            var match = FROM_JSON_BLOCK_END_MATCHER.exec(textToMatch);\n            if (!match) {\n                return null;\n            }\n            var capturedMatch = match.slice(1);\n            return capturedMatch;\n        },\n        line_breaks: true,\n    }),\n    GraphQlBlock: createToken({\n        name: 'GraphQlBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var _a = matchedTokensSoFar.slice(-2), secondToLastToken = _a[0], lastToken = _a[1];\n            if (!secondToLastToken ||\n                !lastToken ||\n                secondToLastToken.tokenType.tokenName !==\n                    smsTokenMap.GraphQl.tokenName ||\n                lastToken.tokenType.tokenName !== smsTokenMap.LCurly.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            return explicitEndMatcher(textToMatch, '}', FROM_BLOCK_END_MATCHER);\n        },\n        line_breaks: true,\n    }),\n};\nexport var smsTokenTypes = [\n    smsTokenMap.WhiteSpace,\n    smsTokenMap.Comment,\n    smsTokenMap.LParen,\n    smsTokenMap.RParen,\n    smsTokenMap.Period,\n    smsTokenMap.Template,\n    smsTokenMap.IRIREF,\n    smsTokenMap.PNAME_LN,\n    smsTokenMap.PNAME_NS,\n    smsTokenMap.NIL,\n    smsTokenMap.DISTINCT,\n    smsTokenMap.VAR1,\n    smsTokenMap.VAR2,\n    smsTokenMap.BIND,\n    smsTokenMap.AS,\n    smsTokenMap.WHERE,\n    smsTokenMap.TO,\n    smsTokenMap.LANGTAG,\n    smsTokenMap.INTEGER,\n    smsTokenMap.DECIMAL,\n    smsTokenMap.DOUBLE,\n    smsTokenMap.INTEGER_POSITIVE,\n    smsTokenMap.DECIMAL_POSITIVE,\n    smsTokenMap.DOUBLE_POSITIVE,\n    smsTokenMap.INTEGER_NEGATIVE,\n    smsTokenMap.DECIMAL_NEGATIVE,\n    smsTokenMap.DOUBLE_NEGATIVE,\n    smsTokenMap.TRUE,\n    smsTokenMap.FALSE,\n    smsTokenMap.BLANK_NODE_LABEL,\n    smsTokenMap.ANON,\n    smsTokenMap.A,\n    smsTokenMap.FROM,\n    smsTokenMap.PREFIX,\n    smsTokenMap.Comma,\n    smsTokenMap.DoubleCaret,\n    smsTokenMap.Semicolon,\n    smsTokenMap.LBracket,\n    smsTokenMap.RBracket,\n    smsTokenMap.Sql,\n    smsTokenMap.GraphQl,\n    smsTokenMap.Json,\n    smsTokenMap.Mapping,\n    smsTokenMap.SqlBlock,\n    smsTokenMap.JsonBlock,\n    smsTokenMap.GraphQlBlock,\n    smsTokenMap.LCurly,\n    smsTokenMap.RCurly,\n    smsTokenMap.STRING_LITERAL1,\n    smsTokenMap.STRING_LITERAL2,\n    smsTokenMap.STRING_LITERAL_LONG1,\n    smsTokenMap.STRING_LITERAL_LONG2,\n];\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('./tokens'), smsTokenTypes = _a.smsTokenTypes, smsTokenMap = _a.smsTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\nvar SmsParser = /** @class */ (function (_super) {\n    __extends(SmsParser, _super);\n    function SmsParser(config) {\n        var _this = _super.call(this, smsTokenTypes, __assign({ outputCst: true, recoveryEnabled: true }, config)) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document) {\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = _this.MappingDoc();\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.MappingDoc = _this.RULE('MappingDoc', function () {\n            _this.MANY(function () { return _this.SUBRULE(_this.PrefixDecl); });\n            _this.OPTION(function () {\n                _this.SUBRULE(_this.MappingClause);\n                _this.MANY1(function () {\n                    _this.CONSUME(smsTokenMap.Semicolon);\n                    _this.SUBRULE1(_this.MappingClause);\n                });\n            });\n        });\n        _this.MappingClause = _this.RULE('MappingClause', function () {\n            _this.SUBRULE(_this.MappingDecl);\n            _this.SUBRULE(_this.FromClause);\n            _this.SUBRULE(_this.ToClause);\n            _this.SUBRULE(_this.WhereClause);\n        });\n        _this.MappingDecl = _this.RULE('MappingDecl', function () {\n            _this.CONSUME(smsTokenMap.Mapping);\n            _this.OPTION(function () { return _this.SUBRULE(_this.iri); });\n        });\n        _this.FromClause = _this.RULE('FromClause', function () {\n            _this.CONSUME(smsTokenMap.FROM);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.SqlClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.JsonClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.GraphQlClause); },\n                },\n            ]);\n        });\n        _this.JsonClause = _this.RULE('JsonClause', function () {\n            _this.CONSUME(smsTokenMap.Json);\n            _this.CONSUME(smsTokenMap.JsonBlock);\n        });\n        _this.GraphQlClause = _this.RULE('GraphQlClause', function () {\n            _this.CONSUME(smsTokenMap.GraphQl);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.CONSUME(smsTokenMap.GraphQlBlock);\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.SqlClause = _this.RULE('SqlClause', function () {\n            _this.CONSUME(smsTokenMap.Sql);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.CONSUME(smsTokenMap.SqlBlock);\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.ToClause = _this.RULE('ToClause', function () {\n            _this.CONSUME(smsTokenMap.TO);\n            _this.SUBRULE(_this.ConstructTemplate);\n        });\n        _this.WhereClause = _this.RULE('WhereClause', function () {\n            _this.CONSUME(smsTokenMap.WHERE);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.Bind); });\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.Bind = _this.RULE('Bind', function () {\n            _this.CONSUME(smsTokenMap.BIND);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.TemplateOrCast);\n            _this.CONSUME(smsTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.TemplateOrCast = _this.RULE('TemplateOrCast', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.TemplateFunc); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.CastFunc); },\n                },\n            ]);\n        });\n        _this.CastFunc = _this.RULE('CastFunc', function () {\n            _this.SUBRULE(_this.iri);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.TemplateFunc = _this.RULE('TemplateFunc', function () {\n            _this.CONSUME(smsTokenMap.Template);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.String);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        //\n        // Dupes from Sparql\n        //\n        _this.PrefixDecl = _this.RULE('PrefixDecl', function () {\n            _this.CONSUME(smsTokenMap.PREFIX);\n            _this.CONSUME(smsTokenMap.PNAME_NS);\n            _this.CONSUME(smsTokenMap.IRIREF);\n        });\n        _this.iri = _this.RULE('iri', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.IRIREF); } },\n                { ALT: function () { return _this.SUBRULE(_this.PrefixedName); } },\n            ]);\n        });\n        _this.PrefixedName = _this.RULE('PrefixedName', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.PNAME_LN); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.PNAME_NS); } },\n            ]);\n        });\n        _this.ConstructTemplate = _this.RULE('ConstructTemplate', function () {\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.OPTION(function () { return _this.SUBRULE(_this.ConstructTriples); });\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.ConstructTriples = _this.RULE('ConstructTriples', function () {\n            _this.SUBRULE(_this.TriplesSameSubject);\n            _this.OPTION(function () {\n                _this.CONSUME(smsTokenMap.Period);\n                _this.OPTION1(function () { return _this.SUBRULE(_this.ConstructTriples); });\n            });\n        });\n        _this.TriplesSameSubject = _this.RULE('TriplesSameSubject', function () {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.VarOrTerm);\n                        _this.SUBRULE(_this.PropertyListNotEmpty);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.TriplesNode);\n                        _this.SUBRULE(_this.PropertyList);\n                    },\n                },\n            ]);\n        });\n        _this.VarOrTerm = _this.RULE('VarOrTerm', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphTerm); } },\n            ]);\n        });\n        _this.PropertyListNotEmpty = _this.RULE('PropertyListNotEmpty', function () {\n            _this.SUBRULE(_this.Verb);\n            _this.SUBRULE(_this.ObjectList);\n            _this.MANY(function () {\n                _this.CONSUME(smsTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.SUBRULE1(_this.Verb);\n                    _this.SUBRULE1(_this.ObjectList);\n                });\n            });\n        });\n        _this.TriplesNode = _this.RULE('TriplesNode', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Collection); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNodePropertyList); } },\n            ]);\n        });\n        _this.PropertyList = _this.RULE('PropertyList', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.PropertyListNotEmpty); });\n        });\n        _this.GraphTerm = _this.RULE('GraphTerm', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNode); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.NIL); } },\n            ]);\n        });\n        _this.Verb = _this.RULE('Verb', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VarOrIri); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.A); } },\n            ]);\n        });\n        _this.ObjectList = _this.RULE('ObjectList', function () {\n            _this.AT_LEAST_ONE_SEP({\n                SEP: smsTokenMap.Comma,\n                DEF: function () { return _this.SUBRULE(_this.Object); },\n            });\n        });\n        _this.Object = _this.RULE('Object', function () {\n            _this.SUBRULE(_this.GraphNode);\n        });\n        _this.Collection = _this.RULE('Collection', function () {\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.GraphNode); });\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.BlankNodePropertyList = _this.RULE('BlankNodePropertyList', function () {\n            _this.CONSUME(smsTokenMap.LBracket);\n            _this.SUBRULE(_this.PropertyListNotEmpty);\n            _this.CONSUME(smsTokenMap.RBracket);\n        });\n        _this.VarOrIri = _this.RULE('VarOrIri', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n            ]);\n        });\n        _this.RDFLiteral = _this.RULE('RDFLiteral', function () {\n            _this.SUBRULE(_this.String);\n            _this.OPTION(function () {\n                return _this.OR([\n                    { ALT: function () { return _this.CONSUME(smsTokenMap.LANGTAG); } },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(smsTokenMap.DoubleCaret);\n                            _this.SUBRULE(_this.iri);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.NumericLiteral = _this.RULE('NumericLiteral', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralUnsigned); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralPositive); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralNegative); } },\n            ]);\n        });\n        _this.NumericLiteralUnsigned = _this.RULE('NumericLiteralUnsigned', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.INTEGER); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.DECIMAL); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.DOUBLE); } },\n            ]);\n        });\n        _this.NumericLiteralPositive = _this.RULE('NumericLiteralPositive', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.INTEGER_POSITIVE); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.DECIMAL_POSITIVE); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.DOUBLE_POSITIVE); } },\n            ]);\n        });\n        _this.NumericLiteralNegative = _this.RULE('NumericLiteralNegative', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.INTEGER_NEGATIVE); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.DECIMAL_NEGATIVE); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.DOUBLE_NEGATIVE); } },\n            ]);\n        });\n        _this.BooleanLiteral = _this.RULE('BooleanLiteral', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.TRUE); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.FALSE); } },\n            ]);\n        });\n        _this.BlankNode = _this.RULE('BlankNode', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.BLANK_NODE_LABEL); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.ANON); } },\n            ]);\n        });\n        _this.GraphNode = _this.RULE('GraphNode', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VarOrTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.TriplesNode); } },\n            ]);\n        });\n        _this.Var = _this.RULE('Var', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.VAR1); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.VAR2); } },\n            ]);\n        });\n        _this.String = _this.RULE('String', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(smsTokenMap.STRING_LITERAL1); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.STRING_LITERAL2); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.STRING_LITERAL_LONG1); } },\n                { ALT: function () { return _this.CONSUME(smsTokenMap.STRING_LITERAL_LONG2); } },\n            ]);\n        });\n        _this.lexer = new Lexer(smsTokenTypes);\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return SmsParser;\n}(Parser));\nexport { SmsParser };\n","export * from './SmsParser';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nexport var smsTokens = require('./tokens');\n"],"sourceRoot":""}