{"version":3,"sources":["webpack://millan.[name]/webpack/universalModuleDefinition","webpack://millan.[name]/webpack/bootstrap","webpack://millan.[name]/./src/sparql/StardogSparqlParser.ts","webpack://millan.[name]/./src/graphql/tokens.ts","webpack://millan.[name]/./src/graphql/BaseGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StandardGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlVisitor.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlParser.ts","webpack://millan.[name]/./src/graphql/index.ts"],"names":["root","factory","exports","module","define","amd","self","this","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","__webpack_exports__","StardogSparqlParser","extendStatics","_BaseSparqlParser__WEBPACK_IMPORTED_MODULE_0__","chevrotain__WEBPACK_IMPORTED_MODULE_1__","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","_a","sparqlTokenMap","stardogSparqlTokens","_super","options","_this","Query","OVERRIDE_RULE","OR","ALT","SUBRULE","SelectQuery","ConstructQuery","DescribeQuery","AskQuery","PathQuery","ValuesClause","RULE","PathSpec","MANY","DatasetClause","CONSUME","START","PathTerminal","END","SUBRULE1","Via","OPTION","MaxLength","SolutionModifier","VIA","GroupGraphPattern","Var","Path","Equals","iri","PATHS","PATHS_SHORTEST","PATHS_ALL","OPTION1","CYCLIC","GraphPatternNotTriples","GroupOrUnionGraphPattern","OptionalGraphPattern","MinusGraphPattern","GraphGraphPattern","ServiceGraphPattern","Filter","Bind","Unnest","InlineData","UNNEST","LParen","Expression","AS","RParen","BuiltInCall","Aggregate","BuiltInCall_STR","BuiltInCall_LANG","BuiltInCall_LANGMATCHES","BuiltInCall_DATATYPE","BuiltInCall_BOUND","BuiltInCall_IRI","BuiltInCall_URI","BuiltInCall_BNODE","BuiltInCall_RAND","BuiltInCall_ABS","BuiltInCall_CEIL","BuiltInCall_FLOOR","BuiltInCall_ROUND","BuiltInCall_CONCAT","SubstringExpression","BuiltInCall_STRLEN","StrReplaceExpression","BuiltInCall_UCASE","BuiltInCall_LCASE","BuiltInCall_ENCODE_FOR_URI","BuiltInCall_CONTAINS","BuiltInCall_STRSTARTS","BuiltInCall_STRENDS","BuiltInCall_STRBEFORE","BuiltInCall_STRAFTER","BuiltInCall_YEAR","BuiltInCall_MONTH","BuiltInCall_DAY","BuiltInCall_HOURS","BuiltInCall_MINUTES","BuiltInCall_SECONDS","BuiltInCall_TIMEZONE","BuiltInCall_TZ","BuiltInCall_NOW","BuiltInCall_UUID","BuiltInCall_STRUUID","BuiltInCall_MD5","BuiltInCall_SHA1","BuiltInCall_SHA256","BuiltInCall_SHA384","BuiltInCall_SHA512","BuiltInCall_COALESCE","BuiltInCall_IF","BuiltInCall_STRLANG","BuiltInCall_STRDT","BuiltInCall_sameTerm","BuiltInCall_isIRI","BuiltInCall_isURI","BuiltInCall_isBlank","BuiltInCall_isLiteral","BuiltInCall_isNumeric","RegexExpression","ExistsFunction","NotExistsFunction","StardogOrCustomFunction","Unknown","ExpressionList","ConstructTemplate","LCurly","Quads","RCurly","performSelfAnalysis","graphQlTokenMap","graphQlTokens","stardogGraphQlTokenMap","stardogGraphQlTokens","chevrotain__WEBPACK_IMPORTED_MODULE_0__","helpers_regex__WEBPACK_IMPORTED_MODULE_1__","helpers_matchers__WEBPACK_IMPORTED_MODULE_2__","__assign","assign","arguments","INTEGER_PART_PATTERN","EXPONENT_PART_PATTERN","STRING_CHARACTER_PATTERN","and","many","or","BOOLEAN_PATTERN","NULL_PATTERN","ON_PATTERN","createAndPushTokenWithNameAlt","config","categories","Name","pattern","EnumValueToken","FragmentName","createAndPushToken","longer_alt","token","NA","StringValueToken","CATEGORIES","ignoredTokens","WhiteSpace","group","SKIPPED","UnicodeBOM","LineTerminator","Comment","Comma","punctuators","Bang","Dollar","Spread","Colon","At","LBracket","RBracket","Pipe","Amp","nonKeywordTerminals","FloatValueToken","option","IntValueToken","BlockStringToken","StringToken","BooleanValueToken","NullValueToken","keywords","Mutation","Subscription","Fragment","On","Schema","Extend","Scalar","TypeToken","Implements","Interface","Union","Enum","Input","DirectiveToken","QUERY","MUTATION","SUBSCRIPTION","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","FIELD","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","ENUM","INPUT_OBJECT","INPUT_FIELD_DEFINITION","stardogDirectives","sort","reduce","accumulator","toUpperCase","tokenMap","orderedTokens","concat","stardogArguments","stardogOrderByArgumentFieldPropertyToken","stardogOrderByArgumentDescPropertyToken","OrderByArgumentFieldPropertyToken","OrderByArgumentDescPropertyToken","finalTokens","BaseGraphQlParser_BaseGraphQlParser","BaseGraphQlParser","tokenVocab","recoveryEnabled","outputCst","tokenize","document","lexer","tokens","parse","entryRule","Document","input","cst","errors","AT_LEAST_ONE","Definition","ExecutableDefinition","TypeSystemDefinition","TypeSystemExtension","OperationDefinition","FragmentDefinition","SelectionSet","OperationType","VariableDefinitions","OPTION2","Directives","Selection","Field","InlineFragment","FragmentSpread","Alias","Arguments","ARGS","OPTION3","isConst","Argument","Value","TypeCondition","NamedType","GATE","Variable","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","VariableDefinition","Type","DefaultValue","ListType","Directive","SchemaDefinition","TypeDefinition","DirectiveDefinition","SchemaExtension","TypeExtension","OperationTypeDefinition","OperationTypeDefinitionList","Description","ScalarTypeDefinition","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","InputObjectTypeDefinition","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","ImplementsInterfaces","FieldsDefinition","SUBRULE2","CONSUME1","FieldDefinition","ArgumentsDefinition","InputValueDefinition","UnionMemberTypes","EnumValuesDefinition","EnumValueDefinition","InputFieldsDefinition","DirectiveLocations","DirectiveLocation","ExecutableDirectiveLocation","TypeSystemDirectiveLocation","api","StandardGraphQlParser_extends","StandardGraphQlParser_StandardGraphQlParser","StandardGraphQlParser","StardogGraphQlVisitor_extends","StardogGraphQlVisitor_assign","getStardogGraphQlVisitor","BaseVisitor","StardogGraphQlVisitor","sparqlErrors","visit","args","_i","map","error","BindDirective","ctx","stringValueToken","children","$parseSparqlExpression","$mapErrors","ConditionalStardogDirective","conditionalStardogDirectiveArgumentsNode","ConditionalStardogDirectiveArguments","tokenForOffset","offsetPadding","tokenStartOffset","startOffset","tokenEndOffset","endOffset","tokenStartColumn","startColumn","tokenEndColumn","endColumn","errorStartOffset","errorEndOffset","errorStartColumn","errorEndColumn","startLine","endLine","innerExpressionImage","image","stardogSparqlParser","$resetState","validateVisitor","StardogGraphQlParser_extends","StardogGraphQlParser_StardogGraphQlParser","StardogGraphQlParser","visitCst","stardogGraphQlVisitor","BaseStardogGraphQlVisitor","getBaseCstVisitorConstructorWithDefaults","isTopLevel","StardogDirective","isField","StardogArgument","OrderByArgument","SkipArgument","OffsetArgument","FirstArgument","LimitArgument","IriArgument","BareStardogDirective","PrefixDirective","ConfigDirective","SkipDirective","IncludeDirective","FilterDirective","SkipDirectiveToken","IncludeDirectiveToken","FilterDirectiveToken","IfArgumentToken","OptionalDirective","TypeDirective","HideDirective","OptionalDirectiveToken","HideDirectiveToken","BindDirectiveToken","ToArgumentToken","PrefixDirectiveToken","ConfigDirectiveToken","ConfigDirectiveAlias","ConfigDirectiveGraph","ConfigDirectiveType","AliasArgument","OR1","GraphArgument","TypeArgument","OR2","OPTION4","SUBRULE3","OPTION5","SUBRULE4","OPTION6","OR3","OPTION7","OPTION8","AliasArgumentToken","AliasArgumentField","GraphArgumentToken","OrderByArgumentToken","OrderByArgumentField","OrderByArgumentFieldProperty","OrderByArgumentDescProperty","OffsetArgumentToken","FirstArgumentToken","LimitArgumentToken","IriArgumentToken","graphqlTokens"],"mappings":"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","file":"millan.graphql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"graphql\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"graphql\"] = factory();\n\telse\n\t\troot[\"millan\"] = root[\"millan\"] || {}, root[\"millan\"][\"graphql\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([64,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), sparqlTokenMap = _a.sparqlTokenMap, stardogSparqlTokens = _a.stardogSparqlTokens;\nimport { BaseSparqlParser } from './BaseSparqlParser';\nimport { Parser } from 'chevrotain';\nvar StardogSparqlParser = /** @class */ (function (_super) {\n    __extends(StardogSparqlParser, _super);\n    function StardogSparqlParser(options) {\n        var _this = _super.call(this, options, stardogSparqlTokens) || this;\n        _this.Query = _this.OVERRIDE_RULE('Query', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.ConstructQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.DescribeQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.AskQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.PathQuery); } },\n            ]);\n            _this.SUBRULE(_this.ValuesClause);\n        });\n        _this.PathQuery = _this.RULE('PathQuery', function () {\n            _this.SUBRULE(_this.PathSpec);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.CONSUME(sparqlTokenMap.START);\n            _this.SUBRULE(_this.PathTerminal);\n            _this.CONSUME(sparqlTokenMap.END);\n            _this.SUBRULE1(_this.PathTerminal);\n            _this.SUBRULE(_this.Via);\n            _this.OPTION(function () { return _this.SUBRULE(_this.MaxLength); });\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.Via = _this.RULE('Via', function () {\n            _this.CONSUME(sparqlTokenMap.VIA);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.Path); } },\n            ]);\n        });\n        _this.PathTerminal = _this.RULE('PathTerminal', function () {\n            _this.SUBRULE(_this.Var);\n            _this.OPTION(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.Equals);\n                            _this.SUBRULE(_this.iri);\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                ]);\n            });\n        });\n        _this.PathSpec = _this.RULE('PathSpec', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_SHORTEST); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_ALL); } },\n            ]);\n            _this.OPTION1(function () { return _this.CONSUME(sparqlTokenMap.CYCLIC); });\n        });\n        _this.GraphPatternNotTriples = _this.OVERRIDE_RULE('GraphPatternNotTriples', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupOrUnionGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.OptionalGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.MinusGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.ServiceGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Filter); } },\n                { ALT: function () { return _this.SUBRULE(_this.Bind); } },\n                { ALT: function () { return _this.SUBRULE(_this.Unnest); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineData); } },\n            ]);\n        });\n        _this.Unnest = _this.RULE('Unnest', function () {\n            _this.CONSUME(sparqlTokenMap.UNNEST);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall = _this.OVERRIDE_RULE('BuiltInCall', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Aggregate); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANGMATCHES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DATATYPE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BOUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BNODE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_RAND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ABS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CEIL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_FLOOR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ROUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONCAT); } },\n                { ALT: function () { return _this.SUBRULE(_this.SubstringExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLEN); } },\n                { ALT: function () { return _this.SUBRULE(_this.StrReplaceExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ENCODE_FOR_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONTAINS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRSTARTS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRENDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRBEFORE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRAFTER); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_YEAR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MONTH); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DAY); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_HOURS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MINUTES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SECONDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TIMEZONE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TZ); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_NOW); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRUUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MD5); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA1); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA256); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA384); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA512); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_COALESCE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IF); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRDT); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_sameTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isIRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isURI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isBlank); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isNumeric); } },\n                { ALT: function () { return _this.SUBRULE(_this.RegexExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.ExistsFunction); } },\n                { ALT: function () { return _this.SUBRULE(_this.NotExistsFunction); } },\n                // Stardog has some additional built-in functions, and supports user-defined custom functions\n                { ALT: function () { return _this.SUBRULE(_this.StardogOrCustomFunction); } },\n            ]);\n        });\n        _this.StardogOrCustomFunction = _this.RULE('StardogOrCustomFunction', function () {\n            _this.CONSUME(sparqlTokenMap.Unknown);\n            _this.SUBRULE(_this.ExpressionList);\n        });\n        _this.ConstructTemplate = _this.OVERRIDE_RULE('ConstructTemplate', function () {\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OPTION(function () {\n                // Stardog supports the request of Quads in a Construct template. See Stardog issue #675\n                return _this.SUBRULE(_this.Quads);\n            });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogSparqlParser;\n}(BaseSparqlParser));\nexport { StardogSparqlParser };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createToken, Lexer } from 'chevrotain';\nimport { regex } from 'helpers/regex';\nimport { STRING_LITERAL_LONG2 } from 'helpers/matchers';\n// Patterns:\nvar NAME_PATTERN = /[_A-Za-z][_0-9A-Za-z]*/;\nvar INTEGER_PART_PATTERN = /\\-?(?:0|[1-9][0-9]*)/;\nvar EXPONENT_PART_PATTERN = /[eE][+-]?[0-9]+/;\nvar ESCAPED_CHARACTER_PATTERN = /\\\\[\"\\\\/bfnrt]/;\nvar ESCAPED_UNICODE_PATTERN = /\\\\u[0-9A-Fa-f]{4}/;\nvar STRING_SOURCE_CHARACTER_PATTERN = /[\\u0009\\u0020\\u0021\\u0023-\\u005B\\u005D-\\uFFFF]/; // source character, but no '\"' or '\\' or line terminators\nvar STRING_CHARACTER_PATTERN = regex.and(/\"/, regex.many(regex.or(STRING_SOURCE_CHARACTER_PATTERN, ESCAPED_UNICODE_PATTERN, ESCAPED_CHARACTER_PATTERN)), /\"/);\nvar BOOLEAN_PATTERN = /true|false/;\nvar NULL_PATTERN = /null/;\nvar ON_PATTERN = /on/;\n// Holder of tokens; tokens are generally added and created in order, below.\nvar graphQlTokens = [];\n// Utility used primarily for keywords, which should also be counted as\n// matching the `Name` token and (except for special cases) the\n// `EnumValueToken` and `FragmentName` tokens. Ensures the created token has\n// those other tokens as categories, and ensures that `Name` will be matched\n// correctly for tokens that start with keyword characters but have additional\n// characters. Adds the created token to the `graphQlTokens` array.\nvar createAndPushTokenWithNameAlt = function (config) {\n    var categories = [Name];\n    if (config.pattern !== BOOLEAN_PATTERN && config.pattern !== NULL_PATTERN) {\n        categories.push(EnumValueToken);\n    }\n    if (config.pattern !== ON_PATTERN) {\n        categories.push(FragmentName);\n    }\n    return createAndPushToken({\n        name: config.name,\n        pattern: config.pattern,\n        longer_alt: Name,\n        categories: categories,\n    });\n};\n// Simple wrapper for `createToken` that also pushes the created token into\n// `graphQlTokens` at the time of creation, since order matters.\nvar createAndPushToken = function (config) {\n    var token = createToken(config);\n    graphQlTokens.push(token);\n    return token;\n};\n// Category tokens need to be created first, so they can be referenced by other\n// tokens. They are _not_ yet added to the `graphQlTokens` array so that they\n// do not match before various more specific keywords.\nvar Name = createToken({ name: 'Name', pattern: NAME_PATTERN });\n// `EnumValueToken` and `FragmentName` are purely abstract categories that will\n// be matched for all `Name` tokens _except_ the special tokens specified in\n// the GraphQL grammar. See `createAndPushTokenWithNameAlt` for details.\nvar EnumValueToken = createToken({\n    name: 'EnumValueToken',\n    pattern: Lexer.NA,\n});\nvar FragmentName = createToken({\n    name: 'FragmentName',\n    pattern: Lexer.NA,\n});\n// `StringValueToken` will make either BlockStrings or Strings.\nvar StringValueToken = createToken({\n    name: 'StringValueToken',\n    pattern: Lexer.NA,\n});\n// Generally, anything that matches `Name` should match `EnumValueToken` and\n// `FragmentName`. NOTE, however that `On` will not match `FragmentName` and\n// `BooleanValueToken` and `NullValueToken` will not match `EnumValueToken`, in\n// accordance with the official grammar; this is handled by the fact that the\n// `On`, `BooleanValueToken`, and `FragmentName` tokens are defined and pushed\n// into the tokens array earlier than `Name`. Given\n// `createAndPushTokenWithNameAlt`, the latter tokens will also be treated as\n// `Name` tokens, but will NOT be treated as instances of the relevant\n// `EnumValueToken` or `FragmentName`. That's exactly what we want.\nName.CATEGORIES.push(EnumValueToken, FragmentName);\nvar ignoredTokens = {\n    WhiteSpace: createAndPushToken({\n        name: 'WhiteSpace',\n        pattern: /[ \\t]+/,\n        group: Lexer.SKIPPED,\n    }),\n    UnicodeBOM: createAndPushToken({\n        name: 'UnicodeBOM',\n        pattern: '\\\\uFFFE',\n        group: Lexer.SKIPPED,\n    }),\n    LineTerminator: createAndPushToken({\n        name: 'LineTerminator',\n        pattern: /\\n\\r|\\r|\\n/,\n        group: Lexer.SKIPPED,\n    }),\n    Comment: createAndPushToken({\n        name: 'Comment',\n        pattern: /#[^\\n\\r]*/,\n        group: Lexer.SKIPPED,\n    }),\n    Comma: createAndPushToken({\n        name: 'Comma',\n        pattern: ',',\n        group: Lexer.SKIPPED,\n    }),\n};\nvar punctuators = {\n    Bang: createAndPushToken({ name: 'Bang', pattern: '!' }),\n    Dollar: createAndPushToken({ name: 'Dollar', pattern: '$' }),\n    LParen: createAndPushToken({ name: 'LParen', pattern: '(' }),\n    RParen: createAndPushToken({ name: 'RParen', pattern: ')' }),\n    Spread: createAndPushToken({ name: 'Spread', pattern: '...' }),\n    Colon: createAndPushToken({ name: 'Colon', pattern: ':' }),\n    Equals: createAndPushToken({ name: 'Equals', pattern: '=' }),\n    At: createAndPushToken({ name: 'At', pattern: '@' }),\n    LBracket: createAndPushToken({ name: 'LBracket', pattern: '[' }),\n    RBracket: createAndPushToken({ name: 'RBracket', pattern: ']' }),\n    LCurly: createAndPushToken({ name: 'LCurly', pattern: '{' }),\n    RCurly: createAndPushToken({ name: 'RCurly', pattern: '}' }),\n    Pipe: createAndPushToken({ name: 'Pipe', pattern: '|' }),\n    Amp: createAndPushToken({ name: 'Amp', pattern: '&' }),\n};\nvar nonKeywordTerminals = {\n    FloatValueToken: createAndPushToken({\n        name: 'FloatValueToken',\n        pattern: regex.and(INTEGER_PART_PATTERN, regex.or(regex.and(/\\.[0-9]+/, regex.option(EXPONENT_PART_PATTERN)), EXPONENT_PART_PATTERN)),\n    }),\n    IntValueToken: createAndPushToken({\n        name: 'IntValueToken',\n        pattern: INTEGER_PART_PATTERN,\n    }),\n    BlockStringToken: createAndPushToken({\n        name: 'BlockStringToken',\n        pattern: STRING_LITERAL_LONG2,\n        categories: [StringValueToken],\n    }),\n    StringToken: createAndPushToken({\n        name: 'StringToken',\n        pattern: STRING_CHARACTER_PATTERN,\n        categories: [StringValueToken],\n    }),\n    BooleanValueToken: createAndPushTokenWithNameAlt({\n        name: 'BooleanValueToken',\n        pattern: BOOLEAN_PATTERN,\n    }),\n    NullValueToken: createAndPushTokenWithNameAlt({\n        name: 'NullValueToken',\n        pattern: NULL_PATTERN,\n    }),\n    EnumValueToken: EnumValueToken,\n    FragmentName: FragmentName,\n    Name: Name,\n    StringValueToken: StringValueToken,\n};\nvar keywords = {\n    Query: createAndPushTokenWithNameAlt({\n        name: 'Query',\n        pattern: 'query',\n    }),\n    Mutation: createAndPushTokenWithNameAlt({\n        name: 'Mutation',\n        pattern: 'mutation',\n    }),\n    Subscription: createAndPushTokenWithNameAlt({\n        name: 'Subscription',\n        pattern: 'subscription',\n    }),\n    Fragment: createAndPushTokenWithNameAlt({\n        name: 'Fragment',\n        pattern: 'fragment',\n    }),\n    On: createAndPushTokenWithNameAlt({\n        name: 'On',\n        pattern: ON_PATTERN,\n    }),\n    Schema: createAndPushTokenWithNameAlt({\n        name: 'Schema',\n        pattern: 'schema',\n    }),\n    Extend: createAndPushTokenWithNameAlt({\n        name: 'Extend',\n        pattern: 'extend',\n    }),\n    Scalar: createAndPushTokenWithNameAlt({\n        name: 'Scalar',\n        pattern: 'scalar',\n    }),\n    TypeToken: createAndPushTokenWithNameAlt({\n        name: 'TypeToken',\n        pattern: 'type',\n    }),\n    Implements: createAndPushTokenWithNameAlt({\n        name: 'Implements',\n        pattern: 'implements',\n    }),\n    Interface: createAndPushTokenWithNameAlt({\n        name: 'Interface',\n        pattern: 'interface',\n    }),\n    Union: createAndPushTokenWithNameAlt({\n        name: 'Union',\n        pattern: 'union',\n    }),\n    Enum: createAndPushTokenWithNameAlt({\n        name: 'Enum',\n        pattern: 'enum',\n    }),\n    Input: createAndPushTokenWithNameAlt({\n        name: 'Input',\n        pattern: 'input',\n    }),\n    DirectiveToken: createAndPushTokenWithNameAlt({\n        name: 'DirectiveToken',\n        pattern: 'directive',\n    }),\n    QUERY: createAndPushTokenWithNameAlt({ name: 'QUERY', pattern: 'QUERY' }),\n    MUTATION: createAndPushTokenWithNameAlt({\n        name: 'MUTATION',\n        pattern: 'MUTATION',\n    }),\n    SUBSCRIPTION: createAndPushTokenWithNameAlt({\n        name: 'SUBSCRIPTION',\n        pattern: 'SUBSCRIPTION',\n    }),\n    FRAGMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_DEFINITION',\n        pattern: 'FRAGMENT_DEFINITION',\n    }),\n    FRAGMENT_SPREAD: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_SPREAD',\n        pattern: 'FRAGMENT_SPREAD',\n    }),\n    INLINE_FRAGMENT: createAndPushTokenWithNameAlt({\n        name: 'INLINE_FRAGMENT',\n        pattern: 'INLINE_FRAGMENT',\n    }),\n    SCHEMA: createAndPushTokenWithNameAlt({ name: 'SCHEMA', pattern: 'SCHEMA' }),\n    SCALAR: createAndPushTokenWithNameAlt({ name: 'SCALAR', pattern: 'SCALAR' }),\n    OBJECT: createAndPushTokenWithNameAlt({ name: 'OBJECT', pattern: 'OBJECT' }),\n    FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FIELD_DEFINITION',\n        pattern: 'FIELD_DEFINITION',\n    }),\n    FIELD: createAndPushTokenWithNameAlt({ name: 'FIELD', pattern: 'FIELD' }),\n    ARGUMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'ARGUMENT_DEFINITION',\n        pattern: 'ARGUMENT_DEFINITION',\n    }),\n    INTERFACE: createAndPushTokenWithNameAlt({\n        name: 'INTERFACE',\n        pattern: 'INTERFACE',\n    }),\n    UNION: createAndPushTokenWithNameAlt({ name: 'UNION', pattern: 'UNION' }),\n    ENUM_VALUE: createAndPushTokenWithNameAlt({\n        name: 'ENUM_VALUE',\n        pattern: 'ENUM_VALUE',\n    }),\n    ENUM: createAndPushTokenWithNameAlt({ name: 'ENUM', pattern: 'ENUM' }),\n    INPUT_OBJECT: createAndPushTokenWithNameAlt({\n        name: 'INPUT_OBJECT',\n        pattern: 'INPUT_OBJECT',\n    }),\n    INPUT_FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'INPUT_FIELD_DEFINITION',\n        pattern: 'INPUT_FIELD_DEFINITION',\n    }),\n};\nvar graphQlTokenMap = __assign({}, ignoredTokens, punctuators, nonKeywordTerminals, keywords, { Name: Name });\nvar stardogDirectives = [\n    'optional',\n    'bind',\n    'hide',\n    'skip',\n    'include',\n    'filter',\n    'prefix',\n    'config',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"DirectiveToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\nvar stardogArguments = [\n    'orderBy',\n    'first',\n    'to',\n    'if',\n    'alias',\n    'graph',\n    'offset',\n    'limit',\n    'iri',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"ArgumentToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\n// These two tokens aren't really arguments or directives; instead, they're\n// fields of objects that can be passed as the stardog `orderBy` argument.\nvar stardogOrderByArgumentFieldPropertyToken = createToken({\n    name: 'OrderByArgumentFieldPropertyToken',\n    pattern: 'field',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogOrderByArgumentDescPropertyToken = createToken({\n    name: 'OrderByArgumentDescPropertyToken',\n    pattern: 'desc',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogGraphQlTokenMap = __assign({}, graphQlTokenMap, stardogDirectives.tokenMap, stardogArguments.tokenMap, { OrderByArgumentFieldPropertyToken: stardogOrderByArgumentFieldPropertyToken, OrderByArgumentDescPropertyToken: stardogOrderByArgumentDescPropertyToken });\nvar stardogGraphQlTokens = graphQlTokens.concat(stardogDirectives.orderedTokens, stardogArguments.orderedTokens, [\n    stardogOrderByArgumentFieldPropertyToken,\n    stardogOrderByArgumentDescPropertyToken,\n]);\n// Add shared category and catch-all tokens.\nvar finalTokens = [FragmentName, EnumValueToken, Name, StringValueToken];\ngraphQlTokens.push.apply(graphQlTokens, finalTokens);\nstardogGraphQlTokens.push.apply(stardogGraphQlTokens, finalTokens);\nexport { graphQlTokenMap, graphQlTokens, stardogGraphQlTokenMap, stardogGraphQlTokens, };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar graphQlTokenMap = require('./tokens').graphQlTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\nvar BaseGraphQlParser = /** @class */ (function (_super) {\n    __extends(BaseGraphQlParser, _super);\n    function BaseGraphQlParser(options, tokenVocab) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, tokenVocab, __assign({ recoveryEnabled: true, outputCst: true }, options.config)) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = entryRule.call(_this);\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.Document = _this.RULE('Document', function () {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Definition); });\n        });\n        _this.Definition = _this.RULE('Definition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemExtension); } },\n            ]);\n        });\n        _this.ExecutableDefinition = _this.RULE('ExecutableDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OperationDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentDefinition); } },\n            ]);\n        });\n        _this.OperationDefinition = _this.RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.OperationType = _this.RULE('OperationType', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Query); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Mutation); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Subscription); } },\n            ]);\n        });\n        _this.SelectionSet = _this.RULE('SelectionSet', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Selection); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.Selection = _this.RULE('Selection', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Field); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineFragment); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentSpread); } },\n            ]);\n        });\n        _this.Field = _this.RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, { ARGS: [false /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Alias = _this.RULE('Alias', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n        });\n        _this.Arguments = _this.RULE('Arguments', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.Argument = _this.RULE('Argument', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.FragmentSpread = _this.RULE('FragmentSpread', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n        });\n        _this.InlineFragment = _this.RULE('InlineFragment', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.OPTION(function () { return _this.SUBRULE(_this.TypeCondition); });\n            _this.OPTION1(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.FragmentDefinition = _this.RULE('FragmentDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Fragment);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.SUBRULE(_this.TypeCondition);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.TypeCondition = _this.RULE('TypeCondition', function () {\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Value = _this.RULE('Value', function (isConst) {\n            _this.OR([\n                { GATE: function () { return !isConst; }, ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.IntValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.FloatValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.NullValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListValue, { ARGS: [isConst] }); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectValue, { ARGS: [isConst] }); } },\n            ]);\n        });\n        _this.IntValue = _this.RULE('IntValue', function () {\n            _this.CONSUME(graphQlTokenMap.IntValueToken);\n        });\n        _this.FloatValue = _this.RULE('FloatValue', function () {\n            _this.CONSUME(graphQlTokenMap.FloatValueToken);\n        });\n        _this.StringValue = _this.RULE('StringValue', function () {\n            _this.CONSUME(graphQlTokenMap.StringValueToken);\n        });\n        _this.BooleanValue = _this.RULE('BooleanValue', function () {\n            _this.CONSUME(graphQlTokenMap.BooleanValueToken);\n        });\n        _this.NullValue = _this.RULE('NullValue', function () {\n            _this.CONSUME(graphQlTokenMap.NullValueToken);\n        });\n        _this.EnumValue = _this.RULE('EnumValue', function () {\n            _this.CONSUME(graphQlTokenMap.EnumValueToken);\n        });\n        _this.ListValue = _this.RULE('ListValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.MANY(function () { return _this.SUBRULE(_this.Value, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.ObjectValue = _this.RULE('ObjectValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.ObjectField, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.ObjectField = _this.RULE('ObjectField', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.VariableDefinitions = _this.RULE('VariableDefinitions', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.VariableDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.VariableDefinition = _this.RULE('VariableDefinition', function () {\n            _this.SUBRULE(_this.Variable);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION(function () { return _this.SUBRULE(_this.DefaultValue); });\n        });\n        _this.Variable = _this.RULE('Variable', function () {\n            _this.CONSUME(graphQlTokenMap.Dollar);\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.DefaultValue = _this.RULE('DefaultValue', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.SUBRULE(_this.Value, { ARGS: [true /* isConst */] });\n        });\n        _this.Type = _this.RULE('Type', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NamedType); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListType); } },\n            ]);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Bang); });\n        });\n        _this.NamedType = _this.RULE('NamedType', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.ListType = _this.RULE('ListType', function () {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.SUBRULE(_this.Type);\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.Directives = _this.RULE('Directives', function (isConst) {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); });\n        });\n        _this.Directive = _this.RULE('Directive', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Arguments, { ARGS: [isConst] }); });\n        });\n        _this.TypeSystemDefinition = _this.RULE('TypeSystemDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.DirectiveDefinition); } },\n            ]);\n        });\n        _this.TypeSystemExtension = _this.RULE('TypeSystemExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeExtension); } },\n            ]);\n        });\n        _this.SchemaDefinition = _this.RULE('SchemaDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OPTION(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.SchemaExtension = _this.RULE('SchemaExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.OperationTypeDefinitionList); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.OperationTypeDefinitionList); } },\n            ]);\n        });\n        _this.OperationTypeDefinitionList = _this.RULE('OperationTypeDefinitionList', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.OperationTypeDefinition = _this.RULE('OperationTypeDefinition', function () {\n            _this.SUBRULE(_this.OperationType);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Description = _this.RULE('Description', function () {\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.TypeDefinition = _this.RULE('TypeDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeDefinition); } },\n            ]);\n        });\n        _this.TypeExtension = _this.RULE('TypeExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeExtension); } },\n            ]);\n        });\n        _this.ScalarTypeDefinition = _this.RULE('ScalarTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ScalarTypeExtension = _this.RULE('ScalarTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n        });\n        _this.ObjectTypeDefinition = _this.RULE('ObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ImplementsInterfaces); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.ObjectTypeExtension = _this.RULE('ObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ImplementsInterfaces);\n                        _this.OPTION(function () {\n                            return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n                        });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION2(function () { return _this.SUBRULE1(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE2(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.ImplementsInterfaces = _this.RULE('ImplementsInterfaces', function () {\n            _this.CONSUME(graphQlTokenMap.Implements);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Amp); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Amp);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.FieldsDefinition = _this.RULE('FieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.FieldDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.FieldDefinition = _this.RULE('FieldDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ArgumentsDefinition = _this.RULE('ArgumentsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.InputValueDefinition = _this.RULE('InputValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.DefaultValue); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.InterfaceTypeDefinition = _this.RULE('InterfaceTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.InterfaceTypeExtension = _this.RULE('InterfaceTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.UnionTypeDefinition = _this.RULE('UnionTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n        });\n        _this.UnionMemberTypes = _this.RULE('UnionMemberTypes', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.UnionTypeExtension = _this.RULE('UnionTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.UnionMemberTypes); } },\n            ]);\n        });\n        _this.EnumTypeDefinition = _this.RULE('EnumTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n        });\n        _this.EnumValuesDefinition = _this.RULE('EnumValuesDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.EnumValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.EnumValueDefinition = _this.RULE('EnumValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.SUBRULE(_this.EnumValue);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.EnumTypeExtension = _this.RULE('EnumTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.EnumValuesDefinition); } },\n            ]);\n        });\n        _this.InputObjectTypeDefinition = _this.RULE('InputObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.InputFieldsDefinition); });\n        });\n        _this.InputFieldsDefinition = _this.RULE('InputFieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.InputObjectTypeExtension = _this.RULE('InputObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.InputFieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.InputFieldsDefinition); } },\n            ]);\n        });\n        _this.DirectiveDefinition = _this.RULE('DirectiveDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.DirectiveToken);\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.DirectiveLocations);\n        });\n        _this.DirectiveLocations = _this.RULE('DirectiveLocations', function () {\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.DirectiveLocation);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.DirectiveLocation);\n            });\n        });\n        _this.DirectiveLocation = _this.RULE('DirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDirectiveLocation); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDirectiveLocation); } },\n            ]);\n        });\n        _this.ExecutableDirectiveLocation = _this.RULE('ExecutableDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.QUERY); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.MUTATION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SUBSCRIPTION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_SPREAD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INLINE_FRAGMENT); } },\n            ]);\n        });\n        _this.TypeSystemDirectiveLocation = _this.RULE('TypeSystemDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCHEMA); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCALAR); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ARGUMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INTERFACE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.UNION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM_VALUE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_FIELD_DEFINITION); } },\n            ]);\n        });\n        _this.lexer = new Lexer(tokenVocab);\n        return _this;\n    }\n    return BaseGraphQlParser;\n}(Parser));\nexport { BaseGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar graphQlTokens = require('./tokens').graphQlTokens;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nvar StandardGraphQlParser = /** @class */ (function (_super) {\n    __extends(StandardGraphQlParser, _super);\n    function StandardGraphQlParser(options) {\n        var _this = _super.call(this, options, graphQlTokens) || this;\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StandardGraphQlParser;\n}(BaseGraphQlParser));\nexport { StandardGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { StardogSparqlParser } from '../sparql/StardogSparqlParser';\n// Returns a custom visitor that extends the BaseVisitor for the\n// StardogGraphQlParser. When the visitor encounters any custom Stardog\n// directive that can contain a SPARQL expression, it locates the expression\n// and ensures that it parses as valid SPARQL (by delegating to the\n// StardogSparqlParser).\nexport var getStardogGraphQlVisitor = function (BaseVisitor) {\n    var StardogGraphQlVisitor = /** @class */ (function (_super) {\n        __extends(StardogGraphQlVisitor, _super);\n        function StardogGraphQlVisitor() {\n            var _this = _super.call(this) || this;\n            _this.sparqlErrors = [];\n            _this.visit = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                _super.prototype.visit.apply(_this, args);\n                return {\n                    errors: _this.sparqlErrors.map(function (error) { return (__assign({}, error, { name: \"SPARQL Error: \" + error.name })); }),\n                };\n            };\n            _this.BindDirective = function (ctx) {\n                var _a;\n                if (!ctx.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = ctx.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with thoe returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            _this.ConditionalStardogDirective = function (ctx) {\n                var _a;\n                var conditionalStardogDirectiveArgumentsNode = ctx.ConditionalStardogDirectiveArguments[0];\n                if (!conditionalStardogDirectiveArgumentsNode.children.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = conditionalStardogDirectiveArgumentsNode\n                    .children.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with those returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            // Make the SPARQL errors have proper locations for use in error\n            // diagnostics. NOTE: This does NOT modify the locations of the error's\n            // `previousToken` property. If that ends up being needed, it's a TODO.\n            _this.$mapErrors = function (errors, tokenForOffset, offsetPadding) {\n                if (offsetPadding === void 0) { offsetPadding = 0; }\n                var tokenStartOffset = tokenForOffset.startOffset, tokenEndOffset = tokenForOffset.endOffset, tokenStartColumn = tokenForOffset.startColumn, tokenEndColumn = tokenForOffset.endColumn;\n                return errors.map(function (error) {\n                    var token = error.token;\n                    var errorStartOffset = token.startOffset, errorEndOffset = token.endOffset, errorStartColumn = token.startColumn, errorEndColumn = token.endColumn;\n                    return __assign({}, error, { token: __assign({}, token, { \n                            // error token's offsets might be set explicitly to null\n                            startOffset: tokenStartOffset + (errorStartOffset || 0) + offsetPadding, endOffset: tokenEndOffset + (errorEndOffset || 0) + offsetPadding, startColumn: tokenStartColumn + (errorStartColumn || 0) + offsetPadding, endColumn: tokenEndColumn + (errorEndColumn || 0) + offsetPadding, startLine: tokenForOffset.startLine, endLine: tokenForOffset.endLine }) });\n                });\n            };\n            _this.$parseSparqlExpression = function (stringValueToken) {\n                var innerExpressionImage = stringValueToken.image.slice(1, -1); // remove quotes\n                return _this.stardogSparqlParser.parse(innerExpressionImage, _this.stardogSparqlParser.Expression);\n            };\n            _this.$resetState = function () {\n                _this.sparqlErrors = [];\n            };\n            _this.stardogSparqlParser = new StardogSparqlParser();\n            _this.validateVisitor();\n            return _this;\n        }\n        return StardogGraphQlVisitor;\n    }(BaseVisitor));\n    return new StardogGraphQlVisitor();\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), stardogGraphQlTokens = _a.stardogGraphQlTokens, stardogGraphQlTokenMap = _a.stardogGraphQlTokenMap;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nimport { getStardogGraphQlVisitor } from 'graphql/StardogGraphQlVisitor';\nvar StardogGraphQlParser = /** @class */ (function (_super) {\n    __extends(StardogGraphQlParser, _super);\n    function StardogGraphQlParser(options) {\n        var _this = _super.call(this, options, stardogGraphQlTokens) || this;\n        _this.visitCst = function (cst) {\n            // To save resources while parsing, the visitor is a singleton.\n            if (!_this.stardogGraphQlVisitor) {\n                var BaseStardogGraphQlVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.stardogGraphQlVisitor = getStardogGraphQlVisitor(BaseStardogGraphQlVisitor);\n            }\n            else {\n                _this.stardogGraphQlVisitor.$resetState();\n            }\n            return _this.stardogGraphQlVisitor.visit(cst, _this.input);\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.tokenize(document);\n            var cst = entryRule.call(_this);\n            var sparqlErrors = _this.visitCst(cst).errors;\n            var graphQlErrors = _this.errors;\n            return {\n                errors: graphQlErrors.concat(sparqlErrors),\n                cst: cst,\n            };\n        };\n        _this.OperationDefinition = _this.OVERRIDE_RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () {\n                            return _this.SUBRULE(_this.Directives, {\n                                ARGS: [false /* isConst */, true /* isTopLevel */],\n                            });\n                        });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.Directives = _this.OVERRIDE_RULE('Directives', function (isConst, isTopLevel) {\n            if (isTopLevel === void 0) { isTopLevel = false; }\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            return _this.SUBRULE(_this.StardogDirective, { ARGS: [isTopLevel] });\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); } },\n                ]);\n            });\n        });\n        _this.Field = _this.OVERRIDE_RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, {\n                    ARGS: [false /* isConst */, true /* isField */],\n                });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Arguments = _this.OVERRIDE_RULE('Arguments', function (isConst, isField) {\n            if (isField === void 0) { isField = false; }\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        GATE: function () { return isField; },\n                        ALT: function () { return _this.SUBRULE(_this.StardogArgument); },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); } },\n                ]);\n            });\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.StardogArgument = _this.RULE('StardogArgument', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.SkipArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.OffsetArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.FirstArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.LimitArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.IriArgument); } },\n            ]);\n        });\n        _this.StardogDirective = _this.RULE('StardogDirective', function (isTopLevel) {\n            _this.CONSUME(stardogGraphQlTokenMap.At);\n            _this.OR([\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.ConditionalStardogDirective); },\n                },\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.BareStardogDirective); },\n                },\n                { GATE: function () { return !isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.BindDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.PrefixDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.ConfigDirective); } },\n            ]);\n        });\n        _this.ConditionalStardogDirective = _this.RULE('ConditionalStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SkipDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.IncludeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.FilterDirective); } },\n            ]);\n            _this.SUBRULE(_this.ConditionalStardogDirectiveArguments);\n        });\n        _this.SkipDirective = _this.RULE('SkipDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n        });\n        _this.IncludeDirective = _this.RULE('IncludeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IncludeDirectiveToken);\n        });\n        _this.FilterDirective = _this.RULE('FilterDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FilterDirectiveToken);\n        });\n        _this.ConditionalStardogDirectiveArguments = _this.RULE('ConditionalStardogDirectiveArguments', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.IfArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.BareStardogDirective = _this.RULE('BareStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OptionalDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.HideDirective); } },\n            ]);\n        });\n        _this.OptionalDirective = _this.RULE('OptionalDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OptionalDirectiveToken);\n        });\n        _this.TypeDirective = _this.RULE('TypeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n        });\n        _this.HideDirective = _this.RULE('HideDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.HideDirectiveToken);\n        });\n        _this.BindDirective = _this.RULE('BindDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.BindDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.ToArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.StringValue);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.PrefixDirective = _this.RULE('PrefixDirective', function (isConst) {\n            _this.CONSUME(stardogGraphQlTokenMap.PrefixDirectiveToken);\n            _this.SUBRULE(_this.Arguments, { ARGS: [isConst] });\n        });\n        _this.ConfigDirective = _this.RULE('ConfigDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.ConfigDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveAlias); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveGraph); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveType); },\n                },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.ConfigDirectiveAlias = _this.RULE('ConfigDirectiveAlias', function () {\n            _this.SUBRULE(_this.AliasArgument);\n            _this.OPTION(function () {\n                _this.OR1([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE(_this.GraphArgument);\n                            _this.OPTION1(function () { return _this.SUBRULE(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.TypeArgument);\n                            _this.OPTION2(function () { return _this.SUBRULE1(_this.GraphArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveGraph = _this.RULE('ConfigDirectiveGraph', function () {\n            _this.SUBRULE2(_this.GraphArgument);\n            _this.OPTION3(function () {\n                _this.OR2([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.AliasArgument);\n                            _this.OPTION4(function () { return _this.SUBRULE2(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.TypeArgument);\n                            _this.OPTION5(function () { return _this.SUBRULE2(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveType = _this.RULE('ConfigDirectiveType', function () {\n            _this.SUBRULE4(_this.TypeArgument);\n            _this.OPTION6(function () {\n                _this.OR3([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.AliasArgument);\n                            _this.OPTION7(function () { return _this.SUBRULE3(_this.GraphArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE4(_this.GraphArgument);\n                            _this.OPTION8(function () { return _this.SUBRULE4(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.AliasArgument = _this.RULE('AliasArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.AliasArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.AliasArgumentField); });\n            _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n        });\n        _this.AliasArgumentField = _this.RULE('AliasArgumentField', function () {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.GraphArgument = _this.RULE('GraphArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.GraphArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.MANY(function () { return _this.SUBRULE1(_this.EnumValue); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.TypeArgument = _this.RULE('TypeArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.OrderByArgument = _this.RULE('OrderByArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgumentField); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.AT_LEAST_ONE(function () { return _this.SUBRULE1(_this.OrderByArgumentField); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentField = _this.RULE('OrderByArgumentField', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n                        _this.OR1([\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE(_this.OrderByArgumentFieldProperty);\n                                    _this.OPTION(function () {\n                                        return _this.SUBRULE(_this.OrderByArgumentDescProperty);\n                                    });\n                                },\n                            },\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE1(_this.OrderByArgumentDescProperty);\n                                    _this.SUBRULE1(_this.OrderByArgumentFieldProperty);\n                                },\n                            },\n                        ]);\n                        _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentFieldProperty = _this.RULE('OrderByArgumentFieldProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentFieldPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n        });\n        _this.OrderByArgumentDescProperty = _this.RULE('OrderByArgumentDescProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentDescPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.SkipArgument = _this.RULE('SkipArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.OffsetArgument = _this.RULE('OffsetArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OffsetArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.FirstArgument = _this.RULE('FirstArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FirstArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.LimitArgument = _this.RULE('LimitArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LimitArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.IriArgument = _this.RULE('IriArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IriArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.EnumValue);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogGraphQlParser;\n}(BaseGraphQlParser));\nexport { StardogGraphQlParser };\n","export * from './BaseGraphQlParser';\nexport * from './StandardGraphQlParser';\nexport * from './StardogGraphQlParser';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nexport var graphqlTokens = require('./tokens');\n"],"sourceRoot":""}