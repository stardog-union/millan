{"version":3,"sources":["webpack://millan.[name]/webpack/universalModuleDefinition","webpack://millan.[name]/webpack/bootstrap","webpack://millan.[name]/./src/graphql/tokens.ts","webpack://millan.[name]/./src/sparql/StardogSparqlParser.ts","webpack://millan.[name]/./src/graphql/BaseGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StandardGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlVisitor.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlParser.ts","webpack://millan.[name]/./src/graphql/index.ts"],"names":["root","factory","exports","module","define","amd","self","this","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","__webpack_exports__","graphQlTokenMap","graphQlTokens","stardogGraphQlTokenMap","stardogGraphQlTokens","chevrotain__WEBPACK_IMPORTED_MODULE_0__","helpers_regex__WEBPACK_IMPORTED_MODULE_1__","helpers_matchers__WEBPACK_IMPORTED_MODULE_2__","__assign","assign","arguments","INTEGER_PART_PATTERN","EXPONENT_PART_PATTERN","STRING_CHARACTER_PATTERN","and","many","or","BOOLEAN_PATTERN","NULL_PATTERN","ON_PATTERN","createAndPushTokenWithNameAlt","config","categories","Name","pattern","EnumValueToken","FragmentName","createAndPushToken","longer_alt","token","NA","StringValueToken","CATEGORIES","ignoredTokens","WhiteSpace","group","SKIPPED","UnicodeBOM","LineTerminator","Comment","Comma","punctuators","Bang","Dollar","LParen","RParen","Spread","Colon","Equals","At","LBracket","RBracket","LCurly","RCurly","Pipe","Amp","nonKeywordTerminals","FloatValueToken","option","IntValueToken","BlockStringToken","StringToken","BooleanValueToken","NullValueToken","keywords","Query","Mutation","Subscription","Fragment","On","Schema","Extend","Scalar","TypeToken","Implements","Interface","Union","Enum","Input","DirectiveToken","QUERY","MUTATION","SUBSCRIPTION","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","FIELD","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","ENUM","INPUT_OBJECT","INPUT_FIELD_DEFINITION","stardogDirectives","sort","reduce","accumulator","_a","toUpperCase","tokenMap","orderedTokens","concat","stardogArguments","stardogOrderByArgumentFieldPropertyToken","stardogOrderByArgumentDescPropertyToken","OrderByArgumentFieldPropertyToken","OrderByArgumentDescPropertyToken","finalTokens","StardogSparqlParser","extendStatics","_BaseSparqlParser__WEBPACK_IMPORTED_MODULE_0__","chevrotain__WEBPACK_IMPORTED_MODULE_1__","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","sparqlTokenMap","stardogSparqlTokens","_super","options","_this","OVERRIDE_RULE","OR","ALT","SUBRULE","SelectQuery","ConstructQuery","DescribeQuery","AskQuery","PathQuery","ValuesClause","RULE","PathSpec","MANY","DatasetClause","CONSUME","START","PathTerminal","END","SUBRULE1","Via","OPTION","MaxLength","SolutionModifier","VIA","GroupGraphPattern","Var","Path","iri","PATHS","PATHS_SHORTEST","PATHS_ALL","OPTION1","CYCLIC","GraphPatternNotTriples","GroupOrUnionGraphPattern","OptionalGraphPattern","MinusGraphPattern","GraphGraphPattern","ServiceGraphPattern","Filter","Bind","Unnest","InlineData","UNNEST","Expression","AS","BuiltInCall","Aggregate","BuiltInCall_STR","BuiltInCall_LANG","BuiltInCall_LANGMATCHES","BuiltInCall_DATATYPE","BuiltInCall_BOUND","BuiltInCall_IRI","BuiltInCall_URI","BuiltInCall_BNODE","BuiltInCall_RAND","BuiltInCall_ABS","BuiltInCall_CEIL","BuiltInCall_FLOOR","BuiltInCall_ROUND","BuiltInCall_CONCAT","SubstringExpression","BuiltInCall_STRLEN","StrReplaceExpression","BuiltInCall_UCASE","BuiltInCall_LCASE","BuiltInCall_ENCODE_FOR_URI","BuiltInCall_CONTAINS","BuiltInCall_STRSTARTS","BuiltInCall_STRENDS","BuiltInCall_STRBEFORE","BuiltInCall_STRAFTER","BuiltInCall_YEAR","BuiltInCall_MONTH","BuiltInCall_DAY","BuiltInCall_HOURS","BuiltInCall_MINUTES","BuiltInCall_SECONDS","BuiltInCall_TIMEZONE","BuiltInCall_TZ","BuiltInCall_NOW","BuiltInCall_UUID","BuiltInCall_STRUUID","BuiltInCall_MD5","BuiltInCall_SHA1","BuiltInCall_SHA256","BuiltInCall_SHA384","BuiltInCall_SHA512","BuiltInCall_COALESCE","BuiltInCall_IF","BuiltInCall_STRLANG","BuiltInCall_STRDT","BuiltInCall_sameTerm","BuiltInCall_isIRI","BuiltInCall_isURI","BuiltInCall_isBlank","BuiltInCall_isLiteral","BuiltInCall_isNumeric","RegexExpression","ExistsFunction","NotExistsFunction","StardogOrCustomFunction","Unknown","ExpressionList","ConstructTemplate","Quads","performSelfAnalysis","BaseGraphQlParser_BaseGraphQlParser","BaseGraphQlParser","tokenVocab","recoveryEnabled","outputCst","tokenize","document","lexer","tokens","parse","entryRule","Document","input","cst","errors","AT_LEAST_ONE","Definition","ExecutableDefinition","TypeSystemDefinition","TypeSystemExtension","OperationDefinition","FragmentDefinition","SelectionSet","OperationType","VariableDefinitions","OPTION2","Directives","Selection","Field","InlineFragment","FragmentSpread","Alias","Arguments","ARGS","OPTION3","isConst","Argument","Value","TypeCondition","NamedType","GATE","Variable","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","VariableDefinition","Type","DefaultValue","ListType","Directive","SchemaDefinition","TypeDefinition","DirectiveDefinition","SchemaExtension","TypeExtension","OperationTypeDefinition","OperationTypeDefinitionList","Description","ScalarTypeDefinition","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","InputObjectTypeDefinition","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","ImplementsInterfaces","FieldsDefinition","SUBRULE2","CONSUME1","FieldDefinition","ArgumentsDefinition","InputValueDefinition","UnionMemberTypes","EnumValuesDefinition","EnumValueDefinition","InputFieldsDefinition","DirectiveLocations","DirectiveLocation","ExecutableDirectiveLocation","TypeSystemDirectiveLocation","api","StandardGraphQlParser_extends","StandardGraphQlParser_StandardGraphQlParser","StandardGraphQlParser","StardogGraphQlVisitor_extends","StardogGraphQlVisitor_assign","getStardogGraphQlVisitor","BaseVisitor","StardogGraphQlVisitor","sparqlErrors","visit","args","_i","map","error","BindDirective","ctx","stringValueToken","children","$parseSparqlExpression","$mapErrors","ConditionalStardogDirective","conditionalStardogDirectiveArgumentsNode","ConditionalStardogDirectiveArguments","tokenForOffset","offsetPadding","tokenStartOffset","startOffset","tokenEndOffset","endOffset","tokenStartColumn","startColumn","tokenEndColumn","endColumn","errorStartOffset","errorEndOffset","errorStartColumn","errorEndColumn","startLine","endLine","innerExpressionImage","image","stardogSparqlParser","$resetState","validateVisitor","StardogGraphQlParser_extends","StardogGraphQlParser_StardogGraphQlParser","StardogGraphQlParser","visitCst","stardogGraphQlVisitor","BaseStardogGraphQlVisitor","getBaseCstVisitorConstructorWithDefaults","isTopLevel","StardogDirective","isField","StardogArgument","OrderByArgument","SkipArgument","OffsetArgument","FirstArgument","LimitArgument","IriArgument","BareStardogDirective","PrefixDirective","ConfigDirective","SkipDirective","IncludeDirective","FilterDirective","SkipDirectiveToken","IncludeDirectiveToken","FilterDirectiveToken","IfArgumentToken","OptionalDirective","TypeDirective","HideDirective","OptionalDirectiveToken","HideDirectiveToken","BindDirectiveToken","ToArgumentToken","PrefixDirectiveToken","ConfigDirectiveToken","ConfigDirectiveAlias","ConfigDirectiveGraph","ConfigDirectiveType","AliasArgument","OR1","GraphArgument","TypeArgument","OR2","OPTION4","SUBRULE3","OPTION5","SUBRULE4","OPTION6","OR3","OPTION7","OPTION8","AliasArgumentToken","AliasArgumentField","GraphArgumentToken","OrderByArgumentToken","OrderByArgumentField","OrderByArgumentFieldProperty","OrderByArgumentDescProperty","OffsetArgumentToken","FirstArgumentToken","LimitArgumentToken","IriArgumentToken"],"mappings":"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","file":"millan.graphql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"graphql\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"graphql\"] = factory();\n\telse\n\t\troot[\"millan\"] = root[\"millan\"] || {}, root[\"millan\"][\"graphql\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([64,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createToken, Lexer } from 'chevrotain';\nimport { regex } from 'helpers/regex';\nimport { STRING_LITERAL_LONG2 } from 'helpers/matchers';\n// Patterns:\nvar NAME_PATTERN = /[_A-Za-z][_0-9A-Za-z]*/;\nvar INTEGER_PART_PATTERN = /\\-?(?:0|[1-9][0-9]*)/;\nvar EXPONENT_PART_PATTERN = /[eE][+-]?[0-9]+/;\nvar ESCAPED_CHARACTER_PATTERN = /\\\\[\"\\\\/bfnrt]/;\nvar ESCAPED_UNICODE_PATTERN = /\\\\u[0-9A-Fa-f]{4}/;\nvar STRING_SOURCE_CHARACTER_PATTERN = /[\\u0009\\u0020\\u0021\\u0023-\\u005B\\u005D-\\uFFFF]/; // source character, but no '\"' or '\\' or line terminators\nvar STRING_CHARACTER_PATTERN = regex.and(/\"/, regex.many(regex.or(STRING_SOURCE_CHARACTER_PATTERN, ESCAPED_UNICODE_PATTERN, ESCAPED_CHARACTER_PATTERN)), /\"/);\nvar BOOLEAN_PATTERN = /true|false/;\nvar NULL_PATTERN = /null/;\nvar ON_PATTERN = /on/;\n// Holder of tokens; tokens are generally added and created in order, below.\nvar graphQlTokens = [];\n// Utility used primarily for keywords, which should also be counted as\n// matching the `Name` token and (except for special cases) the\n// `EnumValueToken` and `FragmentName` tokens. Ensures the created token has\n// those other tokens as categories, and ensures that `Name` will be matched\n// correctly for tokens that start with keyword characters but have additional\n// characters. Adds the created token to the `graphQlTokens` array.\nvar createAndPushTokenWithNameAlt = function (config) {\n    var categories = [Name];\n    if (config.pattern !== BOOLEAN_PATTERN && config.pattern !== NULL_PATTERN) {\n        categories.push(EnumValueToken);\n    }\n    if (config.pattern !== ON_PATTERN) {\n        categories.push(FragmentName);\n    }\n    return createAndPushToken({\n        name: config.name,\n        pattern: config.pattern,\n        longer_alt: Name,\n        categories: categories,\n    });\n};\n// Simple wrapper for `createToken` that also pushes the created token into\n// `graphQlTokens` at the time of creation, since order matters.\nvar createAndPushToken = function (config) {\n    var token = createToken(config);\n    graphQlTokens.push(token);\n    return token;\n};\n// Category tokens need to be created first, so they can be referenced by other\n// tokens. They are _not_ yet added to the `graphQlTokens` array so that they\n// do not match before various more specific keywords.\nvar Name = createToken({ name: 'Name', pattern: NAME_PATTERN });\n// `EnumValueToken` and `FragmentName` are purely abstract categories that will\n// be matched for all `Name` tokens _except_ the special tokens specified in\n// the GraphQL grammar. See `createAndPushTokenWithNameAlt` for details.\nvar EnumValueToken = createToken({\n    name: 'EnumValueToken',\n    pattern: Lexer.NA,\n});\nvar FragmentName = createToken({\n    name: 'FragmentName',\n    pattern: Lexer.NA,\n});\n// `StringValueToken` will make either BlockStrings or Strings.\nvar StringValueToken = createToken({\n    name: 'StringValueToken',\n    pattern: Lexer.NA,\n});\n// Generally, anything that matches `Name` should match `EnumValueToken` and\n// `FragmentName`. NOTE, however that `On` will not match `FragmentName` and\n// `BooleanValueToken` and `NullValueToken` will not match `EnumValueToken`, in\n// accordance with the official grammar; this is handled by the fact that the\n// `On`, `BooleanValueToken`, and `FragmentName` tokens are defined and pushed\n// into the tokens array earlier than `Name`. Given\n// `createAndPushTokenWithNameAlt`, the latter tokens will also be treated as\n// `Name` tokens, but will NOT be treated as instances of the relevant\n// `EnumValueToken` or `FragmentName`. That's exactly what we want.\nName.CATEGORIES.push(EnumValueToken, FragmentName);\nvar ignoredTokens = {\n    WhiteSpace: createAndPushToken({\n        name: 'WhiteSpace',\n        pattern: /[ \\t]+/,\n        group: Lexer.SKIPPED,\n    }),\n    UnicodeBOM: createAndPushToken({\n        name: 'UnicodeBOM',\n        pattern: '\\\\uFFFE',\n        group: Lexer.SKIPPED,\n    }),\n    LineTerminator: createAndPushToken({\n        name: 'LineTerminator',\n        pattern: /\\n\\r|\\r|\\n/,\n        group: Lexer.SKIPPED,\n    }),\n    Comment: createAndPushToken({\n        name: 'Comment',\n        pattern: /#[^\\n\\r]*/,\n        group: Lexer.SKIPPED,\n    }),\n    Comma: createAndPushToken({\n        name: 'Comma',\n        pattern: ',',\n        group: Lexer.SKIPPED,\n    }),\n};\nvar punctuators = {\n    Bang: createAndPushToken({ name: 'Bang', pattern: '!' }),\n    Dollar: createAndPushToken({ name: 'Dollar', pattern: '$' }),\n    LParen: createAndPushToken({ name: 'LParen', pattern: '(' }),\n    RParen: createAndPushToken({ name: 'RParen', pattern: ')' }),\n    Spread: createAndPushToken({ name: 'Spread', pattern: '...' }),\n    Colon: createAndPushToken({ name: 'Colon', pattern: ':' }),\n    Equals: createAndPushToken({ name: 'Equals', pattern: '=' }),\n    At: createAndPushToken({ name: 'At', pattern: '@' }),\n    LBracket: createAndPushToken({ name: 'LBracket', pattern: '[' }),\n    RBracket: createAndPushToken({ name: 'RBracket', pattern: ']' }),\n    LCurly: createAndPushToken({ name: 'LCurly', pattern: '{' }),\n    RCurly: createAndPushToken({ name: 'RCurly', pattern: '}' }),\n    Pipe: createAndPushToken({ name: 'Pipe', pattern: '|' }),\n    Amp: createAndPushToken({ name: 'Amp', pattern: '&' }),\n};\nvar nonKeywordTerminals = {\n    FloatValueToken: createAndPushToken({\n        name: 'FloatValueToken',\n        pattern: regex.and(INTEGER_PART_PATTERN, regex.or(regex.and(/\\.[0-9]+/, regex.option(EXPONENT_PART_PATTERN)), EXPONENT_PART_PATTERN)),\n    }),\n    IntValueToken: createAndPushToken({\n        name: 'IntValueToken',\n        pattern: INTEGER_PART_PATTERN,\n    }),\n    BlockStringToken: createAndPushToken({\n        name: 'BlockStringToken',\n        pattern: STRING_LITERAL_LONG2,\n        categories: [StringValueToken],\n    }),\n    StringToken: createAndPushToken({\n        name: 'StringToken',\n        pattern: STRING_CHARACTER_PATTERN,\n        categories: [StringValueToken],\n    }),\n    BooleanValueToken: createAndPushTokenWithNameAlt({\n        name: 'BooleanValueToken',\n        pattern: BOOLEAN_PATTERN,\n    }),\n    NullValueToken: createAndPushTokenWithNameAlt({\n        name: 'NullValueToken',\n        pattern: NULL_PATTERN,\n    }),\n    EnumValueToken: EnumValueToken,\n    FragmentName: FragmentName,\n    Name: Name,\n    StringValueToken: StringValueToken,\n};\nvar keywords = {\n    Query: createAndPushTokenWithNameAlt({\n        name: 'Query',\n        pattern: 'query',\n    }),\n    Mutation: createAndPushTokenWithNameAlt({\n        name: 'Mutation',\n        pattern: 'mutation',\n    }),\n    Subscription: createAndPushTokenWithNameAlt({\n        name: 'Subscription',\n        pattern: 'subscription',\n    }),\n    Fragment: createAndPushTokenWithNameAlt({\n        name: 'Fragment',\n        pattern: 'fragment',\n    }),\n    On: createAndPushTokenWithNameAlt({\n        name: 'On',\n        pattern: ON_PATTERN,\n    }),\n    Schema: createAndPushTokenWithNameAlt({\n        name: 'Schema',\n        pattern: 'schema',\n    }),\n    Extend: createAndPushTokenWithNameAlt({\n        name: 'Extend',\n        pattern: 'extend',\n    }),\n    Scalar: createAndPushTokenWithNameAlt({\n        name: 'Scalar',\n        pattern: 'scalar',\n    }),\n    TypeToken: createAndPushTokenWithNameAlt({\n        name: 'TypeToken',\n        pattern: 'type',\n    }),\n    Implements: createAndPushTokenWithNameAlt({\n        name: 'Implements',\n        pattern: 'implements',\n    }),\n    Interface: createAndPushTokenWithNameAlt({\n        name: 'Interface',\n        pattern: 'interface',\n    }),\n    Union: createAndPushTokenWithNameAlt({\n        name: 'Union',\n        pattern: 'union',\n    }),\n    Enum: createAndPushTokenWithNameAlt({\n        name: 'Enum',\n        pattern: 'enum',\n    }),\n    Input: createAndPushTokenWithNameAlt({\n        name: 'Input',\n        pattern: 'input',\n    }),\n    DirectiveToken: createAndPushTokenWithNameAlt({\n        name: 'DirectiveToken',\n        pattern: 'directive',\n    }),\n    QUERY: createAndPushTokenWithNameAlt({ name: 'QUERY', pattern: 'QUERY' }),\n    MUTATION: createAndPushTokenWithNameAlt({\n        name: 'MUTATION',\n        pattern: 'MUTATION',\n    }),\n    SUBSCRIPTION: createAndPushTokenWithNameAlt({\n        name: 'SUBSCRIPTION',\n        pattern: 'SUBSCRIPTION',\n    }),\n    FRAGMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_DEFINITION',\n        pattern: 'FRAGMENT_DEFINITION',\n    }),\n    FRAGMENT_SPREAD: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_SPREAD',\n        pattern: 'FRAGMENT_SPREAD',\n    }),\n    INLINE_FRAGMENT: createAndPushTokenWithNameAlt({\n        name: 'INLINE_FRAGMENT',\n        pattern: 'INLINE_FRAGMENT',\n    }),\n    SCHEMA: createAndPushTokenWithNameAlt({ name: 'SCHEMA', pattern: 'SCHEMA' }),\n    SCALAR: createAndPushTokenWithNameAlt({ name: 'SCALAR', pattern: 'SCALAR' }),\n    OBJECT: createAndPushTokenWithNameAlt({ name: 'OBJECT', pattern: 'OBJECT' }),\n    FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FIELD_DEFINITION',\n        pattern: 'FIELD_DEFINITION',\n    }),\n    FIELD: createAndPushTokenWithNameAlt({ name: 'FIELD', pattern: 'FIELD' }),\n    ARGUMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'ARGUMENT_DEFINITION',\n        pattern: 'ARGUMENT_DEFINITION',\n    }),\n    INTERFACE: createAndPushTokenWithNameAlt({\n        name: 'INTERFACE',\n        pattern: 'INTERFACE',\n    }),\n    UNION: createAndPushTokenWithNameAlt({ name: 'UNION', pattern: 'UNION' }),\n    ENUM_VALUE: createAndPushTokenWithNameAlt({\n        name: 'ENUM_VALUE',\n        pattern: 'ENUM_VALUE',\n    }),\n    ENUM: createAndPushTokenWithNameAlt({ name: 'ENUM', pattern: 'ENUM' }),\n    INPUT_OBJECT: createAndPushTokenWithNameAlt({\n        name: 'INPUT_OBJECT',\n        pattern: 'INPUT_OBJECT',\n    }),\n    INPUT_FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'INPUT_FIELD_DEFINITION',\n        pattern: 'INPUT_FIELD_DEFINITION',\n    }),\n};\nvar graphQlTokenMap = __assign({}, ignoredTokens, punctuators, nonKeywordTerminals, keywords, { Name: Name });\nvar stardogDirectives = [\n    'optional',\n    'bind',\n    'hide',\n    'skip',\n    'include',\n    'filter',\n    'prefix',\n    'config',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"DirectiveToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\nvar stardogArguments = [\n    'orderBy',\n    'first',\n    'to',\n    'if',\n    'alias',\n    'graph',\n    'offset',\n    'limit',\n    'iri',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"ArgumentToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\n// These two tokens aren't really arguments or directives; instead, they're\n// fields of objects that can be passed as the stardog `orderBy` argument.\nvar stardogOrderByArgumentFieldPropertyToken = createToken({\n    name: 'OrderByArgumentFieldPropertyToken',\n    pattern: 'field',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogOrderByArgumentDescPropertyToken = createToken({\n    name: 'OrderByArgumentDescPropertyToken',\n    pattern: 'desc',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogGraphQlTokenMap = __assign({}, graphQlTokenMap, stardogDirectives.tokenMap, stardogArguments.tokenMap, { OrderByArgumentFieldPropertyToken: stardogOrderByArgumentFieldPropertyToken, OrderByArgumentDescPropertyToken: stardogOrderByArgumentDescPropertyToken });\nvar stardogGraphQlTokens = graphQlTokens.concat(stardogDirectives.orderedTokens, stardogArguments.orderedTokens, [\n    stardogOrderByArgumentFieldPropertyToken,\n    stardogOrderByArgumentDescPropertyToken,\n]);\n// Add shared category and catch-all tokens.\nvar finalTokens = [FragmentName, EnumValueToken, Name, StringValueToken];\ngraphQlTokens.push.apply(graphQlTokens, finalTokens);\nstardogGraphQlTokens.push.apply(stardogGraphQlTokens, finalTokens);\nexport { graphQlTokenMap, graphQlTokens, stardogGraphQlTokenMap, stardogGraphQlTokens, };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), sparqlTokenMap = _a.sparqlTokenMap, stardogSparqlTokens = _a.stardogSparqlTokens;\nimport { BaseSparqlParser } from './BaseSparqlParser';\nimport { Parser } from 'chevrotain';\nvar StardogSparqlParser = /** @class */ (function (_super) {\n    __extends(StardogSparqlParser, _super);\n    function StardogSparqlParser(options) {\n        var _this = _super.call(this, options, stardogSparqlTokens) || this;\n        _this.Query = _this.OVERRIDE_RULE('Query', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.ConstructQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.DescribeQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.AskQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.PathQuery); } },\n            ]);\n            _this.SUBRULE(_this.ValuesClause);\n        });\n        _this.PathQuery = _this.RULE('PathQuery', function () {\n            _this.SUBRULE(_this.PathSpec);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.CONSUME(sparqlTokenMap.START);\n            _this.SUBRULE(_this.PathTerminal);\n            _this.CONSUME(sparqlTokenMap.END);\n            _this.SUBRULE1(_this.PathTerminal);\n            _this.SUBRULE(_this.Via);\n            _this.OPTION(function () { return _this.SUBRULE(_this.MaxLength); });\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.Via = _this.RULE('Via', function () {\n            _this.CONSUME(sparqlTokenMap.VIA);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.Path); } },\n            ]);\n        });\n        _this.PathTerminal = _this.RULE('PathTerminal', function () {\n            _this.SUBRULE(_this.Var);\n            _this.OPTION(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.Equals);\n                            _this.SUBRULE(_this.iri);\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                ]);\n            });\n        });\n        _this.PathSpec = _this.RULE('PathSpec', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_SHORTEST); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_ALL); } },\n            ]);\n            _this.OPTION1(function () { return _this.CONSUME(sparqlTokenMap.CYCLIC); });\n        });\n        _this.GraphPatternNotTriples = _this.OVERRIDE_RULE('GraphPatternNotTriples', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupOrUnionGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.OptionalGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.MinusGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.ServiceGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Filter); } },\n                { ALT: function () { return _this.SUBRULE(_this.Bind); } },\n                { ALT: function () { return _this.SUBRULE(_this.Unnest); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineData); } },\n            ]);\n        });\n        _this.Unnest = _this.RULE('Unnest', function () {\n            _this.CONSUME(sparqlTokenMap.UNNEST);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall = _this.OVERRIDE_RULE('BuiltInCall', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Aggregate); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANGMATCHES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DATATYPE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BOUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BNODE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_RAND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ABS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CEIL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_FLOOR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ROUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONCAT); } },\n                { ALT: function () { return _this.SUBRULE(_this.SubstringExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLEN); } },\n                { ALT: function () { return _this.SUBRULE(_this.StrReplaceExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ENCODE_FOR_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONTAINS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRSTARTS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRENDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRBEFORE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRAFTER); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_YEAR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MONTH); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DAY); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_HOURS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MINUTES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SECONDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TIMEZONE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TZ); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_NOW); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRUUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MD5); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA1); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA256); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA384); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA512); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_COALESCE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IF); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRDT); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_sameTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isIRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isURI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isBlank); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isNumeric); } },\n                { ALT: function () { return _this.SUBRULE(_this.RegexExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.ExistsFunction); } },\n                { ALT: function () { return _this.SUBRULE(_this.NotExistsFunction); } },\n                // Stardog has some additional built-in functions, and supports user-defined custom functions\n                { ALT: function () { return _this.SUBRULE(_this.StardogOrCustomFunction); } },\n            ]);\n        });\n        _this.StardogOrCustomFunction = _this.RULE('StardogOrCustomFunction', function () {\n            _this.CONSUME(sparqlTokenMap.Unknown);\n            _this.SUBRULE(_this.ExpressionList);\n        });\n        _this.ConstructTemplate = _this.OVERRIDE_RULE('ConstructTemplate', function () {\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OPTION(function () {\n                // Stardog supports the request of Quads in a Construct template. See Stardog issue #675\n                return _this.SUBRULE(_this.Quads);\n            });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogSparqlParser;\n}(BaseSparqlParser));\nexport { StardogSparqlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar graphQlTokenMap = require('./tokens').graphQlTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\nvar BaseGraphQlParser = /** @class */ (function (_super) {\n    __extends(BaseGraphQlParser, _super);\n    function BaseGraphQlParser(options, tokenVocab) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, tokenVocab, __assign({ recoveryEnabled: true, outputCst: true }, options.config)) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = entryRule.call(_this);\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.Document = _this.RULE('Document', function () {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Definition); });\n        });\n        _this.Definition = _this.RULE('Definition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemExtension); } },\n            ]);\n        });\n        _this.ExecutableDefinition = _this.RULE('ExecutableDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OperationDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentDefinition); } },\n            ]);\n        });\n        _this.OperationDefinition = _this.RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.OperationType = _this.RULE('OperationType', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Query); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Mutation); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Subscription); } },\n            ]);\n        });\n        _this.SelectionSet = _this.RULE('SelectionSet', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Selection); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.Selection = _this.RULE('Selection', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Field); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineFragment); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentSpread); } },\n            ]);\n        });\n        _this.Field = _this.RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, { ARGS: [false /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Alias = _this.RULE('Alias', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n        });\n        _this.Arguments = _this.RULE('Arguments', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.Argument = _this.RULE('Argument', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.FragmentSpread = _this.RULE('FragmentSpread', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n        });\n        _this.InlineFragment = _this.RULE('InlineFragment', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.OPTION(function () { return _this.SUBRULE(_this.TypeCondition); });\n            _this.OPTION1(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.FragmentDefinition = _this.RULE('FragmentDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Fragment);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.SUBRULE(_this.TypeCondition);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.TypeCondition = _this.RULE('TypeCondition', function () {\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Value = _this.RULE('Value', function (isConst) {\n            _this.OR([\n                { GATE: function () { return !isConst; }, ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.IntValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.FloatValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.NullValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListValue, { ARGS: [isConst] }); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectValue, { ARGS: [isConst] }); } },\n            ]);\n        });\n        _this.IntValue = _this.RULE('IntValue', function () {\n            _this.CONSUME(graphQlTokenMap.IntValueToken);\n        });\n        _this.FloatValue = _this.RULE('FloatValue', function () {\n            _this.CONSUME(graphQlTokenMap.FloatValueToken);\n        });\n        _this.StringValue = _this.RULE('StringValue', function () {\n            _this.CONSUME(graphQlTokenMap.StringValueToken);\n        });\n        _this.BooleanValue = _this.RULE('BooleanValue', function () {\n            _this.CONSUME(graphQlTokenMap.BooleanValueToken);\n        });\n        _this.NullValue = _this.RULE('NullValue', function () {\n            _this.CONSUME(graphQlTokenMap.NullValueToken);\n        });\n        _this.EnumValue = _this.RULE('EnumValue', function () {\n            _this.CONSUME(graphQlTokenMap.EnumValueToken);\n        });\n        _this.ListValue = _this.RULE('ListValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.MANY(function () { return _this.SUBRULE(_this.Value, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.ObjectValue = _this.RULE('ObjectValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.ObjectField, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.ObjectField = _this.RULE('ObjectField', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.VariableDefinitions = _this.RULE('VariableDefinitions', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.VariableDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.VariableDefinition = _this.RULE('VariableDefinition', function () {\n            _this.SUBRULE(_this.Variable);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION(function () { return _this.SUBRULE(_this.DefaultValue); });\n        });\n        _this.Variable = _this.RULE('Variable', function () {\n            _this.CONSUME(graphQlTokenMap.Dollar);\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.DefaultValue = _this.RULE('DefaultValue', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.SUBRULE(_this.Value, { ARGS: [true /* isConst */] });\n        });\n        _this.Type = _this.RULE('Type', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NamedType); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListType); } },\n            ]);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Bang); });\n        });\n        _this.NamedType = _this.RULE('NamedType', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.ListType = _this.RULE('ListType', function () {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.SUBRULE(_this.Type);\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.Directives = _this.RULE('Directives', function (isConst) {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); });\n        });\n        _this.Directive = _this.RULE('Directive', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Arguments, { ARGS: [isConst] }); });\n        });\n        _this.TypeSystemDefinition = _this.RULE('TypeSystemDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.DirectiveDefinition); } },\n            ]);\n        });\n        _this.TypeSystemExtension = _this.RULE('TypeSystemExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeExtension); } },\n            ]);\n        });\n        _this.SchemaDefinition = _this.RULE('SchemaDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OPTION(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.SchemaExtension = _this.RULE('SchemaExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.OperationTypeDefinitionList); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.OperationTypeDefinitionList); } },\n            ]);\n        });\n        _this.OperationTypeDefinitionList = _this.RULE('OperationTypeDefinitionList', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.OperationTypeDefinition = _this.RULE('OperationTypeDefinition', function () {\n            _this.SUBRULE(_this.OperationType);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Description = _this.RULE('Description', function () {\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.TypeDefinition = _this.RULE('TypeDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeDefinition); } },\n            ]);\n        });\n        _this.TypeExtension = _this.RULE('TypeExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeExtension); } },\n            ]);\n        });\n        _this.ScalarTypeDefinition = _this.RULE('ScalarTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ScalarTypeExtension = _this.RULE('ScalarTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n        });\n        _this.ObjectTypeDefinition = _this.RULE('ObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ImplementsInterfaces); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.ObjectTypeExtension = _this.RULE('ObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ImplementsInterfaces);\n                        _this.OPTION(function () {\n                            return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n                        });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION2(function () { return _this.SUBRULE1(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE2(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.ImplementsInterfaces = _this.RULE('ImplementsInterfaces', function () {\n            _this.CONSUME(graphQlTokenMap.Implements);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Amp); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Amp);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.FieldsDefinition = _this.RULE('FieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.FieldDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.FieldDefinition = _this.RULE('FieldDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ArgumentsDefinition = _this.RULE('ArgumentsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.InputValueDefinition = _this.RULE('InputValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.DefaultValue); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.InterfaceTypeDefinition = _this.RULE('InterfaceTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.InterfaceTypeExtension = _this.RULE('InterfaceTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.UnionTypeDefinition = _this.RULE('UnionTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n        });\n        _this.UnionMemberTypes = _this.RULE('UnionMemberTypes', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.UnionTypeExtension = _this.RULE('UnionTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.UnionMemberTypes); } },\n            ]);\n        });\n        _this.EnumTypeDefinition = _this.RULE('EnumTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n        });\n        _this.EnumValuesDefinition = _this.RULE('EnumValuesDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.EnumValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.EnumValueDefinition = _this.RULE('EnumValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.SUBRULE(_this.EnumValue);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.EnumTypeExtension = _this.RULE('EnumTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.EnumValuesDefinition); } },\n            ]);\n        });\n        _this.InputObjectTypeDefinition = _this.RULE('InputObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.InputFieldsDefinition); });\n        });\n        _this.InputFieldsDefinition = _this.RULE('InputFieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.InputObjectTypeExtension = _this.RULE('InputObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.InputFieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.InputFieldsDefinition); } },\n            ]);\n        });\n        _this.DirectiveDefinition = _this.RULE('DirectiveDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.DirectiveToken);\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.DirectiveLocations);\n        });\n        _this.DirectiveLocations = _this.RULE('DirectiveLocations', function () {\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.DirectiveLocation);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.DirectiveLocation);\n            });\n        });\n        _this.DirectiveLocation = _this.RULE('DirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDirectiveLocation); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDirectiveLocation); } },\n            ]);\n        });\n        _this.ExecutableDirectiveLocation = _this.RULE('ExecutableDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.QUERY); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.MUTATION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SUBSCRIPTION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_SPREAD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INLINE_FRAGMENT); } },\n            ]);\n        });\n        _this.TypeSystemDirectiveLocation = _this.RULE('TypeSystemDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCHEMA); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCALAR); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ARGUMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INTERFACE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.UNION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM_VALUE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_FIELD_DEFINITION); } },\n            ]);\n        });\n        _this.lexer = new Lexer(tokenVocab);\n        return _this;\n    }\n    return BaseGraphQlParser;\n}(Parser));\nexport { BaseGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar graphQlTokens = require('./tokens').graphQlTokens;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nvar StandardGraphQlParser = /** @class */ (function (_super) {\n    __extends(StandardGraphQlParser, _super);\n    function StandardGraphQlParser(options) {\n        var _this = _super.call(this, options, graphQlTokens) || this;\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StandardGraphQlParser;\n}(BaseGraphQlParser));\nexport { StandardGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { StardogSparqlParser } from '../sparql/StardogSparqlParser';\n// Returns a custom visitor that extends the BaseVisitor for the\n// StardogGraphQlParser. When the visitor encounters any custom Stardog\n// directive that can contain a SPARQL expression, it locates the expression\n// and ensures that it parses as valid SPARQL (by delegating to the\n// StardogSparqlParser).\nexport var getStardogGraphQlVisitor = function (BaseVisitor) {\n    var StardogGraphQlVisitor = /** @class */ (function (_super) {\n        __extends(StardogGraphQlVisitor, _super);\n        function StardogGraphQlVisitor() {\n            var _this = _super.call(this) || this;\n            _this.sparqlErrors = [];\n            _this.visit = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                _super.prototype.visit.apply(_this, args);\n                return {\n                    errors: _this.sparqlErrors.map(function (error) { return (__assign({}, error, { name: \"SPARQL Error: \" + error.name })); }),\n                };\n            };\n            _this.BindDirective = function (ctx) {\n                var _a;\n                if (!ctx.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = ctx.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with thoe returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            _this.ConditionalStardogDirective = function (ctx) {\n                var _a;\n                var conditionalStardogDirectiveArgumentsNode = ctx.ConditionalStardogDirectiveArguments[0];\n                if (!conditionalStardogDirectiveArgumentsNode.children.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = conditionalStardogDirectiveArgumentsNode\n                    .children.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with thoe returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            // Make the SPARQL errors have proper locations for use in error\n            // diagnostics. NOTE: This does NOT modify the locations of the error's\n            // `previousToken` property. If that ends up being needed, it's a TODO.\n            _this.$mapErrors = function (errors, tokenForOffset, offsetPadding) {\n                if (offsetPadding === void 0) { offsetPadding = 0; }\n                var tokenStartOffset = tokenForOffset.startOffset, tokenEndOffset = tokenForOffset.endOffset, tokenStartColumn = tokenForOffset.startColumn, tokenEndColumn = tokenForOffset.endColumn;\n                return errors.map(function (error) {\n                    var token = error.token;\n                    var errorStartOffset = token.startOffset, errorEndOffset = token.endOffset, errorStartColumn = token.startColumn, errorEndColumn = token.endColumn;\n                    return __assign({}, error, { token: __assign({}, token, { startOffset: tokenStartOffset + errorStartOffset + offsetPadding, endOffset: tokenEndOffset + errorEndOffset + offsetPadding, startColumn: tokenStartColumn + errorStartColumn + offsetPadding, endColumn: tokenEndColumn + errorEndColumn + offsetPadding, startLine: tokenForOffset.startLine, endLine: tokenForOffset.endLine }) });\n                });\n            };\n            _this.$parseSparqlExpression = function (stringValueToken) {\n                var innerExpressionImage = stringValueToken.image.slice(1, -1); // remove quotes\n                return _this.stardogSparqlParser.parse(innerExpressionImage, _this.stardogSparqlParser.Expression);\n            };\n            _this.$resetState = function () {\n                _this.sparqlErrors = [];\n            };\n            _this.stardogSparqlParser = new StardogSparqlParser();\n            _this.validateVisitor();\n            return _this;\n        }\n        return StardogGraphQlVisitor;\n    }(BaseVisitor));\n    return new StardogGraphQlVisitor();\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), stardogGraphQlTokens = _a.stardogGraphQlTokens, stardogGraphQlTokenMap = _a.stardogGraphQlTokenMap;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nimport { getStardogGraphQlVisitor } from 'graphql/StardogGraphQlVisitor';\nvar StardogGraphQlParser = /** @class */ (function (_super) {\n    __extends(StardogGraphQlParser, _super);\n    function StardogGraphQlParser(options) {\n        var _this = _super.call(this, options, stardogGraphQlTokens) || this;\n        _this.visitCst = function (cst) {\n            // To save resources while parsing, the visitor is a singleton.\n            if (!_this.stardogGraphQlVisitor) {\n                var BaseStardogGraphQlVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.stardogGraphQlVisitor = getStardogGraphQlVisitor(BaseStardogGraphQlVisitor);\n            }\n            else {\n                _this.stardogGraphQlVisitor.$resetState();\n            }\n            return _this.stardogGraphQlVisitor.visit(cst, _this.input);\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.tokenize(document);\n            var cst = entryRule.call(_this);\n            var sparqlErrors = _this.visitCst(cst).errors;\n            var graphQlErrors = _this.errors;\n            return {\n                errors: graphQlErrors.concat(sparqlErrors),\n                cst: cst,\n            };\n        };\n        _this.OperationDefinition = _this.OVERRIDE_RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () {\n                            return _this.SUBRULE(_this.Directives, {\n                                ARGS: [false /* isConst */, true /* isTopLevel */],\n                            });\n                        });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.Directives = _this.OVERRIDE_RULE('Directives', function (isConst, isTopLevel) {\n            if (isTopLevel === void 0) { isTopLevel = false; }\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            return _this.SUBRULE(_this.StardogDirective, { ARGS: [isTopLevel] });\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); } },\n                ]);\n            });\n        });\n        _this.Field = _this.OVERRIDE_RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, {\n                    ARGS: [false /* isConst */, true /* isField */],\n                });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Arguments = _this.OVERRIDE_RULE('Arguments', function (isConst, isField) {\n            if (isField === void 0) { isField = false; }\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        GATE: function () { return isField; },\n                        ALT: function () { return _this.SUBRULE(_this.StardogArgument); },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); } },\n                ]);\n            });\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.StardogArgument = _this.RULE('StardogArgument', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.SkipArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.OffsetArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.FirstArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.LimitArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.IriArgument); } },\n            ]);\n        });\n        _this.StardogDirective = _this.RULE('StardogDirective', function (isTopLevel) {\n            _this.CONSUME(stardogGraphQlTokenMap.At);\n            _this.OR([\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.ConditionalStardogDirective); },\n                },\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.BareStardogDirective); },\n                },\n                { GATE: function () { return !isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.BindDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.PrefixDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.ConfigDirective); } },\n            ]);\n        });\n        _this.ConditionalStardogDirective = _this.RULE('ConditionalStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SkipDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.IncludeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.FilterDirective); } },\n            ]);\n            _this.SUBRULE(_this.ConditionalStardogDirectiveArguments);\n        });\n        _this.SkipDirective = _this.RULE('SkipDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n        });\n        _this.IncludeDirective = _this.RULE('IncludeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IncludeDirectiveToken);\n        });\n        _this.FilterDirective = _this.RULE('FilterDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FilterDirectiveToken);\n        });\n        _this.ConditionalStardogDirectiveArguments = _this.RULE('ConditionalStardogDirectiveArguments', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.IfArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.BareStardogDirective = _this.RULE('BareStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OptionalDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.HideDirective); } },\n            ]);\n        });\n        _this.OptionalDirective = _this.RULE('OptionalDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OptionalDirectiveToken);\n        });\n        _this.TypeDirective = _this.RULE('TypeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n        });\n        _this.HideDirective = _this.RULE('HideDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.HideDirectiveToken);\n        });\n        _this.BindDirective = _this.RULE('BindDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.BindDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.ToArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.StringValue);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.PrefixDirective = _this.RULE('PrefixDirective', function (isConst) {\n            _this.CONSUME(stardogGraphQlTokenMap.PrefixDirectiveToken);\n            _this.SUBRULE(_this.Arguments, { ARGS: [isConst] });\n        });\n        _this.ConfigDirective = _this.RULE('ConfigDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.ConfigDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveAlias); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveGraph); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveType); },\n                },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.ConfigDirectiveAlias = _this.RULE('ConfigDirectiveAlias', function () {\n            _this.SUBRULE(_this.AliasArgument);\n            _this.OPTION(function () {\n                _this.OR1([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE(_this.GraphArgument);\n                            _this.OPTION1(function () { return _this.SUBRULE(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.TypeArgument);\n                            _this.OPTION2(function () { return _this.SUBRULE1(_this.GraphArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveGraph = _this.RULE('ConfigDirectiveGraph', function () {\n            _this.SUBRULE2(_this.GraphArgument);\n            _this.OPTION3(function () {\n                _this.OR2([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.AliasArgument);\n                            _this.OPTION4(function () { return _this.SUBRULE2(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.TypeArgument);\n                            _this.OPTION5(function () { return _this.SUBRULE2(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveType = _this.RULE('ConfigDirectiveType', function () {\n            _this.SUBRULE4(_this.TypeArgument);\n            _this.OPTION6(function () {\n                _this.OR3([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.AliasArgument);\n                            _this.OPTION7(function () { return _this.SUBRULE3(_this.GraphArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE4(_this.GraphArgument);\n                            _this.OPTION8(function () { return _this.SUBRULE4(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.AliasArgument = _this.RULE('AliasArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.AliasArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.AliasArgumentField); });\n            _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n        });\n        _this.AliasArgumentField = _this.RULE('AliasArgumentField', function () {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.GraphArgument = _this.RULE('GraphArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.GraphArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.MANY(function () { return _this.SUBRULE1(_this.EnumValue); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.TypeArgument = _this.RULE('TypeArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.OrderByArgument = _this.RULE('OrderByArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgumentField); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.AT_LEAST_ONE(function () { return _this.SUBRULE1(_this.OrderByArgumentField); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentField = _this.RULE('OrderByArgumentField', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n                        _this.OR1([\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE(_this.OrderByArgumentFieldProperty);\n                                    _this.OPTION(function () {\n                                        return _this.SUBRULE(_this.OrderByArgumentDescProperty);\n                                    });\n                                },\n                            },\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE1(_this.OrderByArgumentDescProperty);\n                                    _this.SUBRULE1(_this.OrderByArgumentFieldProperty);\n                                },\n                            },\n                        ]);\n                        _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentFieldProperty = _this.RULE('OrderByArgumentFieldProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentFieldPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n        });\n        _this.OrderByArgumentDescProperty = _this.RULE('OrderByArgumentDescProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentDescPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.SkipArgument = _this.RULE('SkipArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.OffsetArgument = _this.RULE('OffsetArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OffsetArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.FirstArgument = _this.RULE('FirstArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FirstArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.LimitArgument = _this.RULE('LimitArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LimitArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.IriArgument = _this.RULE('IriArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IriArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.EnumValue);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogGraphQlParser;\n}(BaseGraphQlParser));\nexport { StardogGraphQlParser };\n","export * from './BaseGraphQlParser';\nexport * from './StandardGraphQlParser';\nexport * from './StardogGraphQlParser';\nexport * from './tokens';\n"],"sourceRoot":""}