{"version":3,"sources":["webpack://millan.[name]/webpack/universalModuleDefinition","webpack://millan.[name]/webpack/bootstrap","webpack://millan.[name]/./src/sparql/StardogSparqlParser.ts","webpack://millan.[name]/./src/graphql/tokens.ts","webpack://millan.[name]/./src/graphql/BaseGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StandardGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlVisitor.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlParser.ts","webpack://millan.[name]/./src/graphql/index.ts"],"names":["root","factory","exports","module","define","amd","self","this","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","__webpack_exports__","StardogSparqlParser","extendStatics","_tokens__WEBPACK_IMPORTED_MODULE_0__","_BaseSparqlParser__WEBPACK_IMPORTED_MODULE_1__","chevrotain__WEBPACK_IMPORTED_MODULE_2__","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","_super","options","_this","Query","OVERRIDE_RULE","OR","ALT","SUBRULE","SelectQuery","ConstructQuery","DescribeQuery","AskQuery","PathQuery","ValuesClause","RULE","PathSpec","MANY","DatasetClause","CONSUME","START","PathTerminal","END","SUBRULE1","Via","OPTION","MaxLength","SolutionModifier","VIA","GroupGraphPattern","Var","Path","Equals","iri","PATHS","PATHS_SHORTEST","PATHS_ALL","OPTION1","CYCLIC","GraphPatternNotTriples","GroupOrUnionGraphPattern","OptionalGraphPattern","MinusGraphPattern","GraphGraphPattern","ServiceGraphPattern","Filter","Bind","Unnest","InlineData","UNNEST","LParen","Expression","AS","RParen","BuiltInCall","Aggregate","BuiltInCall_STR","BuiltInCall_LANG","BuiltInCall_LANGMATCHES","BuiltInCall_DATATYPE","BuiltInCall_BOUND","BuiltInCall_IRI","BuiltInCall_URI","BuiltInCall_BNODE","BuiltInCall_RAND","BuiltInCall_ABS","BuiltInCall_CEIL","BuiltInCall_FLOOR","BuiltInCall_ROUND","BuiltInCall_CONCAT","SubstringExpression","BuiltInCall_STRLEN","StrReplaceExpression","BuiltInCall_UCASE","BuiltInCall_LCASE","BuiltInCall_ENCODE_FOR_URI","BuiltInCall_CONTAINS","BuiltInCall_STRSTARTS","BuiltInCall_STRENDS","BuiltInCall_STRBEFORE","BuiltInCall_STRAFTER","BuiltInCall_YEAR","BuiltInCall_MONTH","BuiltInCall_DAY","BuiltInCall_HOURS","BuiltInCall_MINUTES","BuiltInCall_SECONDS","BuiltInCall_TIMEZONE","BuiltInCall_TZ","BuiltInCall_NOW","BuiltInCall_UUID","BuiltInCall_STRUUID","BuiltInCall_MD5","BuiltInCall_SHA1","BuiltInCall_SHA256","BuiltInCall_SHA384","BuiltInCall_SHA512","BuiltInCall_COALESCE","BuiltInCall_IF","BuiltInCall_STRLANG","BuiltInCall_STRDT","BuiltInCall_sameTerm","BuiltInCall_isIRI","BuiltInCall_isURI","BuiltInCall_isBlank","BuiltInCall_isLiteral","BuiltInCall_isNumeric","RegexExpression","ExistsFunction","NotExistsFunction","StardogOrCustomFunction","Unknown","ExpressionList","ConstructTemplate","LCurly","Quads","RCurly","performSelfAnalysis","__assign","assign","arguments","INTEGER_PART_PATTERN","EXPONENT_PART_PATTERN","STRING_CHARACTER_PATTERN","regex","and","many","or","BOOLEAN_PATTERN","NULL_PATTERN","ON_PATTERN","graphQlTokens","createAndPushTokenWithNameAlt","config","categories","Name","pattern","EnumValueToken","FragmentName","createAndPushToken","longer_alt","token","api","NA","StringValueToken","CATEGORIES","ignoredTokens","WhiteSpace","group","SKIPPED","UnicodeBOM","LineTerminator","Comment","Comma","punctuators","Bang","Dollar","Spread","Colon","At","LBracket","RBracket","Pipe","Amp","nonKeywordTerminals","FloatValueToken","option","IntValueToken","BlockStringToken","matchers","StringToken","BooleanValueToken","NullValueToken","keywords","Mutation","Subscription","Fragment","On","Schema","Extend","Scalar","TypeToken","Implements","Interface","Union","Enum","Input","DirectiveToken","QUERY","MUTATION","SUBSCRIPTION","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","FIELD","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","ENUM","INPUT_OBJECT","INPUT_FIELD_DEFINITION","graphQlTokenMap","stardogDirectives","sort","reduce","accumulator","_a","toUpperCase","tokenMap","orderedTokens","concat","stardogArguments","stardogOrderByArgumentFieldPropertyToken","stardogOrderByArgumentDescPropertyToken","stardogGraphQlTokenMap","OrderByArgumentFieldPropertyToken","OrderByArgumentDescPropertyToken","stardogGraphQlTokens","finalTokens","BaseGraphQlParser_assign","BaseGraphQlParser_BaseGraphQlParser","BaseGraphQlParser","tokenVocab","recoveryEnabled","outputCst","tokenize","document","lexer","tokens","parse","entryRule","Document","input","cst","errors","AT_LEAST_ONE","Definition","ExecutableDefinition","TypeSystemDefinition","TypeSystemExtension","OperationDefinition","FragmentDefinition","SelectionSet","OperationType","VariableDefinitions","OPTION2","Directives","Selection","Field","InlineFragment","FragmentSpread","Alias","Arguments","ARGS","OPTION3","isConst","Argument","Value","TypeCondition","NamedType","GATE","Variable","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","VariableDefinition","Type","DefaultValue","ListType","Directive","SchemaDefinition","TypeDefinition","DirectiveDefinition","SchemaExtension","TypeExtension","OperationTypeDefinition","OperationTypeDefinitionList","Description","ScalarTypeDefinition","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","InputObjectTypeDefinition","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","ImplementsInterfaces","FieldsDefinition","SUBRULE2","CONSUME1","FieldDefinition","ArgumentsDefinition","InputValueDefinition","UnionMemberTypes","EnumValuesDefinition","EnumValueDefinition","InputFieldsDefinition","DirectiveLocations","DirectiveLocation","ExecutableDirectiveLocation","TypeSystemDirectiveLocation","StandardGraphQlParser_extends","StandardGraphQlParser_StandardGraphQlParser","StandardGraphQlParser","StardogGraphQlVisitor_extends","StardogGraphQlVisitor_assign","getStardogGraphQlVisitor","BaseVisitor","StardogGraphQlVisitor","sparqlErrors","visit","args","_i","map","error","BindDirective","ctx","stringValueToken","children","$parseSparqlExpression","$mapErrors","ConditionalStardogDirective","conditionalStardogDirectiveArgumentsNode","ConditionalStardogDirectiveArguments","tokenForOffset","offsetPadding","tokenStartOffset","startOffset","tokenEndOffset","endOffset","tokenStartColumn","startColumn","tokenEndColumn","endColumn","errorStartOffset","errorEndOffset","errorStartColumn","errorEndColumn","startLine","endLine","innerExpressionImage","image","stardogSparqlParser","$resetState","validateVisitor","StardogGraphQlParser_extends","StardogGraphQlParser_StardogGraphQlParser","StardogGraphQlParser","visitCst","stardogGraphQlVisitor","BaseStardogGraphQlVisitor","getBaseCstVisitorConstructorWithDefaults","isTopLevel","StardogDirective","isField","StardogArgument","OrderByArgument","SkipArgument","OffsetArgument","FirstArgument","LimitArgument","IriArgument","BareStardogDirective","PrefixDirective","ConfigDirective","SkipDirective","IncludeDirective","FilterDirective","SkipDirectiveToken","IncludeDirectiveToken","FilterDirectiveToken","IfArgumentToken","OptionalDirective","TypeDirective","HideDirective","OptionalDirectiveToken","HideDirectiveToken","BindDirectiveToken","ToArgumentToken","PrefixDirectiveToken","ConfigDirectiveToken","ConfigDirectiveAlias","ConfigDirectiveGraph","ConfigDirectiveType","AliasArgument","OR1","GraphArgument","TypeArgument","OR2","OPTION4","SUBRULE3","OPTION5","SUBRULE4","OPTION6","OR3","OPTION7","OPTION8","AliasArgumentToken","AliasArgumentField","GraphArgumentToken","OrderByArgumentToken","OrderByArgumentField","OrderByArgumentFieldProperty","OrderByArgumentDescProperty","OffsetArgumentToken","FirstArgumentToken","LimitArgumentToken","IriArgumentToken"],"mappings":"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","file":"millan.graphql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"graphql\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"graphql\"] = factory();\n\telse\n\t\troot[\"millan\"] = root[\"millan\"] || {}, root[\"millan\"][\"graphql\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([60,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { sparqlTokenMap, stardogSparqlTokens } from './tokens';\nimport { BaseSparqlParser } from './BaseSparqlParser';\nimport { Parser } from 'chevrotain';\nvar StardogSparqlParser = /** @class */ (function (_super) {\n    __extends(StardogSparqlParser, _super);\n    function StardogSparqlParser(options) {\n        var _this = _super.call(this, options, stardogSparqlTokens) || this;\n        _this.Query = _this.OVERRIDE_RULE('Query', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.ConstructQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.DescribeQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.AskQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.PathQuery); } },\n            ]);\n            _this.SUBRULE(_this.ValuesClause);\n        });\n        _this.PathQuery = _this.RULE('PathQuery', function () {\n            _this.SUBRULE(_this.PathSpec);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.CONSUME(sparqlTokenMap.START);\n            _this.SUBRULE(_this.PathTerminal);\n            _this.CONSUME(sparqlTokenMap.END);\n            _this.SUBRULE1(_this.PathTerminal);\n            _this.SUBRULE(_this.Via);\n            _this.OPTION(function () { return _this.SUBRULE(_this.MaxLength); });\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.Via = _this.RULE('Via', function () {\n            _this.CONSUME(sparqlTokenMap.VIA);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.Path); } },\n            ]);\n        });\n        _this.PathTerminal = _this.RULE('PathTerminal', function () {\n            _this.SUBRULE(_this.Var);\n            _this.OPTION(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.Equals);\n                            _this.SUBRULE(_this.iri);\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                ]);\n            });\n        });\n        _this.PathSpec = _this.RULE('PathSpec', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_SHORTEST); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_ALL); } },\n            ]);\n            _this.OPTION1(function () { return _this.CONSUME(sparqlTokenMap.CYCLIC); });\n        });\n        _this.GraphPatternNotTriples = _this.OVERRIDE_RULE('GraphPatternNotTriples', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupOrUnionGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.OptionalGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.MinusGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.ServiceGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Filter); } },\n                { ALT: function () { return _this.SUBRULE(_this.Bind); } },\n                { ALT: function () { return _this.SUBRULE(_this.Unnest); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineData); } },\n            ]);\n        });\n        _this.Unnest = _this.RULE('Unnest', function () {\n            _this.CONSUME(sparqlTokenMap.UNNEST);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall = _this.OVERRIDE_RULE('BuiltInCall', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Aggregate); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANGMATCHES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DATATYPE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BOUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BNODE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_RAND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ABS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CEIL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_FLOOR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ROUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONCAT); } },\n                { ALT: function () { return _this.SUBRULE(_this.SubstringExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLEN); } },\n                { ALT: function () { return _this.SUBRULE(_this.StrReplaceExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ENCODE_FOR_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONTAINS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRSTARTS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRENDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRBEFORE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRAFTER); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_YEAR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MONTH); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DAY); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_HOURS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MINUTES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SECONDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TIMEZONE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TZ); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_NOW); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRUUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MD5); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA1); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA256); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA384); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA512); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_COALESCE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IF); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRDT); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_sameTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isIRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isURI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isBlank); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isNumeric); } },\n                { ALT: function () { return _this.SUBRULE(_this.RegexExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.ExistsFunction); } },\n                { ALT: function () { return _this.SUBRULE(_this.NotExistsFunction); } },\n                // Stardog has some additional built-in functions, and supports user-defined custom functions\n                { ALT: function () { return _this.SUBRULE(_this.StardogOrCustomFunction); } },\n            ]);\n        });\n        _this.StardogOrCustomFunction = _this.RULE('StardogOrCustomFunction', function () {\n            _this.CONSUME(sparqlTokenMap.Unknown);\n            _this.SUBRULE(_this.ExpressionList);\n        });\n        _this.ConstructTemplate = _this.OVERRIDE_RULE('ConstructTemplate', function () {\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OPTION(function () {\n                // Stardog supports the request of Quads in a Construct template. See Stardog issue #675\n                return _this.SUBRULE(_this.Quads);\n            });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogSparqlParser;\n}(BaseSparqlParser));\nexport { StardogSparqlParser };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createToken, Lexer } from 'chevrotain';\nimport { regex } from 'helpers/regex';\nimport { STRING_LITERAL_LONG2 } from 'helpers/matchers';\n// Patterns:\nvar NAME_PATTERN = /[_A-Za-z][_0-9A-Za-z]*/;\nvar INTEGER_PART_PATTERN = /\\-?(?:0|[1-9][0-9]*)/;\nvar EXPONENT_PART_PATTERN = /[eE][+-]?[0-9]+/;\nvar ESCAPED_CHARACTER_PATTERN = /\\\\[\"\\\\/bfnrt]/;\nvar ESCAPED_UNICODE_PATTERN = /\\\\u[0-9A-Fa-f]{4}/;\nvar STRING_SOURCE_CHARACTER_PATTERN = /[\\u0009\\u0020\\u0021\\u0023-\\u005B\\u005D-\\uFFFF]/; // source character, but no '\"' or '\\' or line terminators\nvar STRING_CHARACTER_PATTERN = regex.and(/\"/, regex.many(regex.or(STRING_SOURCE_CHARACTER_PATTERN, ESCAPED_UNICODE_PATTERN, ESCAPED_CHARACTER_PATTERN)), /\"/);\nvar BOOLEAN_PATTERN = /true|false/;\nvar NULL_PATTERN = /null/;\nvar ON_PATTERN = /on/;\n// Holder of tokens; tokens are generally added and created in order, below.\nvar graphQlTokens = [];\n// Utility used primarily for keywords, which should also be counted as\n// matching the `Name` token and (except for special cases) the\n// `EnumValueToken` and `FragmentName` tokens. Ensures the created token has\n// those other tokens as categories, and ensures that `Name` will be matched\n// correctly for tokens that start with keyword characters but have additional\n// characters. Adds the created token to the `graphQlTokens` array.\nvar createAndPushTokenWithNameAlt = function (config) {\n    var categories = [Name];\n    if (config.pattern !== BOOLEAN_PATTERN && config.pattern !== NULL_PATTERN) {\n        categories.push(EnumValueToken);\n    }\n    if (config.pattern !== ON_PATTERN) {\n        categories.push(FragmentName);\n    }\n    return createAndPushToken({\n        name: config.name,\n        pattern: config.pattern,\n        longer_alt: Name,\n        categories: categories,\n    });\n};\n// Simple wrapper for `createToken` that also pushes the created token into\n// `graphQlTokens` at the time of creation, since order matters.\nvar createAndPushToken = function (config) {\n    var token = createToken(config);\n    graphQlTokens.push(token);\n    return token;\n};\n// Category tokens need to be created first, so they can be referenced by other\n// tokens. They are _not_ yet added to the `graphQlTokens` array so that they\n// do not match before various more specific keywords.\nvar Name = createToken({ name: 'Name', pattern: NAME_PATTERN });\n// `EnumValueToken` and `FragmentName` are purely abstract categories that will\n// be matched for all `Name` tokens _except_ the special tokens specified in\n// the GraphQL grammar. See `createAndPushTokenWithNameAlt` for details.\nvar EnumValueToken = createToken({\n    name: 'EnumValueToken',\n    pattern: Lexer.NA,\n});\nvar FragmentName = createToken({\n    name: 'FragmentName',\n    pattern: Lexer.NA,\n});\n// `StringValueToken` will make either BlockStrings or Strings.\nvar StringValueToken = createToken({\n    name: 'StringValueToken',\n    pattern: Lexer.NA,\n});\n// Generally, anything that matches `Name` should match `EnumValueToken` and\n// `FragmentName`. NOTE, however that `On` will not match `FragmentName` and\n// `BooleanValueToken` and `NullValueToken` will not match `EnumValueToken`, in\n// accordance with the official grammar; this is handled by the fact that the\n// `On`, `BooleanValueToken`, and `FragmentName` tokens are defined and pushed\n// into the tokens array earlier than `Name`. Given\n// `createAndPushTokenWithNameAlt`, the latter tokens will also be treated as\n// `Name` tokens, but will NOT be treated as instances of the relevant\n// `EnumValueToken` or `FragmentName`. That's exactly what we want.\nName.CATEGORIES.push(EnumValueToken, FragmentName);\nvar ignoredTokens = {\n    WhiteSpace: createAndPushToken({\n        name: 'WhiteSpace',\n        pattern: /[ \\t]+/,\n        group: Lexer.SKIPPED,\n    }),\n    UnicodeBOM: createAndPushToken({\n        name: 'UnicodeBOM',\n        pattern: '\\\\uFFFE',\n        group: Lexer.SKIPPED,\n    }),\n    LineTerminator: createAndPushToken({\n        name: 'LineTerminator',\n        pattern: /\\n\\r|\\r|\\n/,\n        group: Lexer.SKIPPED,\n    }),\n    Comment: createAndPushToken({\n        name: 'Comment',\n        pattern: /#[^\\n\\r]*/,\n        group: Lexer.SKIPPED,\n    }),\n    Comma: createAndPushToken({\n        name: 'Comma',\n        pattern: ',',\n        group: Lexer.SKIPPED,\n    }),\n};\nvar punctuators = {\n    Bang: createAndPushToken({ name: 'Bang', pattern: '!' }),\n    Dollar: createAndPushToken({ name: 'Dollar', pattern: '$' }),\n    LParen: createAndPushToken({ name: 'LParen', pattern: '(' }),\n    RParen: createAndPushToken({ name: 'RParen', pattern: ')' }),\n    Spread: createAndPushToken({ name: 'Spread', pattern: '...' }),\n    Colon: createAndPushToken({ name: 'Colon', pattern: ':' }),\n    Equals: createAndPushToken({ name: 'Equals', pattern: '=' }),\n    At: createAndPushToken({ name: 'At', pattern: '@' }),\n    LBracket: createAndPushToken({ name: 'LBracket', pattern: '[' }),\n    RBracket: createAndPushToken({ name: 'RBracket', pattern: ']' }),\n    LCurly: createAndPushToken({ name: 'LCurly', pattern: '{' }),\n    RCurly: createAndPushToken({ name: 'RCurly', pattern: '}' }),\n    Pipe: createAndPushToken({ name: 'Pipe', pattern: '|' }),\n    Amp: createAndPushToken({ name: 'Amp', pattern: '&' }),\n};\nvar nonKeywordTerminals = {\n    FloatValueToken: createAndPushToken({\n        name: 'FloatValueToken',\n        pattern: regex.and(INTEGER_PART_PATTERN, regex.or(regex.and(/\\.[0-9]+/, regex.option(EXPONENT_PART_PATTERN)), EXPONENT_PART_PATTERN)),\n    }),\n    IntValueToken: createAndPushToken({\n        name: 'IntValueToken',\n        pattern: INTEGER_PART_PATTERN,\n    }),\n    BlockStringToken: createAndPushToken({\n        name: 'BlockStringToken',\n        pattern: STRING_LITERAL_LONG2,\n        categories: [StringValueToken],\n    }),\n    StringToken: createAndPushToken({\n        name: 'StringToken',\n        pattern: STRING_CHARACTER_PATTERN,\n        categories: [StringValueToken],\n    }),\n    BooleanValueToken: createAndPushTokenWithNameAlt({\n        name: 'BooleanValueToken',\n        pattern: BOOLEAN_PATTERN,\n    }),\n    NullValueToken: createAndPushTokenWithNameAlt({\n        name: 'NullValueToken',\n        pattern: NULL_PATTERN,\n    }),\n    EnumValueToken: EnumValueToken,\n    FragmentName: FragmentName,\n    Name: Name,\n    StringValueToken: StringValueToken,\n};\nvar keywords = {\n    Query: createAndPushTokenWithNameAlt({\n        name: 'Query',\n        pattern: 'query',\n    }),\n    Mutation: createAndPushTokenWithNameAlt({\n        name: 'Mutation',\n        pattern: 'mutation',\n    }),\n    Subscription: createAndPushTokenWithNameAlt({\n        name: 'Subscription',\n        pattern: 'subscription',\n    }),\n    Fragment: createAndPushTokenWithNameAlt({\n        name: 'Fragment',\n        pattern: 'fragment',\n    }),\n    On: createAndPushTokenWithNameAlt({\n        name: 'On',\n        pattern: ON_PATTERN,\n    }),\n    Schema: createAndPushTokenWithNameAlt({\n        name: 'Schema',\n        pattern: 'schema',\n    }),\n    Extend: createAndPushTokenWithNameAlt({\n        name: 'Extend',\n        pattern: 'extend',\n    }),\n    Scalar: createAndPushTokenWithNameAlt({\n        name: 'Scalar',\n        pattern: 'scalar',\n    }),\n    TypeToken: createAndPushTokenWithNameAlt({\n        name: 'TypeToken',\n        pattern: 'type',\n    }),\n    Implements: createAndPushTokenWithNameAlt({\n        name: 'Implements',\n        pattern: 'implements',\n    }),\n    Interface: createAndPushTokenWithNameAlt({\n        name: 'Interface',\n        pattern: 'interface',\n    }),\n    Union: createAndPushTokenWithNameAlt({\n        name: 'Union',\n        pattern: 'union',\n    }),\n    Enum: createAndPushTokenWithNameAlt({\n        name: 'Enum',\n        pattern: 'enum',\n    }),\n    Input: createAndPushTokenWithNameAlt({\n        name: 'Input',\n        pattern: 'input',\n    }),\n    DirectiveToken: createAndPushTokenWithNameAlt({\n        name: 'DirectiveToken',\n        pattern: 'directive',\n    }),\n    QUERY: createAndPushTokenWithNameAlt({ name: 'QUERY', pattern: 'QUERY' }),\n    MUTATION: createAndPushTokenWithNameAlt({\n        name: 'MUTATION',\n        pattern: 'MUTATION',\n    }),\n    SUBSCRIPTION: createAndPushTokenWithNameAlt({\n        name: 'SUBSCRIPTION',\n        pattern: 'SUBSCRIPTION',\n    }),\n    FRAGMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_DEFINITION',\n        pattern: 'FRAGMENT_DEFINITION',\n    }),\n    FRAGMENT_SPREAD: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_SPREAD',\n        pattern: 'FRAGMENT_SPREAD',\n    }),\n    INLINE_FRAGMENT: createAndPushTokenWithNameAlt({\n        name: 'INLINE_FRAGMENT',\n        pattern: 'INLINE_FRAGMENT',\n    }),\n    SCHEMA: createAndPushTokenWithNameAlt({ name: 'SCHEMA', pattern: 'SCHEMA' }),\n    SCALAR: createAndPushTokenWithNameAlt({ name: 'SCALAR', pattern: 'SCALAR' }),\n    OBJECT: createAndPushTokenWithNameAlt({ name: 'OBJECT', pattern: 'OBJECT' }),\n    FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FIELD_DEFINITION',\n        pattern: 'FIELD_DEFINITION',\n    }),\n    FIELD: createAndPushTokenWithNameAlt({ name: 'FIELD', pattern: 'FIELD' }),\n    ARGUMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'ARGUMENT_DEFINITION',\n        pattern: 'ARGUMENT_DEFINITION',\n    }),\n    INTERFACE: createAndPushTokenWithNameAlt({\n        name: 'INTERFACE',\n        pattern: 'INTERFACE',\n    }),\n    UNION: createAndPushTokenWithNameAlt({ name: 'UNION', pattern: 'UNION' }),\n    ENUM_VALUE: createAndPushTokenWithNameAlt({\n        name: 'ENUM_VALUE',\n        pattern: 'ENUM_VALUE',\n    }),\n    ENUM: createAndPushTokenWithNameAlt({ name: 'ENUM', pattern: 'ENUM' }),\n    INPUT_OBJECT: createAndPushTokenWithNameAlt({\n        name: 'INPUT_OBJECT',\n        pattern: 'INPUT_OBJECT',\n    }),\n    INPUT_FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'INPUT_FIELD_DEFINITION',\n        pattern: 'INPUT_FIELD_DEFINITION',\n    }),\n};\nvar graphQlTokenMap = __assign({}, ignoredTokens, punctuators, nonKeywordTerminals, keywords, { Name: Name });\nvar stardogDirectives = [\n    'optional',\n    'bind',\n    'hide',\n    'skip',\n    'include',\n    'filter',\n    'prefix',\n    'config',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"DirectiveToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\nvar stardogArguments = [\n    'orderBy',\n    'first',\n    'to',\n    'if',\n    'alias',\n    'graph',\n    'offset',\n    'limit',\n    'iri',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"ArgumentToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\n// These two tokens aren't really arguments or directives; instead, they're\n// fields of objects that can be passed as the stardog `orderBy` argument.\nvar stardogOrderByArgumentFieldPropertyToken = createToken({\n    name: 'OrderByArgumentFieldPropertyToken',\n    pattern: 'field',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogOrderByArgumentDescPropertyToken = createToken({\n    name: 'OrderByArgumentDescPropertyToken',\n    pattern: 'desc',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogGraphQlTokenMap = __assign({}, graphQlTokenMap, stardogDirectives.tokenMap, stardogArguments.tokenMap, { OrderByArgumentFieldPropertyToken: stardogOrderByArgumentFieldPropertyToken, OrderByArgumentDescPropertyToken: stardogOrderByArgumentDescPropertyToken });\nvar stardogGraphQlTokens = graphQlTokens.concat(stardogDirectives.orderedTokens, stardogArguments.orderedTokens, [\n    stardogOrderByArgumentFieldPropertyToken,\n    stardogOrderByArgumentDescPropertyToken,\n]);\n// Add shared category and catch-all tokens.\nvar finalTokens = [FragmentName, EnumValueToken, Name, StringValueToken];\ngraphQlTokens.push.apply(graphQlTokens, finalTokens);\nstardogGraphQlTokens.push.apply(stardogGraphQlTokens, finalTokens);\nexport { graphQlTokenMap, graphQlTokens, stardogGraphQlTokenMap, stardogGraphQlTokens, };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { graphQlTokenMap } from './tokens';\nimport { Parser, Lexer, } from 'chevrotain';\nvar BaseGraphQlParser = /** @class */ (function (_super) {\n    __extends(BaseGraphQlParser, _super);\n    function BaseGraphQlParser(options, tokenVocab) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, tokenVocab, __assign({ recoveryEnabled: true, outputCst: true }, options.config)) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = entryRule.call(_this);\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.Document = _this.RULE('Document', function () {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Definition); });\n        });\n        _this.Definition = _this.RULE('Definition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemExtension); } },\n            ]);\n        });\n        _this.ExecutableDefinition = _this.RULE('ExecutableDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OperationDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentDefinition); } },\n            ]);\n        });\n        _this.OperationDefinition = _this.RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.OperationType = _this.RULE('OperationType', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Query); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Mutation); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Subscription); } },\n            ]);\n        });\n        _this.SelectionSet = _this.RULE('SelectionSet', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Selection); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.Selection = _this.RULE('Selection', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Field); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineFragment); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentSpread); } },\n            ]);\n        });\n        _this.Field = _this.RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, { ARGS: [false /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Alias = _this.RULE('Alias', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n        });\n        _this.Arguments = _this.RULE('Arguments', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.Argument = _this.RULE('Argument', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.FragmentSpread = _this.RULE('FragmentSpread', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n        });\n        _this.InlineFragment = _this.RULE('InlineFragment', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.OPTION(function () { return _this.SUBRULE(_this.TypeCondition); });\n            _this.OPTION1(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.FragmentDefinition = _this.RULE('FragmentDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Fragment);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.SUBRULE(_this.TypeCondition);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.TypeCondition = _this.RULE('TypeCondition', function () {\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Value = _this.RULE('Value', function (isConst) {\n            _this.OR([\n                { GATE: function () { return !isConst; }, ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.IntValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.FloatValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.NullValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListValue, { ARGS: [isConst] }); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectValue, { ARGS: [isConst] }); } },\n            ]);\n        });\n        _this.IntValue = _this.RULE('IntValue', function () {\n            _this.CONSUME(graphQlTokenMap.IntValueToken);\n        });\n        _this.FloatValue = _this.RULE('FloatValue', function () {\n            _this.CONSUME(graphQlTokenMap.FloatValueToken);\n        });\n        _this.StringValue = _this.RULE('StringValue', function () {\n            _this.CONSUME(graphQlTokenMap.StringValueToken);\n        });\n        _this.BooleanValue = _this.RULE('BooleanValue', function () {\n            _this.CONSUME(graphQlTokenMap.BooleanValueToken);\n        });\n        _this.NullValue = _this.RULE('NullValue', function () {\n            _this.CONSUME(graphQlTokenMap.NullValueToken);\n        });\n        _this.EnumValue = _this.RULE('EnumValue', function () {\n            _this.CONSUME(graphQlTokenMap.EnumValueToken);\n        });\n        _this.ListValue = _this.RULE('ListValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.MANY(function () { return _this.SUBRULE(_this.Value, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.ObjectValue = _this.RULE('ObjectValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.ObjectField, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.ObjectField = _this.RULE('ObjectField', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.VariableDefinitions = _this.RULE('VariableDefinitions', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.VariableDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.VariableDefinition = _this.RULE('VariableDefinition', function () {\n            _this.SUBRULE(_this.Variable);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION(function () { return _this.SUBRULE(_this.DefaultValue); });\n        });\n        _this.Variable = _this.RULE('Variable', function () {\n            _this.CONSUME(graphQlTokenMap.Dollar);\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.DefaultValue = _this.RULE('DefaultValue', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.SUBRULE(_this.Value, { ARGS: [true /* isConst */] });\n        });\n        _this.Type = _this.RULE('Type', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NamedType); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListType); } },\n            ]);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Bang); });\n        });\n        _this.NamedType = _this.RULE('NamedType', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.ListType = _this.RULE('ListType', function () {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.SUBRULE(_this.Type);\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.Directives = _this.RULE('Directives', function (isConst) {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); });\n        });\n        _this.Directive = _this.RULE('Directive', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Arguments, { ARGS: [isConst] }); });\n        });\n        _this.TypeSystemDefinition = _this.RULE('TypeSystemDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.DirectiveDefinition); } },\n            ]);\n        });\n        _this.TypeSystemExtension = _this.RULE('TypeSystemExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeExtension); } },\n            ]);\n        });\n        _this.SchemaDefinition = _this.RULE('SchemaDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OPTION(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.SchemaExtension = _this.RULE('SchemaExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.OperationTypeDefinitionList); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.OperationTypeDefinitionList); } },\n            ]);\n        });\n        _this.OperationTypeDefinitionList = _this.RULE('OperationTypeDefinitionList', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.OperationTypeDefinition = _this.RULE('OperationTypeDefinition', function () {\n            _this.SUBRULE(_this.OperationType);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Description = _this.RULE('Description', function () {\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.TypeDefinition = _this.RULE('TypeDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeDefinition); } },\n            ]);\n        });\n        _this.TypeExtension = _this.RULE('TypeExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeExtension); } },\n            ]);\n        });\n        _this.ScalarTypeDefinition = _this.RULE('ScalarTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ScalarTypeExtension = _this.RULE('ScalarTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n        });\n        _this.ObjectTypeDefinition = _this.RULE('ObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ImplementsInterfaces); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.ObjectTypeExtension = _this.RULE('ObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ImplementsInterfaces);\n                        _this.OPTION(function () {\n                            return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n                        });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION2(function () { return _this.SUBRULE1(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE2(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.ImplementsInterfaces = _this.RULE('ImplementsInterfaces', function () {\n            _this.CONSUME(graphQlTokenMap.Implements);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Amp); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Amp);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.FieldsDefinition = _this.RULE('FieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.FieldDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.FieldDefinition = _this.RULE('FieldDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ArgumentsDefinition = _this.RULE('ArgumentsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.InputValueDefinition = _this.RULE('InputValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.DefaultValue); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.InterfaceTypeDefinition = _this.RULE('InterfaceTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.InterfaceTypeExtension = _this.RULE('InterfaceTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.UnionTypeDefinition = _this.RULE('UnionTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n        });\n        _this.UnionMemberTypes = _this.RULE('UnionMemberTypes', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.UnionTypeExtension = _this.RULE('UnionTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.UnionMemberTypes); } },\n            ]);\n        });\n        _this.EnumTypeDefinition = _this.RULE('EnumTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n        });\n        _this.EnumValuesDefinition = _this.RULE('EnumValuesDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.EnumValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.EnumValueDefinition = _this.RULE('EnumValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.SUBRULE(_this.EnumValue);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.EnumTypeExtension = _this.RULE('EnumTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.EnumValuesDefinition); } },\n            ]);\n        });\n        _this.InputObjectTypeDefinition = _this.RULE('InputObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.InputFieldsDefinition); });\n        });\n        _this.InputFieldsDefinition = _this.RULE('InputFieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.InputObjectTypeExtension = _this.RULE('InputObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.InputFieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.InputFieldsDefinition); } },\n            ]);\n        });\n        _this.DirectiveDefinition = _this.RULE('DirectiveDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.DirectiveToken);\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.DirectiveLocations);\n        });\n        _this.DirectiveLocations = _this.RULE('DirectiveLocations', function () {\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.DirectiveLocation);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.DirectiveLocation);\n            });\n        });\n        _this.DirectiveLocation = _this.RULE('DirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDirectiveLocation); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDirectiveLocation); } },\n            ]);\n        });\n        _this.ExecutableDirectiveLocation = _this.RULE('ExecutableDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.QUERY); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.MUTATION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SUBSCRIPTION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_SPREAD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INLINE_FRAGMENT); } },\n            ]);\n        });\n        _this.TypeSystemDirectiveLocation = _this.RULE('TypeSystemDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCHEMA); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCALAR); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ARGUMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INTERFACE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.UNION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM_VALUE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_FIELD_DEFINITION); } },\n            ]);\n        });\n        _this.lexer = new Lexer(tokenVocab);\n        return _this;\n    }\n    return BaseGraphQlParser;\n}(Parser));\nexport { BaseGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { graphQlTokens } from './tokens';\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nvar StandardGraphQlParser = /** @class */ (function (_super) {\n    __extends(StandardGraphQlParser, _super);\n    function StandardGraphQlParser(options) {\n        var _this = _super.call(this, options, graphQlTokens) || this;\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StandardGraphQlParser;\n}(BaseGraphQlParser));\nexport { StandardGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { StardogSparqlParser } from '../sparql/StardogSparqlParser';\n// Returns a custom visitor that extends the BaseVisitor for the\n// StardogGraphQlParser. When the visitor encounters any custom Stardog\n// directive that can contain a SPARQL expression, it locates the expression\n// and ensures that it parses as valid SPARQL (by delegating to the\n// StardogSparqlParser).\nexport var getStardogGraphQlVisitor = function (BaseVisitor) {\n    var StardogGraphQlVisitor = /** @class */ (function (_super) {\n        __extends(StardogGraphQlVisitor, _super);\n        function StardogGraphQlVisitor() {\n            var _this = _super.call(this) || this;\n            _this.sparqlErrors = [];\n            _this.visit = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                _super.prototype.visit.apply(_this, args);\n                return {\n                    errors: _this.sparqlErrors.map(function (error) { return (__assign({}, error, { name: \"SPARQL Error: \" + error.name })); }),\n                };\n            };\n            _this.BindDirective = function (ctx) {\n                var _a;\n                if (!ctx.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = ctx.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with thoe returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            _this.ConditionalStardogDirective = function (ctx) {\n                var _a;\n                var conditionalStardogDirectiveArgumentsNode = ctx.ConditionalStardogDirectiveArguments[0];\n                if (!conditionalStardogDirectiveArgumentsNode.children.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = conditionalStardogDirectiveArgumentsNode\n                    .children.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with thoe returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            // Make the SPARQL errors have proper locations for use in error\n            // diagnostics. NOTE: This does NOT modify the locations of the error's\n            // `previousToken` property. If that ends up being needed, it's a TODO.\n            _this.$mapErrors = function (errors, tokenForOffset, offsetPadding) {\n                if (offsetPadding === void 0) { offsetPadding = 0; }\n                var tokenStartOffset = tokenForOffset.startOffset, tokenEndOffset = tokenForOffset.endOffset, tokenStartColumn = tokenForOffset.startColumn, tokenEndColumn = tokenForOffset.endColumn;\n                return errors.map(function (error) {\n                    var token = error.token;\n                    var errorStartOffset = token.startOffset, errorEndOffset = token.endOffset, errorStartColumn = token.startColumn, errorEndColumn = token.endColumn;\n                    return __assign({}, error, { token: __assign({}, token, { startOffset: tokenStartOffset + errorStartOffset + offsetPadding, endOffset: tokenEndOffset + errorEndOffset + offsetPadding, startColumn: tokenStartColumn + errorStartColumn + offsetPadding, endColumn: tokenEndColumn + errorEndColumn + offsetPadding, startLine: tokenForOffset.startLine, endLine: tokenForOffset.endLine }) });\n                });\n            };\n            _this.$parseSparqlExpression = function (stringValueToken) {\n                var innerExpressionImage = stringValueToken.image.slice(1, -1); // remove quotes\n                return _this.stardogSparqlParser.parse(innerExpressionImage, _this.stardogSparqlParser.Expression);\n            };\n            _this.$resetState = function () {\n                _this.sparqlErrors = [];\n            };\n            _this.stardogSparqlParser = new StardogSparqlParser();\n            _this.validateVisitor();\n            return _this;\n        }\n        return StardogGraphQlVisitor;\n    }(BaseVisitor));\n    return new StardogGraphQlVisitor();\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { stardogGraphQlTokens, stardogGraphQlTokenMap } from './tokens';\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nimport { getStardogGraphQlVisitor } from 'graphql/StardogGraphQlVisitor';\nvar StardogGraphQlParser = /** @class */ (function (_super) {\n    __extends(StardogGraphQlParser, _super);\n    function StardogGraphQlParser(options) {\n        var _this = _super.call(this, options, stardogGraphQlTokens) || this;\n        _this.visitCst = function (cst) {\n            // To save resources while parsing, the visitor is a singleton.\n            if (!_this.stardogGraphQlVisitor) {\n                var BaseStardogGraphQlVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.stardogGraphQlVisitor = getStardogGraphQlVisitor(BaseStardogGraphQlVisitor);\n            }\n            else {\n                _this.stardogGraphQlVisitor.$resetState();\n            }\n            return _this.stardogGraphQlVisitor.visit(cst, _this.input);\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.tokenize(document);\n            var cst = entryRule.call(_this);\n            var sparqlErrors = _this.visitCst(cst).errors;\n            var graphQlErrors = _this.errors;\n            return {\n                errors: graphQlErrors.concat(sparqlErrors),\n                cst: cst,\n            };\n        };\n        _this.OperationDefinition = _this.OVERRIDE_RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () {\n                            return _this.SUBRULE(_this.Directives, {\n                                ARGS: [false /* isConst */, true /* isTopLevel */],\n                            });\n                        });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.Directives = _this.OVERRIDE_RULE('Directives', function (isConst, isTopLevel) {\n            if (isTopLevel === void 0) { isTopLevel = false; }\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            return _this.SUBRULE(_this.StardogDirective, { ARGS: [isTopLevel] });\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); } },\n                ]);\n            });\n        });\n        _this.Field = _this.OVERRIDE_RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, {\n                    ARGS: [false /* isConst */, true /* isField */],\n                });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Arguments = _this.OVERRIDE_RULE('Arguments', function (isConst, isField) {\n            if (isField === void 0) { isField = false; }\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        GATE: function () { return isField; },\n                        ALT: function () { return _this.SUBRULE(_this.StardogArgument); },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); } },\n                ]);\n            });\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.StardogArgument = _this.RULE('StardogArgument', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.SkipArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.OffsetArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.FirstArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.LimitArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.IriArgument); } },\n            ]);\n        });\n        _this.StardogDirective = _this.RULE('StardogDirective', function (isTopLevel) {\n            _this.CONSUME(stardogGraphQlTokenMap.At);\n            _this.OR([\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.ConditionalStardogDirective); },\n                },\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.BareStardogDirective); },\n                },\n                { GATE: function () { return !isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.BindDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.PrefixDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.ConfigDirective); } },\n            ]);\n        });\n        _this.ConditionalStardogDirective = _this.RULE('ConditionalStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SkipDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.IncludeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.FilterDirective); } },\n            ]);\n            _this.SUBRULE(_this.ConditionalStardogDirectiveArguments);\n        });\n        _this.SkipDirective = _this.RULE('SkipDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n        });\n        _this.IncludeDirective = _this.RULE('IncludeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IncludeDirectiveToken);\n        });\n        _this.FilterDirective = _this.RULE('FilterDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FilterDirectiveToken);\n        });\n        _this.ConditionalStardogDirectiveArguments = _this.RULE('ConditionalStardogDirectiveArguments', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.IfArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.BareStardogDirective = _this.RULE('BareStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OptionalDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.HideDirective); } },\n            ]);\n        });\n        _this.OptionalDirective = _this.RULE('OptionalDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OptionalDirectiveToken);\n        });\n        _this.TypeDirective = _this.RULE('TypeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n        });\n        _this.HideDirective = _this.RULE('HideDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.HideDirectiveToken);\n        });\n        _this.BindDirective = _this.RULE('BindDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.BindDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.ToArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.StringValue);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.PrefixDirective = _this.RULE('PrefixDirective', function (isConst) {\n            _this.CONSUME(stardogGraphQlTokenMap.PrefixDirectiveToken);\n            _this.SUBRULE(_this.Arguments, { ARGS: [isConst] });\n        });\n        _this.ConfigDirective = _this.RULE('ConfigDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.ConfigDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveAlias); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveGraph); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveType); },\n                },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.ConfigDirectiveAlias = _this.RULE('ConfigDirectiveAlias', function () {\n            _this.SUBRULE(_this.AliasArgument);\n            _this.OPTION(function () {\n                _this.OR1([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE(_this.GraphArgument);\n                            _this.OPTION1(function () { return _this.SUBRULE(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.TypeArgument);\n                            _this.OPTION2(function () { return _this.SUBRULE1(_this.GraphArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveGraph = _this.RULE('ConfigDirectiveGraph', function () {\n            _this.SUBRULE2(_this.GraphArgument);\n            _this.OPTION3(function () {\n                _this.OR2([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.AliasArgument);\n                            _this.OPTION4(function () { return _this.SUBRULE2(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.TypeArgument);\n                            _this.OPTION5(function () { return _this.SUBRULE2(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveType = _this.RULE('ConfigDirectiveType', function () {\n            _this.SUBRULE4(_this.TypeArgument);\n            _this.OPTION6(function () {\n                _this.OR3([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.AliasArgument);\n                            _this.OPTION7(function () { return _this.SUBRULE3(_this.GraphArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE4(_this.GraphArgument);\n                            _this.OPTION8(function () { return _this.SUBRULE4(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.AliasArgument = _this.RULE('AliasArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.AliasArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.AliasArgumentField); });\n            _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n        });\n        _this.AliasArgumentField = _this.RULE('AliasArgumentField', function () {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.GraphArgument = _this.RULE('GraphArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.GraphArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.MANY(function () { return _this.SUBRULE1(_this.EnumValue); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.TypeArgument = _this.RULE('TypeArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.OrderByArgument = _this.RULE('OrderByArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgumentField); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.AT_LEAST_ONE(function () { return _this.SUBRULE1(_this.OrderByArgumentField); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentField = _this.RULE('OrderByArgumentField', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n                        _this.OR1([\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE(_this.OrderByArgumentFieldProperty);\n                                    _this.OPTION(function () {\n                                        return _this.SUBRULE(_this.OrderByArgumentDescProperty);\n                                    });\n                                },\n                            },\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE1(_this.OrderByArgumentDescProperty);\n                                    _this.SUBRULE1(_this.OrderByArgumentFieldProperty);\n                                },\n                            },\n                        ]);\n                        _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentFieldProperty = _this.RULE('OrderByArgumentFieldProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentFieldPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n        });\n        _this.OrderByArgumentDescProperty = _this.RULE('OrderByArgumentDescProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentDescPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.SkipArgument = _this.RULE('SkipArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.OffsetArgument = _this.RULE('OffsetArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OffsetArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.FirstArgument = _this.RULE('FirstArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FirstArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.LimitArgument = _this.RULE('LimitArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LimitArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.IriArgument = _this.RULE('IriArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IriArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.EnumValue);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogGraphQlParser;\n}(BaseGraphQlParser));\nexport { StardogGraphQlParser };\n","export * from './BaseGraphQlParser';\nexport * from './StandardGraphQlParser';\nexport * from './StardogGraphQlParser';\nexport * from './tokens';\n"],"sourceRoot":""}